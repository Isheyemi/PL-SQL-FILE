CREATE OR REPLACE PACKAGE BODY STGLIVE.pkg_src_fcubs
AS
   PROCEDURE prc_acvw_all_ac_entries
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'AC ENTRIES DERIVE',
                   'ACVW_ALL_AC_ENTRIES',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_acvw_all_ac_entries';

      INSERT INTO stglive.src_acvw_all_ac_entries (trn_ref_no,
                                                   ac_entry_sr_no,
                                                   event_sr_no,
                                                   event,
                                                   ac_branch,
                                                   ac_no,
                                                   ac_ccy,
                                                   category,
                                                   drcr_ind,
                                                   trn_code,
                                                   fcy_amount,
                                                   exch_rate,
                                                   lcy_amount,
                                                   trn_dt,
                                                   value_dt,
                                                   txn_init_date,
                                                   amount_tag,
                                                   related_account,
                                                   related_customer,
                                                   related_reference,
                                                   mis_head,
                                                   mis_flag,
                                                   instrument_code,
                                                   bank_code,
                                                   balance_upd,
                                                   auth_stat,
                                                   module,
                                                   cust_gl,
                                                   dly_hist,
                                                   financial_cycle,
                                                   period_code,
                                                   batch_no,
                                                   user_id,
                                                   curr_no,
                                                   print_stat,
                                                   auth_id,
                                                   glmis_val_upd_flag,
                                                   external_ref_no,
                                                   dont_showin_stmt,
                                                   ic_bal_inclusion,
                                                   aml_exception,
                                                   ib,
                                                   glmis_update_flag,
                                                   product_accrual,
                                                   orig_pnl_gl,
                                                   stmt_dt,
                                                   entry_seq_no)
         SELECT trn_ref_no,
                ac_entry_sr_no,
                event_sr_no,
                event,
                ac_branch,
                ac_no,
                ac_ccy,
                category,
                drcr_ind,
                trn_code,
                fcy_amount,
                exch_rate,
                lcy_amount,
                trn_dt,
                value_dt,
                txn_init_date,
                amount_tag,
                related_account,
                related_customer,
                related_reference,
                mis_head,
                mis_flag,
                instrument_code,
                bank_code,
                balance_upd,
                auth_stat,
                module,
                cust_gl,
                dly_hist,
                financial_cycle,
                period_code,
                batch_no,
                user_id,
                curr_no,
                print_stat,
                auth_id,
                glmis_val_upd_flag,
                external_ref_no,
                dont_showin_stmt,
                ic_bal_inclusion,
                aml_exception,
                ib,
                glmis_update_flag,
                product_accrual,
                orig_pnl_gl,
                stmt_dt,
                entry_seq_no
           FROM fcubslive.acvw_all_ac_entries@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_sttm_cust_account
   AS
--      v_message          VARCHAR2 (4000);
--      v_rows_processed   NUMBER;
--      v_date             DATE;
--      v_seq              NUMBER;
--      v_rows_count       INTEGER;
--      v_sql              VARCHAR2 (10000);

v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE;
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (32000);
      vg_date             VARCHAR2 (20);
      tab_cnt            integer;

   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;
      
      select case when today > trunc(sysdate) then prev_working_day else today end into v_date
      from src_sttm_dates where branch_code = '099';

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'CUST ACCOUNT DERIVE',
                   'STTM_CUST_ACCOUNT',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


--      EXECUTE IMMEDIATE 'truncate table src_sttm_cust_account';
--
--      INSERT /*+ append parallel */
--            INTO  stglive.src_sttm_cust_account (
--                     branch_code,
--                     cust_ac_no,
--                     ac_desc,
--                     cust_no,
--                     ccy,
--                     account_class,
--                     ac_stat_no_dr,
--                     ac_stat_no_cr,
--                     ac_stat_block,
--                     ac_stat_stop_pay,
--                     ac_stat_dormant,
--                     joint_ac_indicator,
--                     ac_open_date,
--                     ac_stmt_day,
--                     ac_stmt_cycle,
--                     alt_ac_no,
--                     cheque_book_facility,
--                     atm_facility,
--                     passbook_facility,
--                     ac_stmt_type,
--                     dr_ho_line,
--                     cr_ho_line,
--                     cr_cb_line,
--                     dr_cb_line,
--                     sublimit,
--                     uncoll_funds_limit,
--                     ac_stat_frozen,
--                     previous_statement_date,
--                     previous_statement_balance,
--                     previous_statement_no,
--                     tod_limit_start_date,
--                     tod_limit_end_date,
--                     tod_limit,
--                     nominee1,
--                     nominee2,
--                     dr_gl,
--                     cr_gl,
--                     record_stat,
--                     auth_stat,
--                     mod_no,
--                     maker_id,
--                     maker_dt_stamp,
--                     checker_id,
--                     checker_dt_stamp,
--                     once_auth,
--                     limit_ccy,
--                     line_id,
--                     offline_limit,
--                     cas_account,
--                     acy_opening_bal,
--                     lcy_opening_bal,
--                     acy_today_tover_dr,
--                     lcy_today_tover_dr,
--                     acy_today_tover_cr,
--                     lcy_today_tover_cr,
--                     acy_tank_cr,
--                     acy_tank_dr,
--                     lcy_tank_cr,
--                     lcy_tank_dr,
--                     acy_tover_cr,
--                     lcy_tover_cr,
--                     acy_tank_uncollected,
--                     acy_curr_balance,
--                     lcy_curr_balance,
--                     acy_blocked_amount,
--                     acy_avl_bal,
--                     acy_unauth_dr,
--                     acy_unauth_tank_dr,
--                     acy_unauth_cr,
--                     acy_unauth_tank_cr,
--                     acy_unauth_uncollected,
--                     acy_unauth_tank_uncollected,
--                     acy_mtd_tover_dr,
--                     lcy_mtd_tover_dr,
--                     acy_mtd_tover_cr,
--                     lcy_mtd_tover_cr,
--                     acy_accrued_dr_ic,
--                     acy_accrued_cr_ic,
--                     date_last_cr_activity,
--                     date_last_dr_activity,
--                     date_last_dr,
--                     date_last_cr,
--                     acy_uncollected,
--                     tod_start_date,
--                     tod_end_date,
--                     dormancy_date,
--                     dormancy_days,
--                     has_tov,
--                     last_ccy_conv_date,
--                     address1,
--                     address2,
--                     address3,
--                     address4,
--                     type_of_chq,
--                     atm_cust_ac_no,
--                     atm_dly_amt_limit,
--                     atm_dly_count_limit,
--                     gen_stmt_only_on_mvmt,
--                     ac_stat_de_post,
--                     display_iban_in_advices,
--                     clearing_bank_code,
--                     clearing_ac_no,
--                     iban_ac_no,
--                     reg_cc_availability,
--                     reg_cc_available_funds,
--                     prev_ac_srno_printed_in_pbk,
--                     latest_srno_submitted,
--                     prev_runbal_printed_in_pbk,
--                     latest_runbal_submmited,
--                     prev_page_no,
--                     prev_line_no,
--                     mt210_reqd,
--                     acc_stmt_type2,
--                     acc_stmt_day2,
--                     ac_stmt_cycle2,
--                     previous_statement_date2,
--                     previous_statement_balance2,
--                     previous_statement_no2,
--                     gen_stmt_only_on_mvmt2,
--                     acc_stmt_type3,
--                     acc_stmt_day3,
--                     ac_stmt_cycle3,
--                     previous_statement_date3,
--                     previous_statement_balance3,
--                     previous_statement_no3,
--                     gen_stmt_only_on_mvmt3,
--                     sweep_type,
--                     master_account_no,
--                     auto_deposits_bal,
--                     cas_customer,
--                     account_type,
--                     min_reqd_bal,
--                     positive_pay_ac,
--                     stale_days,
--                     cr_auto_ex_rate_lmt,
--                     dr_auto_ex_rate_lmt,
--                     track_receivable,
--                     receivable_amount,
--                     product_list,
--                     txn_code_list,
--                     special_condition_product,
--                     special_condition_txncode,
--                     reg_d_applicable,
--                     regd_periodicity,
--                     regd_start_date,
--                     regd_end_date,
--                     td_cert_printed,
--                     checkbook_name_1,
--                     checkbook_name_2,
--                     auto_reorder_check_required,
--                     auto_reorder_check_level,
--                     auto_reorder_check_leaves,
--                     netting_required,
--                     referral_required,
--                     lodgement_book_facility,
--                     acc_status,
--                     status_since,
--                     inherit_reporting,
--                     overdraft_since,
--                     prev_ovd_date,
--                     status_change_automatic,
--                     overline_od_since,
--                     tod_since,
--                     prev_tod_since,
--                     dormant_param,
--                     dr_int_due,
--                     excl_sameday_rvrtrns_fm_stmt,
--                     allow_back_period_entry,
--                     auto_prov_reqd,
--                     exposure_category,
--                     risk_free_exp_amount,
--                     provision_amount,
--                     credit_txn_limit,
--                     cr_lm_start_date,
--                     cr_lm_rev_date,
--                     statement_account,
--                     account_derived_status,
--                     prov_ccy_type,
--                     chg_due,
--                     withdrawable_uncolled_fund,
--                     defer_recon,
--                     consolidation_reqd,
--                     funding,
--                     funding_branch,
--                     funding_account,
--                     mod9_validation_reqd,
--                     validation_digit,
--                     location,
--                     media,
--                     acc_tanked_stat,
--                     gen_interim_stmt,
--                     gen_interim_stmt_on_mvmt,
--                     gen_balance_report,
--                     interim_report_since,
--                     interim_report_type,
--                     balance_report_since,
--                     balance_report_type,
--                     interim_debit_amt,
--                     interim_credit_amt,
--                     interim_stmt_day_count,
--                     interim_stmt_ytd_count,
--                     mode_of_operation,
--                     inf_acc_opening_amt,
--                     inf_pay_in_option,
--                     inf_offset_branch,
--                     inf_offset_account,
--                     inf_waive_acc_open_charge,
--                     daylight_limit_amount,
--                     trnover_lmt_code,
--                     passbook_number,
--                     country_code,
--                     consol_chg_acc,
--                     escrow_transfer,
--                     escrow_branch_code,
--                     escrow_ac_no,
--                     escrow_percentage,
--                     sod_notification_percent,
--                     salary_account,
--                     repl_cust_sig,
--                     max_no_cheque_rejections,
--                     no_cheque_rejections,
--                     fund_id,
--                     linked_dep_branch,
--                     linked_dep_acc,
--                     mudarabah_accounts,
--                     zakat_exemption,
--                     account_auto_closed,
--                     consol_chg_brn,
--                     no_of_chq_rej_reset_on,
--                     crs_stat_reqd,
--                     contribute_to_pdm,
--                     exclude_from_distribution,
--                     ac_set_close,
--                     ac_set_close_date,
--                     project_account,
--                     acy_sweep_ineligible,
--                     mt110_recon_reqd,
--                     sweep_required,
--                     auto_deposit,
--                     sweep_out,
--                     auto_create_pool,
--                     last_purge_date,
--                     default_waiver,
--                     auto_dc_request,
--                     auto_chqbk_request,
--                     nsf_blacklist_status,
--                     nsf_auto_update,
--                     intermediary_required,
--                     spend_analysis_reqd,
--                     org_func_id)
--         SELECT branch_code,
--                cust_ac_no,
--                ac_desc,
--                cust_no,
--                ccy,
--                account_class,
--                ac_stat_no_dr,
--                ac_stat_no_cr,
--                ac_stat_block,
--                ac_stat_stop_pay,
--                ac_stat_dormant,
--                joint_ac_indicator,
--                ac_open_date,
--                ac_stmt_day,
--                ac_stmt_cycle,
--                alt_ac_no,
--                cheque_book_facility,
--                atm_facility,
--                passbook_facility,
--                ac_stmt_type,
--                dr_ho_line,
--                cr_ho_line,
--                cr_cb_line,
--                dr_cb_line,
--                sublimit,
--                uncoll_funds_limit,
--                ac_stat_frozen,
--                previous_statement_date,
--                previous_statement_balance,
--                previous_statement_no,
--                tod_limit_start_date,
--                tod_limit_end_date,
--                tod_limit,
--                nominee1,
--                nominee2,
--                dr_gl,
--                cr_gl,
--                record_stat,
--                auth_stat,
--                mod_no,
--                maker_id,
--                maker_dt_stamp,
--                checker_id,
--                checker_dt_stamp,
--                once_auth,
--                limit_ccy,
--                line_id,
--                offline_limit,
--                cas_account,
--                acy_opening_bal,
--                lcy_opening_bal,
--                acy_today_tover_dr,
--                lcy_today_tover_dr,
--                acy_today_tover_cr,
--                lcy_today_tover_cr,
--                acy_tank_cr,
--                acy_tank_dr,
--                lcy_tank_cr,
--                lcy_tank_dr,
--                acy_tover_cr,
--                lcy_tover_cr,
--                acy_tank_uncollected,
--                acy_curr_balance,
--                lcy_curr_balance,
--                acy_blocked_amount,
--                acy_avl_bal,
--                acy_unauth_dr,
--                acy_unauth_tank_dr,
--                acy_unauth_cr,
--                acy_unauth_tank_cr,
--                acy_unauth_uncollected,
--                acy_unauth_tank_uncollected,
--                acy_mtd_tover_dr,
--                lcy_mtd_tover_dr,
--                acy_mtd_tover_cr,
--                lcy_mtd_tover_cr,
--                acy_accrued_dr_ic,
--                acy_accrued_cr_ic,
--                date_last_cr_activity,
--                date_last_dr_activity,
--                date_last_dr,
--                date_last_cr,
--                acy_uncollected,
--                tod_start_date,
--                tod_end_date,
--                dormancy_date,
--                dormancy_days,
--                has_tov,
--                last_ccy_conv_date,
--                address1,
--                address2,
--                address3,
--                address4,
--                type_of_chq,
--                atm_cust_ac_no,
--                atm_dly_amt_limit,
--                atm_dly_count_limit,
--                gen_stmt_only_on_mvmt,
--                ac_stat_de_post,
--                display_iban_in_advices,
--                clearing_bank_code,
--                clearing_ac_no,
--                iban_ac_no,
--                reg_cc_availability,
--                reg_cc_available_funds,
--                prev_ac_srno_printed_in_pbk,
--                latest_srno_submitted,
--                prev_runbal_printed_in_pbk,
--                latest_runbal_submmited,
--                prev_page_no,
--                prev_line_no,
--                mt210_reqd,
--                acc_stmt_type2,
--                acc_stmt_day2,
--                ac_stmt_cycle2,
--                previous_statement_date2,
--                previous_statement_balance2,
--                previous_statement_no2,
--                gen_stmt_only_on_mvmt2,
--                acc_stmt_type3,
--                acc_stmt_day3,
--                ac_stmt_cycle3,
--                previous_statement_date3,
--                previous_statement_balance3,
--                previous_statement_no3,
--                gen_stmt_only_on_mvmt3,
--                sweep_type,
--                master_account_no,
--                auto_deposits_bal,
--                cas_customer,
--                account_type,
--                min_reqd_bal,
--                positive_pay_ac,
--                stale_days,
--                cr_auto_ex_rate_lmt,
--                dr_auto_ex_rate_lmt,
--                track_receivable,
--                receivable_amount,
--                product_list,
--                txn_code_list,
--                special_condition_product,
--                special_condition_txncode,
--                reg_d_applicable,
--                regd_periodicity,
--                regd_start_date,
--                regd_end_date,
--                td_cert_printed,
--                checkbook_name_1,
--                checkbook_name_2,
--                auto_reorder_check_required,
--                auto_reorder_check_level,
--                auto_reorder_check_leaves,
--                netting_required,
--                referral_required,
--                lodgement_book_facility,
--                acc_status,
--                status_since,
--                inherit_reporting,
--                overdraft_since,
--                prev_ovd_date,
--                status_change_automatic,
--                overline_od_since,
--                tod_since,
--                prev_tod_since,
--                dormant_param,
--                dr_int_due,
--                excl_sameday_rvrtrns_fm_stmt,
--                allow_back_period_entry,
--                auto_prov_reqd,
--                exposure_category,
--                risk_free_exp_amount,
--                provision_amount,
--                credit_txn_limit,
--                cr_lm_start_date,
--                cr_lm_rev_date,
--                statement_account,
--                account_derived_status,
--                prov_ccy_type,
--                chg_due,
--                withdrawable_uncolled_fund,
--                defer_recon,
--                consolidation_reqd,
--                funding,
--                funding_branch,
--                funding_account,
--                mod9_validation_reqd,
--                validation_digit,
--                location,
--                media,
--                acc_tanked_stat,
--                gen_interim_stmt,
--                gen_interim_stmt_on_mvmt,
--                gen_balance_report,
--                interim_report_since,
--                interim_report_type,
--                balance_report_since,
--                balance_report_type,
--                interim_debit_amt,
--                interim_credit_amt,
--                interim_stmt_day_count,
--                interim_stmt_ytd_count,
--                mode_of_operation,
--                inf_acc_opening_amt,
--                inf_pay_in_option,
--                inf_offset_branch,
--                inf_offset_account,
--                inf_waive_acc_open_charge,
--                daylight_limit_amount,
--                trnover_lmt_code,
--                passbook_number,
--                country_code,
--                consol_chg_acc,
--                escrow_transfer,
--                escrow_branch_code,
--                escrow_ac_no,
--                escrow_percentage,
--                sod_notification_percent,
--                salary_account,
--                repl_cust_sig,
--                max_no_cheque_rejections,
--                no_cheque_rejections,
--                fund_id,
--                linked_dep_branch,
--                linked_dep_acc,
--                mudarabah_accounts,
--                zakat_exemption,
--                account_auto_closed,
--                consol_chg_brn,
--                no_of_chq_rej_reset_on,
--                crs_stat_reqd,
--                contribute_to_pdm,
--                exclude_from_distribution,
--                ac_set_close,
--                ac_set_close_date,
--                project_account,
--                acy_sweep_ineligible,
--                mt110_recon_reqd,
--                sweep_required,
--                auto_deposit,
--                sweep_out,
--                auto_create_pool,
--                last_purge_date,
--                default_waiver,
--                auto_dc_request,
--                auto_chqbk_request,
--                nsf_blacklist_status,
--                nsf_auto_update,
--                intermediary_required,
--                spend_analysis_reqd,
--                org_func_id
--           FROM sttm_cust_account@loc_fcubslive;
--
--
--      v_rows_processed := SQL%ROWCOUNT;

begin
    select count(*) into tab_cnt from sys.all_tables where lower(table_name)='tmp_sttm_cust_account_r' and owner = 'STGLIVE';
    EXCEPTION
    WHEN NO_DATA_FOUND THEN
        tab_cnt:=0;
  end;
              if(tab_cnt)=1 Then
    execute immediate 'drop table tmp_sttm_cust_account_r';
      
    v_sql := 'create table tmp_sttm_cust_account_r as
      SELECT /*+ parallel(auto) */ branch_code,
             cust_ac_no,
             ac_desc,
             cust_no,
             ccy,
             account_class,
             ac_stat_no_dr,
             ac_stat_no_cr,
             ac_stat_block,
             ac_stat_stop_pay,
             ac_stat_dormant,
             joint_ac_indicator,
             ac_open_date,
             ac_stmt_day,
             ac_stmt_cycle,
             alt_ac_no,
             cheque_book_facility,
             atm_facility,
             passbook_facility,
             ac_stmt_type,
             dr_ho_line,
             cr_ho_line,
             cr_cb_line,
             dr_cb_line,
             sublimit,
             uncoll_funds_limit,
             ac_stat_frozen,
             previous_statement_date,
             previous_statement_balance,
             previous_statement_no,
             tod_limit_start_date,
             tod_limit_end_date,
             tod_limit,
             nominee1,
             nominee2,
             dr_gl,
             cr_gl,
             record_stat,
             auth_stat,
             mod_no,
             maker_id,
             maker_dt_stamp,
             checker_id,
             checker_dt_stamp,
             once_auth,
             limit_ccy,
             line_id,
             offline_limit,
             cas_account,
             acy_opening_bal,
             lcy_opening_bal,
             acy_today_tover_dr,
             lcy_today_tover_dr,
             acy_today_tover_cr,
             lcy_today_tover_cr,
             acy_tank_cr,
             acy_tank_dr,
             lcy_tank_cr,
             lcy_tank_dr,
             acy_tover_cr,
             lcy_tover_cr,
             acy_tank_uncollected,
             acy_curr_balance,
             lcy_curr_balance,
             acy_blocked_amount,
             acy_avl_bal,
             acy_unauth_dr,
             acy_unauth_tank_dr,
             acy_unauth_cr,
             acy_unauth_tank_cr,
             acy_unauth_uncollected,
             acy_unauth_tank_uncollected,
             acy_mtd_tover_dr,
             lcy_mtd_tover_dr,
             acy_mtd_tover_cr,
             lcy_mtd_tover_cr,
             acy_accrued_dr_ic,
             acy_accrued_cr_ic,
             date_last_cr_activity,
             date_last_dr_activity,
             date_last_dr,
             date_last_cr,
             acy_uncollected,
             tod_start_date,
             tod_end_date,
             dormancy_date,
             dormancy_days,
             has_tov,
             last_ccy_conv_date,
             address1,
             address2,
             address3,
             address4,
             type_of_chq,
             atm_cust_ac_no,
             atm_dly_amt_limit,
             atm_dly_count_limit,
             gen_stmt_only_on_mvmt,
             ac_stat_de_post,
             display_iban_in_advices,
             clearing_bank_code,
             clearing_ac_no,
             iban_ac_no,
             reg_cc_availability,
             reg_cc_available_funds,
             prev_ac_srno_printed_in_pbk,
             latest_srno_submitted,
             prev_runbal_printed_in_pbk,
             latest_runbal_submmited,
             prev_page_no,
             prev_line_no,
             mt210_reqd,
             acc_stmt_type2,
             acc_stmt_day2,
             ac_stmt_cycle2,
             previous_statement_date2,
             previous_statement_balance2,
             previous_statement_no2,
             gen_stmt_only_on_mvmt2,
             acc_stmt_type3,
             acc_stmt_day3,
             ac_stmt_cycle3,
             previous_statement_date3,
             previous_statement_balance3,
             previous_statement_no3,
             gen_stmt_only_on_mvmt3,
             sweep_type,
             master_account_no,
             auto_deposits_bal,
             cas_customer,
             account_type,
             min_reqd_bal,
             positive_pay_ac,
             stale_days,
             cr_auto_ex_rate_lmt,
             dr_auto_ex_rate_lmt,
             track_receivable,
             receivable_amount,
             product_list,
             txn_code_list,
             special_condition_product,
             special_condition_txncode,
             reg_d_applicable,
             regd_periodicity,
             regd_start_date,
             regd_end_date,
             td_cert_printed,
             checkbook_name_1,
             checkbook_name_2,
             auto_reorder_check_required,
             auto_reorder_check_level,
             auto_reorder_check_leaves,
             netting_required,
             referral_required,
             lodgement_book_facility,
             acc_status,
             status_since,
             inherit_reporting,
             overdraft_since,
             prev_ovd_date,
             status_change_automatic,
             overline_od_since,
             tod_since,
             prev_tod_since,
             dormant_param,
             dr_int_due,
             excl_sameday_rvrtrns_fm_stmt,
             allow_back_period_entry,
             auto_prov_reqd,
             exposure_category,
             risk_free_exp_amount,
             provision_amount,
             credit_txn_limit,
             cr_lm_start_date,
             cr_lm_rev_date,
             statement_account,
             account_derived_status,
             prov_ccy_type,
             chg_due,
             withdrawable_uncolled_fund,
             defer_recon,
             consolidation_reqd,
             funding,
             funding_branch,
             funding_account,
             mod9_validation_reqd,
             validation_digit,
             location,
             media,
             acc_tanked_stat,
             gen_interim_stmt,
             gen_interim_stmt_on_mvmt,
             gen_balance_report,
             interim_report_since,
             interim_report_type,
             balance_report_since,
             balance_report_type,
             interim_debit_amt,
             interim_credit_amt,
             interim_stmt_day_count,
             interim_stmt_ytd_count,
             mode_of_operation,
             inf_acc_opening_amt,
             inf_pay_in_option,
             inf_offset_branch,
             inf_offset_account,
             inf_waive_acc_open_charge,
             daylight_limit_amount,
             trnover_lmt_code,
             passbook_number,
             country_code,
             consol_chg_acc,
             escrow_transfer,
             escrow_branch_code,
             escrow_ac_no,
             escrow_percentage,
             sod_notification_percent,
             salary_account,
             repl_cust_sig,
             max_no_cheque_rejections,
             no_cheque_rejections,
             fund_id,
             linked_dep_branch,
             linked_dep_acc,
             mudarabah_accounts,
             zakat_exemption,
             account_auto_closed,
             consol_chg_brn,
             no_of_chq_rej_reset_on,
             crs_stat_reqd,
             contribute_to_pdm,
             exclude_from_distribution,
             ac_set_close,
             ac_set_close_date,
             project_account,
             acy_sweep_ineligible,
             mt110_recon_reqd,
             sweep_required,
             auto_deposit,
             sweep_out,
             auto_create_pool,
             last_purge_date,
             default_waiver,
             auto_dc_request,
             auto_chqbk_request,
             nsf_blacklist_status,
             nsf_auto_update,
             intermediary_required,
             spend_analysis_reqd,
             org_func_id,
             '||1||' qset
        FROM sttm_cust_account@loc_fcubs';

    -- where ac_open_date ='''|| vg_date ||''' or trunc(maker_dt_stamp)='''|| vg_date ||'''';

        execute immediate v_sql;
        v_rows_processed := SQL%ROWCOUNT;
        else 
        v_sql := 'create table tmp_sttm_cust_account_r as
      SELECT /*+ parallel(auto) */ branch_code,
             cust_ac_no,
             ac_desc,
             cust_no,
             ccy,
             account_class,
             ac_stat_no_dr,
             ac_stat_no_cr,
             ac_stat_block,
             ac_stat_stop_pay,
             ac_stat_dormant,
             joint_ac_indicator,
             ac_open_date,
             ac_stmt_day,
             ac_stmt_cycle,
             alt_ac_no,
             cheque_book_facility,
             atm_facility,
             passbook_facility,
             ac_stmt_type,
             dr_ho_line,
             cr_ho_line,
             cr_cb_line,
             dr_cb_line,
             sublimit,
             uncoll_funds_limit,
             ac_stat_frozen,
             previous_statement_date,
             previous_statement_balance,
             previous_statement_no,
             tod_limit_start_date,
             tod_limit_end_date,
             tod_limit,
             nominee1,
             nominee2,
             dr_gl,
             cr_gl,
             record_stat,
             auth_stat,
             mod_no,
             maker_id,
             maker_dt_stamp,
             checker_id,
             checker_dt_stamp,
             once_auth,
             limit_ccy,
             line_id,
             offline_limit,
             cas_account,
             acy_opening_bal,
             lcy_opening_bal,
             acy_today_tover_dr,
             lcy_today_tover_dr,
             acy_today_tover_cr,
             lcy_today_tover_cr,
             acy_tank_cr,
             acy_tank_dr,
             lcy_tank_cr,
             lcy_tank_dr,
             acy_tover_cr,
             lcy_tover_cr,
             acy_tank_uncollected,
             acy_curr_balance,
             lcy_curr_balance,
             acy_blocked_amount,
             acy_avl_bal,
             acy_unauth_dr,
             acy_unauth_tank_dr,
             acy_unauth_cr,
             acy_unauth_tank_cr,
             acy_unauth_uncollected,
             acy_unauth_tank_uncollected,
             acy_mtd_tover_dr,
             lcy_mtd_tover_dr,
             acy_mtd_tover_cr,
             lcy_mtd_tover_cr,
             acy_accrued_dr_ic,
             acy_accrued_cr_ic,
             date_last_cr_activity,
             date_last_dr_activity,
             date_last_dr,
             date_last_cr,
             acy_uncollected,
             tod_start_date,
             tod_end_date,
             dormancy_date,
             dormancy_days,
             has_tov,
             last_ccy_conv_date,
             address1,
             address2,
             address3,
             address4,
             type_of_chq,
             atm_cust_ac_no,
             atm_dly_amt_limit,
             atm_dly_count_limit,
             gen_stmt_only_on_mvmt,
             ac_stat_de_post,
             display_iban_in_advices,
             clearing_bank_code,
             clearing_ac_no,
             iban_ac_no,
             reg_cc_availability,
             reg_cc_available_funds,
             prev_ac_srno_printed_in_pbk,
             latest_srno_submitted,
             prev_runbal_printed_in_pbk,
             latest_runbal_submmited,
             prev_page_no,
             prev_line_no,
             mt210_reqd,
             acc_stmt_type2,
             acc_stmt_day2,
             ac_stmt_cycle2,
             previous_statement_date2,
             previous_statement_balance2,
             previous_statement_no2,
             gen_stmt_only_on_mvmt2,
             acc_stmt_type3,
             acc_stmt_day3,
             ac_stmt_cycle3,
             previous_statement_date3,
             previous_statement_balance3,
             previous_statement_no3,
             gen_stmt_only_on_mvmt3,
             sweep_type,
             master_account_no,
             auto_deposits_bal,
             cas_customer,
             account_type,
             min_reqd_bal,
             positive_pay_ac,
             stale_days,
             cr_auto_ex_rate_lmt,
             dr_auto_ex_rate_lmt,
             track_receivable,
             receivable_amount,
             product_list,
             txn_code_list,
             special_condition_product,
             special_condition_txncode,
             reg_d_applicable,
             regd_periodicity,
             regd_start_date,
             regd_end_date,
             td_cert_printed,
             checkbook_name_1,
             checkbook_name_2,
             auto_reorder_check_required,
             auto_reorder_check_level,
             auto_reorder_check_leaves,
             netting_required,
             referral_required,
             lodgement_book_facility,
             acc_status,
             status_since,
             inherit_reporting,
             overdraft_since,
             prev_ovd_date,
             status_change_automatic,
             overline_od_since,
             tod_since,
             prev_tod_since,
             dormant_param,
             dr_int_due,
             excl_sameday_rvrtrns_fm_stmt,
             allow_back_period_entry,
             auto_prov_reqd,
             exposure_category,
             risk_free_exp_amount,
             provision_amount,
             credit_txn_limit,
             cr_lm_start_date,
             cr_lm_rev_date,
             statement_account,
             account_derived_status,
             prov_ccy_type,
             chg_due,
             withdrawable_uncolled_fund,
             defer_recon,
             consolidation_reqd,
             funding,
             funding_branch,
             funding_account,
             mod9_validation_reqd,
             validation_digit,
             location,
             media,
             acc_tanked_stat,
             gen_interim_stmt,
             gen_interim_stmt_on_mvmt,
             gen_balance_report,
             interim_report_since,
             interim_report_type,
             balance_report_since,
             balance_report_type,
             interim_debit_amt,
             interim_credit_amt,
             interim_stmt_day_count,
             interim_stmt_ytd_count,
             mode_of_operation,
             inf_acc_opening_amt,
             inf_pay_in_option,
             inf_offset_branch,
             inf_offset_account,
             inf_waive_acc_open_charge,
             daylight_limit_amount,
             trnover_lmt_code,
             passbook_number,
             country_code,
             consol_chg_acc,
             escrow_transfer,
             escrow_branch_code,
             escrow_ac_no,
             escrow_percentage,
             sod_notification_percent,
             salary_account,
             repl_cust_sig,
             max_no_cheque_rejections,
             no_cheque_rejections,
             fund_id,
             linked_dep_branch,
             linked_dep_acc,
             mudarabah_accounts,
             zakat_exemption,
             account_auto_closed,
             consol_chg_brn,
             no_of_chq_rej_reset_on,
             crs_stat_reqd,
             contribute_to_pdm,
             exclude_from_distribution,
             ac_set_close,
             ac_set_close_date,
             project_account,
             acy_sweep_ineligible,
             mt110_recon_reqd,
             sweep_required,
             auto_deposit,
             sweep_out,
             auto_create_pool,
             last_purge_date,
             default_waiver,
             auto_dc_request,
             auto_chqbk_request,
             nsf_blacklist_status,
             nsf_auto_update,
             intermediary_required,
             spend_analysis_reqd,
             org_func_id,
             '||1||' qset
        FROM sttm_cust_account@loc_fcubs';

    -- where ac_open_date ='''|| vg_date ||''' or trunc(maker_dt_stamp)='''|| vg_date ||'''';

        execute immediate v_sql;
        v_rows_processed := SQL%ROWCOUNT;
        end if;
        
        execute immediate 'alter table stglive.src_sttm_cust_account
                    exchange partition P' ||to_number(10)|| ' with table tmp_sttm_cust_account_r';
                    commit;
            
                    prc_index_rebuild('IDX_STTM_CUST_ACCT_BRN');
                    prc_index_rebuild('IDX_CUST_AC_DESC');
                    prc_index_rebuild('IDX_AUTH_AC_NO_CURR_BAL');
                    prc_index_rebuild('IDX_ACCT_OPENDAT');
                    prc_index_rebuild('IDX$$_295340002');
        commit;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;


   PROCEDURE prc_cytm_ccy_defn
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE;
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;
      
      select case when today > trunc(sysdate) then prev_working_day else today end into v_date
      from src_sttm_dates where branch_code = '099';

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'CCY DEFN DERIVE',
                   'CYTM_CCY_DEFN',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_cytm_ccy_defn';

      INSERT INTO stglive.src_cytm_ccy_defn (ccy_code,
                                             ccy_name,
                                             country,
                                             ccy_decimals,
                                             ccy_round_rule,
                                             ccy_round_unit,
                                             ccy_format_mask,
                                             ccy_spot_days,
                                             ccy_int_method,
                                             record_stat,
                                             once_auth,
                                             auth_stat,
                                             mod_no,
                                             maker_id,
                                             maker_dt_stamp,
                                             checker_id,
                                             checker_dt_stamp,
                                             position_gl,
                                             position_eqvgl,
                                             ccy_eur_type,
                                             ccy_tol_limit,
                                             settlement_msg_days,
                                             index_flag,
                                             index_base_ccy,
                                             cut_off_hr,
                                             cut_off_min,
                                             alt_ccy_code,
                                             eur_conversion_reqd,
                                             cut_off_days,
                                             cr_auto_ex_rate_lmt,
                                             dr_auto_ex_rate_lmt,
                                             ccy_type,
                                             gen_103p,
                                             cls_ccy,
                                             fx_netting_days,
                                             iso_num_ccy_code,
                                             gen_cust_cov,
                                             validate_50f)
         SELECT ccy_code,
                ccy_name,
                country,
                ccy_decimals,
                ccy_round_rule,
                ccy_round_unit,
                ccy_format_mask,
                ccy_spot_days,
                ccy_int_method,
                record_stat,
                once_auth,
                auth_stat,
                mod_no,
                maker_id,
                maker_dt_stamp,
                checker_id,
                checker_dt_stamp,
                position_gl,
                position_eqvgl,
                ccy_eur_type,
                ccy_tol_limit,
                settlement_msg_days,
                index_flag,
                index_base_ccy,
                cut_off_hr,
                cut_off_min,
                alt_ccy_code,
                eur_conversion_reqd,
                cut_off_days,
                cr_auto_ex_rate_lmt,
                dr_auto_ex_rate_lmt,
                ccy_type,
                gen_103p,
                cls_ccy,
                fx_netting_days,
                iso_num_ccy_code,
                gen_cust_cov,
                validate_50f
           FROM cytm_ccy_defn@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_sttm_branch
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'BRANCH DERIVE',
                   'STTM_BRANCH',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_sttm_branch';

      INSERT INTO stglive.src_sttm_branch (branch_code,
                                           branch_name,
                                           branch_addr1,
                                           branch_addr2,
                                           branch_addr3,
                                           parent_branch,
                                           regional_office,
                                           bank_code,
                                           host_name,
                                           walkin_customer,
                                           netting_suspense_gl,
                                           contingent_suspense_glsl,
                                           current_cycle,
                                           current_period,
                                           swift_addr,
                                           telex_addr,
                                           end_of_input,
                                           rep_history_period,
                                           suspense_glsl,
                                           generate,
                                           time_level,
                                           record_stat,
                                           auth_stat,
                                           mod_no,
                                           maker_id,
                                           maker_dt_stamp,
                                           checker_id,
                                           checker_dt_stamp,
                                           once_auth,
                                           suspense_gl_fcy,
                                           cont_suspense_gl_fcy,
                                           country_code,
                                           cif_id,
                                           job_stat,
                                           fund_branch,
                                           conversion_gl,
                                           conversion_txncode,
                                           week_hol1,
                                           week_hol2,
                                           branch_lcy,
                                           offset_hr,
                                           offset_min,
                                           clearing_acc,
                                           gen_mt103,
                                           def_bank_oper_code,
                                           proceed_without_float,
                                           offset_clearing_account,
                                           clearing_bank_code,
                                           cod_atm_stop,
                                           cod_start_tank,
                                           cod_atm_branch,
                                           cod_inst_id,
                                           cod_ib_trn_code,
                                           cod_cust_transfer,
                                           atm_suspense_gl,
                                           iban_mask_bank_code,
                                           iban_mask_account_number,
                                           clg_brn_code,
                                           sector_code,
                                           clearing_brn,
                                           routing_no,
                                           mis_ccy_mismatch_group,
                                           drsus_prod,
                                           crsus_prod,
                                           pc_clearing_brn,
                                           interdict_check_reqd,
                                           interdict_time_out,
                                           auto_auth,
                                           msg_gen_days,
                                           referral_hr,
                                           referral_min,
                                           gen_mt103p,
                                           status_processing_basis,
                                           back_valued_chk_req,
                                           back_value_days,
                                           provisioning_frequency,
                                           track_py_pnl_adjustment,
                                           uncollected_funds_basis,
                                           pl_split_reqd,
                                           offset_hours,
                                           offset_mins,
                                           current_tax_cycle,
                                           tax_cert_freq,
                                           tax_cert_day,
                                           consol_tax_cert_reqd,
                                           individual_tax_cert_reqd,
                                           deferred_stmt,
                                           deferred_stmt_status,
                                           internal_swap_customer,
                                           iceod_status,
                                           enterprise_gl,
                                           ldap_template,
                                           dsn_name,
                                           brn_avail_stat,
                                           suspense_entry_reqd,
                                           suspense_batch_no,
                                           suspense_txn_code,
                                           rev_suspense_entry_days,
                                           max_real_suspense_amt,
                                           max_cont_suspense_amt,
                                           notice_period,
                                           minor_age,
                                           allow_corporate_access,
                                           reval_branch,
                                           casa_amtblk_trncode,
                                           cheque_stale_days,
                                           transfer_type,
                                           transaction_code,
                                           position_asset_gl,
                                           position_liability_gl,
                                           gl_class,
                                           elcm_replication,
                                           eoc_stage,
                                           lmtexp_notify_days,
                                           report_dsn,
                                           chqno_mask,
                                           file_cons_trn_code)
         SELECT branch_code,
                branch_name,
                branch_addr1,
                branch_addr2,
                branch_addr3,
                parent_branch,
                regional_office,
                bank_code,
                host_name,
                walkin_customer,
                netting_suspense_gl,
                contingent_suspense_glsl,
                current_cycle,
                current_period,
                swift_addr,
                telex_addr,
                end_of_input,
                rep_history_period,
                suspense_glsl,
                generate,
                time_level,
                record_stat,
                auth_stat,
                mod_no,
                maker_id,
                maker_dt_stamp,
                checker_id,
                checker_dt_stamp,
                once_auth,
                suspense_gl_fcy,
                cont_suspense_gl_fcy,
                country_code,
                cif_id,
                job_stat,
                fund_branch,
                conversion_gl,
                conversion_txncode,
                week_hol1,
                week_hol2,
                branch_lcy,
                offset_hr,
                offset_min,
                clearing_acc,
                gen_mt103,
                def_bank_oper_code,
                proceed_without_float,
                offset_clearing_account,
                clearing_bank_code,
                cod_atm_stop,
                cod_start_tank,
                cod_atm_branch,
                cod_inst_id,
                cod_ib_trn_code,
                cod_cust_transfer,
                atm_suspense_gl,
                iban_mask_bank_code,
                iban_mask_account_number,
                clg_brn_code,
                sector_code,
                clearing_brn,
                routing_no,
                mis_ccy_mismatch_group,
                drsus_prod,
                crsus_prod,
                pc_clearing_brn,
                interdict_check_reqd,
                interdict_time_out,
                auto_auth,
                msg_gen_days,
                referral_hr,
                referral_min,
                gen_mt103p,
                status_processing_basis,
                back_valued_chk_req,
                back_value_days,
                provisioning_frequency,
                track_py_pnl_adjustment,
                uncollected_funds_basis,
                pl_split_reqd,
                offset_hours,
                offset_mins,
                current_tax_cycle,
                tax_cert_freq,
                tax_cert_day,
                consol_tax_cert_reqd,
                individual_tax_cert_reqd,
                deferred_stmt,
                deferred_stmt_status,
                internal_swap_customer,
                iceod_status,
                enterprise_gl,
                ldap_template,
                dsn_name,
                brn_avail_stat,
                suspense_entry_reqd,
                suspense_batch_no,
                suspense_txn_code,
                rev_suspense_entry_days,
                max_real_suspense_amt,
                max_cont_suspense_amt,
                notice_period,
                minor_age,
                allow_corporate_access,
                reval_branch,
                casa_amtblk_trncode,
                cheque_stale_days,
                transfer_type,
                transaction_code,
                position_asset_gl,
                position_liability_gl,
                gl_class,
                elcm_replication,
                eoc_stage,
                lmtexp_notify_days,
                report_dsn,
                chqno_mask,
                file_cons_trn_code
           FROM sttm_branch@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

procedure prc_mitb_class_mapping as
   v_message          varchar2 (4000);
   v_rows_processed   number;
   v_date             date;
   v_seq              number;
   v_rows_count       integer;
   v_sql              varchar2 (10000);
   v_partition_name varchar2 (9);
   c number;
   
begin


   
   select case when trunc(today) > trunc(sysdate) then trunc(prev_working_day) else trunc(today) end into v_date
      from src_sttm_dates where branch_code = '099';
      
   v_partition_name := 'P'||to_char(v_date,'yyyymmdd');
   
   ------sends initiation mail-----------
   DCP.prc_send_mail_mitb_initiated;

   select process_seq.nextval into v_seq from dual;
   
   insert into fcubs_process_log (process_sequence,
                                  process_type,
                                  process_name,
                                  reference_date,
                                  status,
                                  message,
                                  row_count,
                                  start_date,
                                  end_date,
                                  duration)
        values (v_seq,
                'CLASS MAPPING DERIVE',
                'PRC_MITB_CLASS_MAP_INSERT_1',
                v_date,
                'STARTED',
                null,
                0,
                sysdate,
                null,
                null);

   commit;

   execute immediate 'truncate table tmp_mitb_class_mapping_1';



   insert /*+ append parallel */
         into  stglive.tmp_mitb_class_mapping_1 (reference_date,
                                               branch_code,
                                               unit_ref_no,
                                               unit_type,
                                               product,
                                               customer,
                                               related_account,
                                               related_ref,
                                               ccy,
                                               mis_head,
                                               pool_code,
                                               rate_flag,
                                               ref_rate,
                                               calc_method,
                                               processed_flag,
                                               mis_group,
                                               mis_group_txn,
                                               mis_group_comp,
                                               comp_mis_1,
                                               txn_mis_1,
                                               comp_mis_2,
                                               txn_mis_2,
                                               comp_mis_3,
                                               txn_mis_3,
                                               comp_mis_4,
                                               txn_mis_4,
                                               comp_mis_5,
                                               txn_mis_5,
                                               comp_mis_6,
                                               txn_mis_6,
                                               comp_mis_7,
                                               txn_mis_7,
                                               comp_mis_8,
                                               txn_mis_8,
                                               comp_mis_9,
                                               txn_mis_9,
                                               comp_mis_10,
                                               txn_mis_10,
                                               cost_code1,
                                               cost_code2,
                                               cost_code3,
                                               cost_code4,
                                               cost_code5,
                                               fund_mis_1,
                                               fund_mis_2,
                                               fund_mis_3,
                                               fund_mis_4,
                                               fund_mis_5,
                                               fund_mis_6,
                                               fund_mis_7,
                                               fund_mis_8,
                                               fund_mis_9,
                                               fund_mis_10,
                                               ref_spread,
                                               ref_rate_type,
                                               ref_rate_code,
                                               ref_xrate)
      select /*+ PARALLEL(10) */
      v_date,
            branch_code,
             unit_ref_no,
             unit_type,
             product,
             customer,
             related_account,
             related_ref,
             ccy,
             mis_head,
             pool_code,
             rate_flag,
             ref_rate,
             calc_method,
             processed_flag,
             mis_group,
             mis_group_txn,
             mis_group_comp,
             comp_mis_1,
             txn_mis_1,
             comp_mis_2,
             txn_mis_2,
             comp_mis_3,
             txn_mis_3,
             comp_mis_4,
             txn_mis_4,
             comp_mis_5,
             txn_mis_5,
             comp_mis_6,
             txn_mis_6,
             comp_mis_7,
             txn_mis_7,
             comp_mis_8,
             txn_mis_8,
             comp_mis_9,
             txn_mis_9,
             comp_mis_10,
             txn_mis_10,
             cost_code1,
             cost_code2,
             cost_code3,
             cost_code4,
             cost_code5,
             fund_mis_1,
             fund_mis_2,
             fund_mis_3,
             fund_mis_4,
             fund_mis_5,
             fund_mis_6,
             fund_mis_7,
             fund_mis_8,
             fund_mis_9,
             fund_mis_10,
             ref_spread,
             ref_rate_type,
             ref_rate_code,
             ref_xrate
        from mitb_class_mapping@loc_fcubsprod
       where unit_type = 'A';

   v_rows_processed := sql%rowcount;

   commit;
   
   update fcubs_process_log
      set status = 'COMPLETED',
          message = 'SUCCESS',
          row_count = v_rows_processed,
          end_date = sysdate,
          duration = (sysdate - start_date) * 24 * 3600
    where process_sequence = v_seq;

   commit;   
   
------------------- 

   select process_seq.nextval into v_seq from dual;
   
   insert into fcubs_process_log (process_sequence,
                                  process_type,
                                  process_name,
                                  reference_date,
                                  status,
                                  message,
                                  row_count,
                                  start_date,
                                  end_date,
                                  duration)
        values (v_seq,
                'CLASS MAPPING DERIVE',
                'PRC_MITB_CLASS_MAP_INSERT_2',
                v_date,
                'STARTED',
                null,
                0,
                sysdate,
                null,
                null);

   commit;   

   insert /*+ append parallel */
         into  stglive.tmp_mitb_class_mapping_1 (
         reference_date,branch_code,
                                               unit_ref_no,
                                               unit_type,
                                               product,
                                               customer,
                                               related_account,
                                               related_ref,
                                               ccy,
                                               mis_head,
                                               pool_code,
                                               rate_flag,
                                               ref_rate,
                                               calc_method,
                                               processed_flag,
                                               mis_group,
                                               mis_group_txn,
                                               mis_group_comp,
                                               comp_mis_1,
                                               txn_mis_1,
                                               comp_mis_2,
                                               txn_mis_2,
                                               comp_mis_3,
                                               txn_mis_3,
                                               comp_mis_4,
                                               txn_mis_4,
                                               comp_mis_5,
                                               txn_mis_5,
                                               comp_mis_6,
                                               txn_mis_6,
                                               comp_mis_7,
                                               txn_mis_7,
                                               comp_mis_8,
                                               txn_mis_8,
                                               comp_mis_9,
                                               txn_mis_9,
                                               comp_mis_10,
                                               txn_mis_10,
                                               cost_code1,
                                               cost_code2,
                                               cost_code3,
                                               cost_code4,
                                               cost_code5,
                                               fund_mis_1,
                                               fund_mis_2,
                                               fund_mis_3,
                                               fund_mis_4,
                                               fund_mis_5,
                                               fund_mis_6,
                                               fund_mis_7,
                                               fund_mis_8,
                                               fund_mis_9,
                                               fund_mis_10,
                                               ref_spread,
                                               ref_rate_type,
                                               ref_rate_code,
                                               ref_xrate)
      select /*+ PARALLEL(10) */
      v_date,
            branch_code,
             unit_ref_no,
             unit_type,
             product,
             customer,
             related_account,
             related_ref,
             ccy,
             mis_head,
             pool_code,
             rate_flag,
             ref_rate,
             calc_method,
             processed_flag,
             mis_group,
             mis_group_txn,
             mis_group_comp,
             comp_mis_1,
             txn_mis_1,
             comp_mis_2,
             txn_mis_2,
             comp_mis_3,
             txn_mis_3,
             comp_mis_4,
             txn_mis_4,
             comp_mis_5,
             txn_mis_5,
             comp_mis_6,
             txn_mis_6,
             comp_mis_7,
             txn_mis_7,
             comp_mis_8,
             txn_mis_8,
             comp_mis_9,
             txn_mis_9,
             comp_mis_10,
             txn_mis_10,
             cost_code1,
             cost_code2,
             cost_code3,
             cost_code4,
             cost_code5,
             fund_mis_1,
             fund_mis_2,
             fund_mis_3,
             fund_mis_4,
             fund_mis_5,
             fund_mis_6,
             fund_mis_7,
             fund_mis_8,
             fund_mis_9,
             fund_mis_10,
             ref_spread,
             ref_rate_type,
             ref_rate_code,
             ref_xrate
        from mitb_class_mapping@loc_fcubsprod
       where     unit_type = 'R'
             and product in ('TODC',
                             'SFCF',
                             'CTIA',
                             'MT03',
                             'TTSA',
                             'SWI1',
                             'CTLN',
                             'TL0C',
                             'SIP5',
                             'CIDS',
                             'IDCP',
                             'SWI2',
                             'PAIF',
                             'SIP3',
                             'RTIN',
                             'TLLP',
                             'SIP6',
                             'IBPF',
                             'CHPF',
                             'MMCD',
                             'BAIM',
                             'FL01',
                             'DBCW',
                             'FRTD',
                             'DBNF',
                             'IBTB',
                             'APIP',
                             'FCAI',
                             'TIBD',
                             'CUBD',
                             'PPDU',
                             'PFBD',
                             'TL01',
                             'PPCU',
                             'MSME',
                             'MHSS',
                             'LT0C',
                             'EUBD',
                             'TFIN',
                             'COMP',
                             'TBCS',
                             'MCGT',
                             'MSGC',
                             'USLL',
                             'PNPO',
                             'COLC',
                             'BCSA',
                             'MPTA',
                             'RTLN',
                             'BKGT',
                             'PASD',
                             'BAAC',
                             'BALP',
                             'EUBO',
                             'DBQD',
                             'WNMC',
                             'CTIN',
                             'ABPF',
                             'IBTF',
                             'WNVV',
                             'SIP4',
                             'IBPB',
                             'INMS',
                             'CN01',
                             'BOIF',
                             'BAVC',
                             'UNLL',
                             'OBBT',
                             'LT01',
                             'PDAD',
                             'LTA1',
                             'WNVI',
                             'MTDB',
                             'FUSS',
                             'APRV',
                             'STLP',
                             'FRDC',
                             'PFTL',
                             'OTGT',
                             'KALS',
                             'TLA1',
                             'ANPO',
                             'INMD',
                             'TTIG',
                             'OTBD',
                             'LTP1',
                             'WPTL',
                             'RDIP',
                             'STLM',
                             'BKOG',
                             'TLIM',
                             'IDMT',
                             'BCCB',
                             'BTBD',
                             'OLDM',
                             'MSCC',
                             'PFBI',
                             'IMGL',
                             'INMC',
                             'TTIW',
                             'CIDA',
                             'CTLA',
                             'CACS',
                             'KPLA',
                             'AFLF',
                             'OBBP',
                             'RTBD',
                             'TLNI',
                             'CPBC',
                             'APGT',
                             'BKSG',
                             'NMRT',
                             'OL01',
                             'AFSF',
                             'ASIS',
                             'SCAS',
                             'CDLS',
                             'APGI',
                             'AMGL',
                             'SCCB',
                             'CPVC',
                             'COWL',
                             'LOCQ',
                             'STLV',
                             'MPTL');

   v_rows_processed := v_rows_processed + sql%rowcount;

   commit;

   update fcubs_process_log
      set status = 'COMPLETED',
          message = 'SUCCESS',
          row_count = v_rows_processed,
          end_date = sysdate,
          duration = (sysdate - start_date) * 24 * 3600
    where process_sequence = v_seq;

   commit;
   
-------------------   

   select process_seq.nextval into v_seq from dual;
   
   insert into fcubs_process_log (process_sequence,
                                  process_type,
                                  process_name,
                                  reference_date,
                                  status,
                                  message,
                                  row_count,
                                  start_date,
                                  end_date,
                                  duration)
        values (v_seq,
                'CLASS MAPPING DERIVE',
                'PRC_MITB_CLASS_MAP_INSERT_3',
                v_date,
                'STARTED',
                null,
                0,
                sysdate,
                null,
                null);

   commit;
   insert /*+ append parallel */
         into  stglive.tmp_mitb_class_mapping_1 (reference_date,branch_code,
                                               unit_ref_no,
                                               unit_type,
                                               product,
                                               customer,
                                               related_account,
                                               related_ref,
                                               ccy,
                                               mis_head,
                                               pool_code,
                                               rate_flag,
                                               ref_rate,
                                               calc_method,
                                               processed_flag,
                                               mis_group,
                                               mis_group_txn,
                                               mis_group_comp,
                                               comp_mis_1,
                                               txn_mis_1,
                                               comp_mis_2,
                                               txn_mis_2,
                                               comp_mis_3,
                                               txn_mis_3,
                                               comp_mis_4,
                                               txn_mis_4,
                                               comp_mis_5,
                                               txn_mis_5,
                                               comp_mis_6,
                                               txn_mis_6,
                                               comp_mis_7,
                                               txn_mis_7,
                                               comp_mis_8,
                                               txn_mis_8,
                                               comp_mis_9,
                                               txn_mis_9,
                                               comp_mis_10,
                                               txn_mis_10,
                                               cost_code1,
                                               cost_code2,
                                               cost_code3,
                                               cost_code4,
                                               cost_code5,
                                               fund_mis_1,
                                               fund_mis_2,
                                               fund_mis_3,
                                               fund_mis_4,
                                               fund_mis_5,
                                               fund_mis_6,
                                               fund_mis_7,
                                               fund_mis_8,
                                               fund_mis_9,
                                               fund_mis_10,
                                               ref_spread,
                                               ref_rate_type,
                                               ref_rate_code,
                                               ref_xrate)
      select /*+ PARALLEL(10) */
            v_date,branch_code,
             unit_ref_no,
             unit_type,
             product,
             customer,
             related_account,
             related_ref,
             ccy,
             mis_head,
             pool_code,
             rate_flag,
             ref_rate,
             calc_method,
             processed_flag,
             mis_group,
             mis_group_txn,
             mis_group_comp,
             comp_mis_1,
             txn_mis_1,
             comp_mis_2,
             txn_mis_2,
             comp_mis_3,
             txn_mis_3,
             comp_mis_4,
             txn_mis_4,
             comp_mis_5,
             txn_mis_5,
             comp_mis_6,
             txn_mis_6,
             comp_mis_7,
             txn_mis_7,
             comp_mis_8,
             txn_mis_8,
             comp_mis_9,
             txn_mis_9,
             comp_mis_10,
             txn_mis_10,
             cost_code1,
             cost_code2,
             cost_code3,
             cost_code4,
             cost_code5,
             fund_mis_1,
             fund_mis_2,
             fund_mis_3,
             fund_mis_4,
             fund_mis_5,
             fund_mis_6,
             fund_mis_7,
             fund_mis_8,
             fund_mis_9,
             fund_mis_10,
             ref_spread,
             ref_rate_type,
             ref_rate_code,
             ref_xrate
        from mitb_class_mapping@loc_fcubsprod
       where unit_type = 'R' and product is null;

   v_rows_processed := v_rows_processed + sql%rowcount;
   commit;
   
   update fcubs_process_log
      set status = 'COMPLETED',
          message = 'SUCCESS',
          row_count = v_rows_processed,
          end_date = sysdate,
          duration = (sysdate - start_date) * 24 * 3600
    where process_sequence = v_seq;

   commit;
   
select count(*) into c  from all_objects
where object_type = 'INDEX' and owner = 'STGLIVE'
and  object_name = 'IDX_COMP_MIS_4D';
if c = 1 then
execute immediate 'drop index IDX_COMP_MIS_4D';
end if;


select count(*) into c  from all_objects
where object_type = 'INDEX' and owner = 'STGLIVE'
and  object_name = 'IDX_UNIT_REFB';
if c = 1 then
execute immediate 'drop index IDX_UNIT_REFB';
end if;

   
execute immediate 'truncate table src_MITB_CLASS_MAPPING';

   select process_seq.nextval into v_seq from dual;
   
   insert into fcubs_process_log (process_sequence,
                                  process_type,
                                  process_name,
                                  reference_date,
                                  status,
                                  message,
                                  row_count,
                                  start_date,
                                  end_date,
                                  duration)
        values (v_seq,
                'CLASS MAPPING DERIVE',
                'PRC_MITB_CLASS_MAP_EXCHANGE',
                v_date,
                'STARTED',
                null,
                0,
                sysdate,
                null,
                null);

   commit; 
      
   ----truncate partition
   prc_ods_exchange_partition('src_MITB_CLASS_MAPPING', 'tmp_mitb_class_mapping_1', v_partition_name);
   
   update fcubs_process_log
      set status = 'COMPLETED',
          message = 'SUCCESS',
          row_count = v_rows_processed,
          end_date = sysdate,
          duration = (sysdate - start_date) * 24 * 3600
    where process_sequence = v_seq;

   commit;   
   
---------------
   select process_seq.nextval into v_seq from dual;
   
   insert into fcubs_process_log (process_sequence,
                                  process_type,
                                  process_name,
                                  reference_date,
                                  status,
                                  message,
                                  row_count,
                                  start_date,
                                  end_date,
                                  duration)
        values (v_seq,
                'CLASS MAPPING DERIVE',
                'PRC_MITB_CLASS_MAP_CREATE_INDEX',
                v_date,
                'STARTED',
                null,
                0,
                sysdate,
                null,
                null);

   commit;  
    
   execute immediate
      'CREATE INDEX STGLIVE.IDX_COMP_MIS_4D ON STGLIVE.src_MITB_CLASS_MAPPING
        (COMP_MIS_4)
        NOLOGGING
        TABLESPACE STGLIVE_TBS
        PCTFREE    10
        INITRANS   100
        MAXTRANS   255
        STORAGE    (
                    INITIAL          64K
                    NEXT             1M
                    MINEXTENTS       1
                    MAXEXTENTS       UNLIMITED
                    PCTINCREASE      0
                    BUFFER_POOL      DEFAULT
                    FLASH_CACHE      DEFAULT
                    CELL_FLASH_CACHE DEFAULT
                   )
        PARALLEL ( DEGREE 15 INSTANCES 1 )';

   execute immediate
      'CREATE INDEX STGLIVE.IDX_UNIT_REFB ON STGLIVE.src_MITB_CLASS_MAPPING
        (UNIT_REF_NO, BRANCH_CODE, UNIT_TYPE)
        NOLOGGING
        TABLESPACE STGLIVE_INDX
        PCTFREE    10
        INITRANS   100
        MAXTRANS   255
        STORAGE    (
                    INITIAL          128K
                    NEXT             128K
                    MINEXTENTS       1
                    MAXEXTENTS       UNLIMITED
                    PCTINCREASE      0
                    BUFFER_POOL      DEFAULT
                    FLASH_CACHE      DEFAULT
                    CELL_FLASH_CACHE DEFAULT
                   )
        PARALLEL ( DEGREE 15 INSTANCES 1 )';
        
        
  ----send end mail----  
   DCP.prc_send_mail_mitb_END;
   
   update fcubs_process_log
      set status = 'COMPLETED',
          message = 'SUCCESS',
          row_count = v_rows_processed,
          end_date = sysdate,
          duration = (sysdate - start_date) * 24 * 3600
    where process_sequence = v_seq;

   commit;
      

    
exception
   when others
   then
      v_message := substr (sqlerrm, 1, 200);

      update fcubs_process_log
         set status = 'FAILED',
             message = v_message,
             row_count = 0,
             end_date = sysdate,
             duration = (sysdate - start_date) * 24 * 3600
       where process_sequence = v_seq;

      commit;
    
end;
--   PROCEDURE prc_mitb_class_mapping
--AS
--   v_message          VARCHAR2 (4000);
--   v_rows_processed   NUMBER;
--   v_date             DATE;
--   v_seq              NUMBER;
--   v_rows_count       INTEGER;
--   v_sql              VARCHAR2 (10000);
--BEGIN
--   SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;
--   
--   select case when today > trunc(sysdate) then prev_working_day else today end into v_date
--      from src_sttm_dates where branch_code = '099';
--   
--   ------sends initiation mail-----------
--   DCP.prc_send_mail_mitb_initiated;
--
--   INSERT INTO fcubs_process_log (process_sequence,
--                                  process_type,
--                                  process_name,
--                                  reference_date,
--                                  status,
--                                  MESSAGE,
--                                  row_count,
--                                  start_date,
--                                  end_date,
--                                  duration)
--        VALUES (v_seq,
--                'CLASS MAPPING DERIVE',
--                'PRC_MITB_CLASS_MAP',
--                v_date,
--                'STARTED',
--                NULL,
--                0,
--                SYSDATE,
--                NULL,
--                NULL);
--
--   COMMIT;
--
--   EXECUTE IMMEDIATE 'truncate table SRC_MITB_CLASS_MAPPING';
--
--   EXECUTE IMMEDIATE 'drop index IDX_COMP_MIS_4';
--
--   EXECUTE IMMEDIATE 'drop index IDX_UNIT_REF';
--
--
--
--   INSERT /*+ append parallel */
--         INTO  stglive.src_mitb_class_mapping (branch_code,
--                                               unit_ref_no,
--                                               unit_type,
--                                               product,
--                                               customer,
--                                               related_account,
--                                               related_ref,
--                                               ccy,
--                                               mis_head,
--                                               pool_code,
--                                               rate_flag,
--                                               ref_rate,
--                                               calc_method,
--                                               processed_flag,
--                                               mis_group,
--                                               mis_group_txn,
--                                               mis_group_comp,
--                                               comp_mis_1,
--                                               txn_mis_1,
--                                               comp_mis_2,
--                                               txn_mis_2,
--                                               comp_mis_3,
--                                               txn_mis_3,
--                                               comp_mis_4,
--                                               txn_mis_4,
--                                               comp_mis_5,
--                                               txn_mis_5,
--                                               comp_mis_6,
--                                               txn_mis_6,
--                                               comp_mis_7,
--                                               txn_mis_7,
--                                               comp_mis_8,
--                                               txn_mis_8,
--                                               comp_mis_9,
--                                               txn_mis_9,
--                                               comp_mis_10,
--                                               txn_mis_10,
--                                               cost_code1,
--                                               cost_code2,
--                                               cost_code3,
--                                               cost_code4,
--                                               cost_code5,
--                                               fund_mis_1,
--                                               fund_mis_2,
--                                               fund_mis_3,
--                                               fund_mis_4,
--                                               fund_mis_5,
--                                               fund_mis_6,
--                                               fund_mis_7,
--                                               fund_mis_8,
--                                               fund_mis_9,
--                                               fund_mis_10,
--                                               ref_spread,
--                                               ref_rate_type,
--                                               ref_rate_code,
--                                               ref_xrate)
--      SELECT /*+ PARALLEL(10) */
--            branch_code,
--             unit_ref_no,
--             unit_type,
--             product,
--             customer,
--             related_account,
--             related_ref,
--             ccy,
--             mis_head,
--             pool_code,
--             rate_flag,
--             ref_rate,
--             calc_method,
--             processed_flag,
--             mis_group,
--             mis_group_txn,
--             mis_group_comp,
--             comp_mis_1,
--             txn_mis_1,
--             comp_mis_2,
--             txn_mis_2,
--             comp_mis_3,
--             txn_mis_3,
--             comp_mis_4,
--             txn_mis_4,
--             comp_mis_5,
--             txn_mis_5,
--             comp_mis_6,
--             txn_mis_6,
--             comp_mis_7,
--             txn_mis_7,
--             comp_mis_8,
--             txn_mis_8,
--             comp_mis_9,
--             txn_mis_9,
--             comp_mis_10,
--             txn_mis_10,
--             cost_code1,
--             cost_code2,
--             cost_code3,
--             cost_code4,
--             cost_code5,
--             fund_mis_1,
--             fund_mis_2,
--             fund_mis_3,
--             fund_mis_4,
--             fund_mis_5,
--             fund_mis_6,
--             fund_mis_7,
--             fund_mis_8,
--             fund_mis_9,
--             fund_mis_10,
--             ref_spread,
--             ref_rate_type,
--             ref_rate_code,
--             ref_xrate
--        FROM mitb_class_mapping@loc_fcubsprod
--       WHERE unit_type = 'A';
--
--   v_rows_processed := SQL%ROWCOUNT;
--
--   COMMIT;
--
--   INSERT /*+ append parallel */
--         INTO  stglive.src_mitb_class_mapping (branch_code,
--                                               unit_ref_no,
--                                               unit_type,
--                                               product,
--                                               customer,
--                                               related_account,
--                                               related_ref,
--                                               ccy,
--                                               mis_head,
--                                               pool_code,
--                                               rate_flag,
--                                               ref_rate,
--                                               calc_method,
--                                               processed_flag,
--                                               mis_group,
--                                               mis_group_txn,
--                                               mis_group_comp,
--                                               comp_mis_1,
--                                               txn_mis_1,
--                                               comp_mis_2,
--                                               txn_mis_2,
--                                               comp_mis_3,
--                                               txn_mis_3,
--                                               comp_mis_4,
--                                               txn_mis_4,
--                                               comp_mis_5,
--                                               txn_mis_5,
--                                               comp_mis_6,
--                                               txn_mis_6,
--                                               comp_mis_7,
--                                               txn_mis_7,
--                                               comp_mis_8,
--                                               txn_mis_8,
--                                               comp_mis_9,
--                                               txn_mis_9,
--                                               comp_mis_10,
--                                               txn_mis_10,
--                                               cost_code1,
--                                               cost_code2,
--                                               cost_code3,
--                                               cost_code4,
--                                               cost_code5,
--                                               fund_mis_1,
--                                               fund_mis_2,
--                                               fund_mis_3,
--                                               fund_mis_4,
--                                               fund_mis_5,
--                                               fund_mis_6,
--                                               fund_mis_7,
--                                               fund_mis_8,
--                                               fund_mis_9,
--                                               fund_mis_10,
--                                               ref_spread,
--                                               ref_rate_type,
--                                               ref_rate_code,
--                                               ref_xrate)
--      SELECT /*+ PARALLEL(10) */
--            branch_code,
--             unit_ref_no,
--             unit_type,
--             product,
--             customer,
--             related_account,
--             related_ref,
--             ccy,
--             mis_head,
--             pool_code,
--             rate_flag,
--             ref_rate,
--             calc_method,
--             processed_flag,
--             mis_group,
--             mis_group_txn,
--             mis_group_comp,
--             comp_mis_1,
--             txn_mis_1,
--             comp_mis_2,
--             txn_mis_2,
--             comp_mis_3,
--             txn_mis_3,
--             comp_mis_4,
--             txn_mis_4,
--             comp_mis_5,
--             txn_mis_5,
--             comp_mis_6,
--             txn_mis_6,
--             comp_mis_7,
--             txn_mis_7,
--             comp_mis_8,
--             txn_mis_8,
--             comp_mis_9,
--             txn_mis_9,
--             comp_mis_10,
--             txn_mis_10,
--             cost_code1,
--             cost_code2,
--             cost_code3,
--             cost_code4,
--             cost_code5,
--             fund_mis_1,
--             fund_mis_2,
--             fund_mis_3,
--             fund_mis_4,
--             fund_mis_5,
--             fund_mis_6,
--             fund_mis_7,
--             fund_mis_8,
--             fund_mis_9,
--             fund_mis_10,
--             ref_spread,
--             ref_rate_type,
--             ref_rate_code,
--             ref_xrate
--        FROM mitb_class_mapping@loc_fcubsprod
--       WHERE     unit_type = 'R'
--             AND product IN ('TODC',
--                             'SFCF',
--                             'CTIA',
--                             'MT03',
--                             'TTSA',
--                             'SWI1',
--                             'CTLN',
--                             'TL0C',
--                             'SIP5',
--                             'CIDS',
--                             'IDCP',
--                             'SWI2',
--                             'PAIF',
--                             'SIP3',
--                             'RTIN',
--                             'TLLP',
--                             'SIP6',
--                             'IBPF',
--                             'CHPF',
--                             'MMCD',
--                             'BAIM',
--                             'FL01',
--                             'DBCW',
--                             'FRTD',
--                             'DBNF',
--                             'IBTB',
--                             'APIP',
--                             'FCAI',
--                             'TIBD',
--                             'CUBD',
--                             'PPDU',
--                             'PFBD',
--                             'TL01',
--                             'PPCU',
--                             'MSME',
--                             'MHSS',
--                             'LT0C',
--                             'EUBD',
--                             'TFIN',
--                             'COMP',
--                             'TBCS',
--                             'MCGT',
--                             'MSGC',
--                             'USLL',
--                             'PNPO',
--                             'COLC',
--                             'BCSA',
--                             'MPTA',
--                             'RTLN',
--                             'BKGT',
--                             'PASD',
--                             'BAAC',
--                             'BALP',
--                             'EUBO',
--                             'DBQD',
--                             'WNMC',
--                             'CTIN',
--                             'ABPF',
--                             'IBTF',
--                             'WNVV',
--                             'SIP4',
--                             'IBPB',
--                             'INMS',
--                             'CN01',
--                             'BOIF',
--                             'BAVC',
--                             'UNLL',
--                             'OBBT',
--                             'LT01',
--                             'PDAD',
--                             'LTA1',
--                             'WNVI',
--                             'MTDB',
--                             'FUSS',
--                             'APRV',
--                             'STLP',
--                             'FRDC',
--                             'PFTL',
--                             'OTGT',
--                             'KALS',
--                             'TLA1',
--                             'ANPO',
--                             'INMD',
--                             'TTIG',
--                             'OTBD',
--                             'LTP1',
--                             'WPTL',
--                             'RDIP',
--                             'STLM',
--                             'BKOG',
--                             'TLIM',
--                             'IDMT',
--                             'BCCB',
--                             'BTBD',
--                             'OLDM',
--                             'MSCC',
--                             'PFBI',
--                             'IMGL',
--                             'INMC',
--                             'TTIW',
--                             'CIDA',
--                             'CTLA',
--                             'CACS',
--                             'KPLA',
--                             'AFLF',
--                             'OBBP',
--                             'RTBD',
--                             'TLNI',
--                             'CPBC',
--                             'APGT',
--                             'BKSG',
--                             'NMRT',
--                             'OL01',
--                             'AFSF',
--                             'ASIS',
--                             'SCAS',
--                             'CDLS',
--                             'APGI',
--                             'AMGL',
--                             'SCCB',
--                             'CPVC',
--                             'COWL',
--                             'LOCQ',
--                             'STLV',
--                             'MPTL');
--
--   v_rows_processed := v_rows_processed + SQL%ROWCOUNT;
--
--   COMMIT;
--
--
--   INSERT /*+ append parallel */
--         INTO  stglive.src_mitb_class_mapping (branch_code,
--                                               unit_ref_no,
--                                               unit_type,
--                                               product,
--                                               customer,
--                                               related_account,
--                                               related_ref,
--                                               ccy,
--                                               mis_head,
--                                               pool_code,
--                                               rate_flag,
--                                               ref_rate,
--                                               calc_method,
--                                               processed_flag,
--                                               mis_group,
--                                               mis_group_txn,
--                                               mis_group_comp,
--                                               comp_mis_1,
--                                               txn_mis_1,
--                                               comp_mis_2,
--                                               txn_mis_2,
--                                               comp_mis_3,
--                                               txn_mis_3,
--                                               comp_mis_4,
--                                               txn_mis_4,
--                                               comp_mis_5,
--                                               txn_mis_5,
--                                               comp_mis_6,
--                                               txn_mis_6,
--                                               comp_mis_7,
--                                               txn_mis_7,
--                                               comp_mis_8,
--                                               txn_mis_8,
--                                               comp_mis_9,
--                                               txn_mis_9,
--                                               comp_mis_10,
--                                               txn_mis_10,
--                                               cost_code1,
--                                               cost_code2,
--                                               cost_code3,
--                                               cost_code4,
--                                               cost_code5,
--                                               fund_mis_1,
--                                               fund_mis_2,
--                                               fund_mis_3,
--                                               fund_mis_4,
--                                               fund_mis_5,
--                                               fund_mis_6,
--                                               fund_mis_7,
--                                               fund_mis_8,
--                                               fund_mis_9,
--                                               fund_mis_10,
--                                               ref_spread,
--                                               ref_rate_type,
--                                               ref_rate_code,
--                                               ref_xrate)
--      SELECT /*+ PARALLEL(10) */
--            branch_code,
--             unit_ref_no,
--             unit_type,
--             product,
--             customer,
--             related_account,
--             related_ref,
--             ccy,
--             mis_head,
--             pool_code,
--             rate_flag,
--             ref_rate,
--             calc_method,
--             processed_flag,
--             mis_group,
--             mis_group_txn,
--             mis_group_comp,
--             comp_mis_1,
--             txn_mis_1,
--             comp_mis_2,
--             txn_mis_2,
--             comp_mis_3,
--             txn_mis_3,
--             comp_mis_4,
--             txn_mis_4,
--             comp_mis_5,
--             txn_mis_5,
--             comp_mis_6,
--             txn_mis_6,
--             comp_mis_7,
--             txn_mis_7,
--             comp_mis_8,
--             txn_mis_8,
--             comp_mis_9,
--             txn_mis_9,
--             comp_mis_10,
--             txn_mis_10,
--             cost_code1,
--             cost_code2,
--             cost_code3,
--             cost_code4,
--             cost_code5,
--             fund_mis_1,
--             fund_mis_2,
--             fund_mis_3,
--             fund_mis_4,
--             fund_mis_5,
--             fund_mis_6,
--             fund_mis_7,
--             fund_mis_8,
--             fund_mis_9,
--             fund_mis_10,
--             ref_spread,
--             ref_rate_type,
--             ref_rate_code,
--             ref_xrate
--        FROM mitb_class_mapping@loc_fcubsprod
--       WHERE unit_type = 'R' AND product IS NULL;
--
--   v_rows_processed := v_rows_processed + SQL%ROWCOUNT;
--   COMMIT;
--
--   EXECUTE IMMEDIATE
--      'CREATE INDEX STGLIVE.IDX_COMP_MIS_4 ON STGLIVE.SRC_MITB_CLASS_MAPPING
--        (COMP_MIS_4)
--        NOLOGGING
--        TABLESPACE STGLIVE_TBS
--        PCTFREE    10
--        INITRANS   100
--        MAXTRANS   255
--        STORAGE    (
--                    INITIAL          64K
--                    NEXT             1M
--                    MINEXTENTS       1
--                    MAXEXTENTS       UNLIMITED
--                    PCTINCREASE      0
--                    BUFFER_POOL      DEFAULT
--                    FLASH_CACHE      DEFAULT
--                    CELL_FLASH_CACHE DEFAULT
--                   )
--        PARALLEL ( DEGREE 15 INSTANCES 1 )';
--
--   EXECUTE IMMEDIATE
--      'CREATE INDEX STGLIVE.IDX_UNIT_REF ON STGLIVE.SRC_MITB_CLASS_MAPPING
--        (UNIT_REF_NO, BRANCH_CODE, UNIT_TYPE)
--        NOLOGGING
--        TABLESPACE STGLIVE_INDX
--        PCTFREE    10
--        INITRANS   100
--        MAXTRANS   255
--        STORAGE    (
--                    INITIAL          128K
--                    NEXT             128K
--                    MINEXTENTS       1
--                    MAXEXTENTS       UNLIMITED
--                    PCTINCREASE      0
--                    BUFFER_POOL      DEFAULT
--                    FLASH_CACHE      DEFAULT
--                    CELL_FLASH_CACHE DEFAULT
--                   )
--        PARALLEL ( DEGREE 15 INSTANCES 1 )';
--  ----send end mail----  
--   DCP.prc_send_mail_mitb_END;
--   
--   UPDATE fcubs_process_log
--      SET status = 'COMPLETED',
--          MESSAGE = 'SUCCESS',
--          row_count = v_rows_processed,
--          end_date = SYSDATE,
--          duration = (SYSDATE - start_date) * 24 * 3600
--    WHERE process_sequence = v_seq;
--
--   COMMIT;
--EXCEPTION
--   WHEN OTHERS
--   THEN
--      v_message := SUBSTR (SQLERRM, 1, 200);
--
--      UPDATE fcubs_process_log
--         SET status = 'FAILED',
--             MESSAGE = v_message,
--             row_count = 0,
--             end_date = SYSDATE,
--             duration = (SYSDATE - start_date) * 24 * 3600
--       WHERE process_sequence = v_seq;
--
--      COMMIT;
--END;


   PROCEDURE prc_mitb_class_mapping_new
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'CLASS MAPPING DERIVE NEW',
                   'CLASS MAPPING NEW',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_mitb_class_mapping_new';

      --execute immediate 'truncate table src_mitb_class_mapping2';

      INSERT /*+ append parallel */
            INTO  stglive.src_mitb_class_mapping_new (branch_code,
                                                      unit_ref_no,
                                                      unit_type,
                                                      product,
                                                      customer,
                                                      related_account,
                                                      related_ref,
                                                      ccy,
                                                      mis_head,
                                                      pool_code,
                                                      rate_flag,
                                                      ref_rate,
                                                      calc_method,
                                                      processed_flag,
                                                      mis_group,
                                                      mis_group_txn,
                                                      mis_group_comp,
                                                      comp_mis_1,
                                                      txn_mis_1,
                                                      comp_mis_2,
                                                      txn_mis_2,
                                                      comp_mis_3,
                                                      txn_mis_3,
                                                      comp_mis_4,
                                                      txn_mis_4,
                                                      comp_mis_5,
                                                      txn_mis_5,
                                                      comp_mis_6,
                                                      txn_mis_6,
                                                      comp_mis_7,
                                                      txn_mis_7,
                                                      comp_mis_8,
                                                      txn_mis_8,
                                                      comp_mis_9,
                                                      txn_mis_9,
                                                      comp_mis_10,
                                                      txn_mis_10,
                                                      cost_code1,
                                                      cost_code2,
                                                      cost_code3,
                                                      cost_code4,
                                                      cost_code5,
                                                      fund_mis_1,
                                                      fund_mis_2,
                                                      fund_mis_3,
                                                      fund_mis_4,
                                                      fund_mis_5,
                                                      fund_mis_6,
                                                      fund_mis_7,
                                                      fund_mis_8,
                                                      fund_mis_9,
                                                      fund_mis_10,
                                                      ref_spread,
                                                      ref_rate_type,
                                                      ref_rate_code,
                                                      ref_xrate)
         SELECT branch_code,
                unit_ref_no,
                unit_type,
                product,
                customer,
                related_account,
                related_ref,
                ccy,
                mis_head,
                pool_code,
                rate_flag,
                ref_rate,
                calc_method,
                processed_flag,
                mis_group,
                mis_group_txn,
                mis_group_comp,
                comp_mis_1,
                txn_mis_1,
                comp_mis_2,
                txn_mis_2,
                comp_mis_3,
                txn_mis_3,
                comp_mis_4,
                txn_mis_4,
                comp_mis_5,
                txn_mis_5,
                comp_mis_6,
                txn_mis_6,
                comp_mis_7,
                txn_mis_7,
                comp_mis_8,
                txn_mis_8,
                comp_mis_9,
                txn_mis_9,
                comp_mis_10,
                txn_mis_10,
                cost_code1,
                cost_code2,
                cost_code3,
                cost_code4,
                cost_code5,
                fund_mis_1,
                fund_mis_2,
                fund_mis_3,
                fund_mis_4,
                fund_mis_5,
                fund_mis_6,
                fund_mis_7,
                fund_mis_8,
                fund_mis_9,
                fund_mis_10,
                ref_spread,
                ref_rate_type,
                ref_rate_code,
                ref_xrate
           FROM mitb_class_mapping@loc_fcubslive
          WHERE (   product NOT IN ('AWNV',
                                    'ACWO',
                                    'AWRV',
                                    'AWRI',
                                    'AWNI',
                                    'WNPR',
                                    'AWRM',
                                    'AFTR',
                                    'ANPR',
                                    'WFTR',
                                    'MBNK',
                                    'CHTV',
                                    'CHFV',
                                    'IWCL',
                                    'OWCL',
                                    'PCWO',
                                    'ACDO',
                                    'WFTO',
                                    'ACWI',
                                    'PCDO',
                                    'CHDP',
                                    'BCSC',
                                    'MFTR',
                                    'IWRT',
                                    'PFTO',
                                    'AFTO',
                                    'CHWL',
                                    'SWO1',
                                    'SIP1',
                                    'FTRQ',
                                    'CQWL',
                                    'BCIG',
                                    'BCIW',
                                    'LOCH',
                                    'SIP2',
                                    'STOP',
                                    'WOPR',
                                    'MGLD',
                                    'MSCD')
                 OR unit_type = 'A'
                 OR product IS NULL);

      COMMIT;



      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;


   PROCEDURE prc_mitm_product_default
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'PRODUCT DERIVE',
                   'PRODUCT_DEFAULT',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_mitm_product_default';

      INSERT INTO stglive.src_mitm_product_default (product_code,
                                                    mis_group,
                                                    pool_code,
                                                    txn_mis_1,
                                                    txn_mis_2,
                                                    txn_mis_3,
                                                    txn_mis_4,
                                                    txn_mis_5,
                                                    txn_mis_6,
                                                    txn_mis_7,
                                                    txn_mis_8,
                                                    txn_mis_9,
                                                    txn_mis_10,
                                                    cost_code1,
                                                    cost_code2,
                                                    cost_code3,
                                                    cost_code4,
                                                    cost_code5,
                                                    fund_mis_1,
                                                    fund_mis_2,
                                                    fund_mis_3,
                                                    fund_mis_4,
                                                    fund_mis_5,
                                                    fund_mis_6,
                                                    fund_mis_7,
                                                    fund_mis_8,
                                                    fund_mis_9,
                                                    fund_mis_10)
         SELECT product_code,
                mis_group,
                pool_code,
                txn_mis_1,
                txn_mis_2,
                txn_mis_3,
                txn_mis_4,
                txn_mis_5,
                txn_mis_6,
                txn_mis_7,
                txn_mis_8,
                txn_mis_9,
                txn_mis_10,
                cost_code1,
                cost_code2,
                cost_code3,
                cost_code4,
                cost_code5,
                fund_mis_1,
                fund_mis_2,
                fund_mis_3,
                fund_mis_4,
                fund_mis_5,
                fund_mis_6,
                fund_mis_7,
                fund_mis_8,
                fund_mis_9,
                fund_mis_10
           FROM mitm_product_default@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;


   PROCEDURE prc_mitm_default_codes
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'DEFAULT CODES DERIVE',
                   'DEFAULT_CODES',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_mitm_default_codes';

      INSERT INTO stglive.src_mitm_default_codes (key_id,
                                                  mis_type,
                                                  mis_class,
                                                  mis_code)
         SELECT key_id,
                mis_type,
                mis_class,
                mis_code
           FROM mitm_default_codes@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;


   PROCEDURE prc_mitb_class_aclass_mapping
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'ACLASS MAPPING DERIVE',
                   'MITB_CLASS_ACLASS_MAPPING',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_mitb_class_aclass_mapping';

      INSERT INTO stglive.src_mitb_class_aclass_mapping (branch_code,
                                                         unit_ref_no,
                                                         unit_type,
                                                         product,
                                                         customer,
                                                         related_account,
                                                         related_ref,
                                                         ccy,
                                                         mis_head,
                                                         pool_code,
                                                         rate_flag,
                                                         ref_rate,
                                                         calc_method,
                                                         processed_flag,
                                                         mis_group,
                                                         mis_group_txn,
                                                         mis_group_comp,
                                                         comp_mis_1,
                                                         txn_mis_1,
                                                         comp_mis_2,
                                                         txn_mis_2,
                                                         comp_mis_3,
                                                         txn_mis_3,
                                                         comp_mis_4,
                                                         txn_mis_4,
                                                         comp_mis_5,
                                                         txn_mis_5,
                                                         comp_mis_6,
                                                         txn_mis_6,
                                                         comp_mis_7,
                                                         txn_mis_7,
                                                         comp_mis_8,
                                                         txn_mis_8,
                                                         comp_mis_9,
                                                         txn_mis_9,
                                                         comp_mis_10,
                                                         txn_mis_10,
                                                         cost_code1,
                                                         cost_code2,
                                                         cost_code3,
                                                         cost_code4,
                                                         cost_code5,
                                                         fund_mis_1,
                                                         fund_mis_2,
                                                         fund_mis_3,
                                                         fund_mis_4,
                                                         fund_mis_5,
                                                         fund_mis_6,
                                                         fund_mis_7,
                                                         fund_mis_8,
                                                         fund_mis_9,
                                                         fund_mis_10,
                                                         ref_spread,
                                                         ref_rate_type,
                                                         ref_rate_code,
                                                         ref_xrate,
                                                         account_class,
                                                         effective_date)
         SELECT branch_code,
                unit_ref_no,
                unit_type,
                product,
                customer,
                related_account,
                related_ref,
                ccy,
                mis_head,
                pool_code,
                rate_flag,
                ref_rate,
                calc_method,
                processed_flag,
                mis_group,
                mis_group_txn,
                mis_group_comp,
                comp_mis_1,
                txn_mis_1,
                comp_mis_2,
                txn_mis_2,
                comp_mis_3,
                txn_mis_3,
                comp_mis_4,
                txn_mis_4,
                comp_mis_5,
                txn_mis_5,
                comp_mis_6,
                txn_mis_6,
                comp_mis_7,
                txn_mis_7,
                comp_mis_8,
                txn_mis_8,
                comp_mis_9,
                txn_mis_9,
                comp_mis_10,
                txn_mis_10,
                cost_code1,
                cost_code2,
                cost_code3,
                cost_code4,
                cost_code5,
                fund_mis_1,
                fund_mis_2,
                fund_mis_3,
                fund_mis_4,
                fund_mis_5,
                fund_mis_6,
                fund_mis_7,
                fund_mis_8,
                fund_mis_9,
                fund_mis_10,
                ref_spread,
                ref_rate_type,
                ref_rate_code,
                ref_xrate,
                account_class,
                effective_date
           FROM mitb_class_aclass_mapping@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;


   PROCEDURE prc_detb_upload_detail
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'DETB UPLOAD DERIVE',
                   'DETB_UPLOAD_DETAIL',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_detb_upload_detail';

      INSERT INTO stglive.src_detb_upload_detail (instrument_no,
                                                  fin_cycle,
                                                  period_code,
                                                  mis_code,
                                                  rel_cust,
                                                  addl_text,
                                                  mis_group,
                                                  dw_ac_no,
                                                  account_new,
                                                  txn_mis_1,
                                                  txn_mis_2,
                                                  txn_mis_3,
                                                  txn_mis_4,
                                                  txn_mis_5,
                                                  txn_mis_6,
                                                  txn_mis_7,
                                                  txn_mis_8,
                                                  txn_mis_9,
                                                  txn_mis_10,
                                                  comp_mis_1,
                                                  comp_mis_2,
                                                  comp_mis_3,
                                                  comp_mis_4,
                                                  comp_mis_5,
                                                  comp_mis_6,
                                                  comp_mis_7,
                                                  comp_mis_8,
                                                  comp_mis_9,
                                                  comp_mis_10,
                                                  cost_code1,
                                                  cost_code2,
                                                  cost_code3,
                                                  cost_code4,
                                                  cost_code5,
                                                  mis_head,
                                                  related_account,
                                                  related_ref,
                                                  pool_code,
                                                  ref_rate,
                                                  calc_method,
                                                  batch_no,
                                                  mis_flag,
                                                  mis_group_txn,
                                                  branch_code,
                                                  source_code,
                                                  curr_no,
                                                  upload_stat,
                                                  ccy_cd,
                                                  initiation_date,
                                                  amount,
                                                  account,
                                                  account_branch,
                                                  txn_code,
                                                  dr_cr,
                                                  lcy_equivalent,
                                                  exch_rate,
                                                  value_date,
                                                  external_ref_no,
                                                  reserved_funds_ref,
                                                  delete_stat,
                                                  upload_date,
                                                  txt_file_name)
         SELECT instrument_no,
                fin_cycle,
                period_code,
                mis_code,
                rel_cust,
                addl_text,
                mis_group,
                dw_ac_no,
                account_new,
                txn_mis_1,
                txn_mis_2,
                txn_mis_3,
                txn_mis_4,
                txn_mis_5,
                txn_mis_6,
                txn_mis_7,
                txn_mis_8,
                txn_mis_9,
                txn_mis_10,
                comp_mis_1,
                comp_mis_2,
                comp_mis_3,
                comp_mis_4,
                comp_mis_5,
                comp_mis_6,
                comp_mis_7,
                comp_mis_8,
                comp_mis_9,
                comp_mis_10,
                cost_code1,
                cost_code2,
                cost_code3,
                cost_code4,
                cost_code5,
                mis_head,
                related_account,
                related_ref,
                pool_code,
                ref_rate,
                calc_method,
                batch_no,
                mis_flag,
                mis_group_txn,
                branch_code,
                source_code,
                curr_no,
                upload_stat,
                ccy_cd,
                initiation_date,
                amount,
                account,
                account_branch,
                txn_code,
                dr_cr,
                lcy_equivalent,
                exch_rate,
                value_date,
                external_ref_no,
                reserved_funds_ref,
                delete_stat,
                upload_date,
                txt_file_name
           FROM detb_upload_detail@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;


   PROCEDURE prc_sttm_account_class
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE;
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;
      
      select case when today > trunc(sysdate) then prev_working_day else today end into v_date
      from src_sttm_dates where branch_code = '099';

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'ACCOUNT CLASS DERIVE',
                   'STTM_ACCOUNT_CLASS',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_sttm_account_class';

      INSERT INTO stglive.src_sttm_account_class (
                     account_class,
                     description,
                     ac_class_type,
                     dormancy,
                     acc_stmt_type,
                     acc_stmt_cycle,
                     statement_day,
                     limit_check_required,
                     overdraft_facility,
                     ic_inclusion,
                     track_accrued_ic,
                     passbook_facility,
                     cheque_book_facility,
                     atm_facility,
                     dr_gl_line,
                     cr_gl_line,
                     natural_gl_sign,
                     dr_cb_line,
                     cr_cb_line,
                     dr_ho_line,
                     cr_ho_line,
                     branch_list,
                     ccy_list,
                     cuscat_list,
                     mod_no,
                     record_stat,
                     once_auth,
                     auth_stat,
                     maker_id,
                     maker_dt_stamp,
                     checker_id,
                     checker_dt_stamp,
                     stacccls_branch_list,
                     stacccls_ccy_list,
                     stacccls_cuscat_list,
                     has_is,
                     offline_limit,
                     acst_format,
                     display_iban_in_advices,
                     auto_rollover,
                     default_tenor_days,
                     default_tenor_months,
                     default_tenor_years,
                     close_on_maturity,
                     move_int_to_unclaimed,
                     move_pric_to_unclaimed,
                     avail_bal_reqd,
                     acc_stmt_type2,
                     acc_stmt_cycle2,
                     statement_day2,
                     acc_stmt_type3,
                     acc_stmt_cycle3,
                     statement_day3,
                     auto_dep_ac_class,
                     auto_dep_trn_code,
                     sweep_mode,
                     min_bal_reqd,
                     dep_multiple_of,
                     auto_dep_ccy,
                     auto_dep_break_method,
                     auto_dep_def_rate_code,
                     auto_dep_def_rate_type,
                     break_deposits_first,
                     provide_interest_on_broken_dep,
                     has_drcr_adv,
                     rd_flag,
                     rd_move_mat_to_unclaimed,
                     rd_move_funds_on_ovd,
                     rd_schedule_days,
                     rd_schedule_months,
                     rd_schedule_years,
                     rd_min_installment_amt,
                     rd_min_schedule_days,
                     rd_max_schedule_days,
                     interpay,
                     track_receivable,
                     product_list,
                     txn_code_list,
                     ac_stat_de_post,
                     account_code,
                     reg_d_applicable,
                     regd_periodicity,
                     auto_reorder_check_required,
                     auto_reorder_check_level,
                     auto_reorder_check_leaves,
                     referral_required,
                     acc_statistics,
                     lodgement_book,
                     status_change_automatic,
                     dormant_param,
                     end_date,
                     min_tenor_days,
                     min_tenor_months,
                     min_tenor_years,
                     max_tenor_days,
                     max_tenor_months,
                     max_tenor_years,
                     min_amount,
                     max_amount,
                     grace_period,
                     partial_liquidation,
                     dr_int_liqd_days,
                     dr_int_liqd_mode,
                     dr_int_using_recv,
                     verify_funds_for_drint,
                     dr_int_notice,
                     allow_part_liq_with_amt_blk,
                     excl_sameday_rvrtrns_fm_stmt,
                     allow_back_period_entry,
                     event_class_code,
                     auto_prov_reqd,
                     provisioning_frequency,
                     exposure_category,
                     prov_ccy_type,
                     chg_start_adv,
                     free_banking_days,
                     advice_days,
                     consolidation_reqd,
                     ilm_applicable,
                     gen_interim_stmt,
                     gen_interim_stmt_on_mvmt,
                     gen_balance_report,
                     interim_report_since,
                     interim_report_type,
                     balance_report_since,
                     balance_report_type,
                     turnover_event_class_code,
                     turnover_rtoh_code,
                     start_date,
                     daylight_limit,
                     link_ccy,
                     ccy_option_prod,
                     fixing_days,
                     trnover_lmt_code,
                     deposit_pc_bridge_gl,
                     deposit_pc_category,
                     deposit_pc_trn_code,
                     dual_ccy_deposit,
                     escrow_process,
                     trn_code,
                     trn_rev_code,
                     minor_major,
                     max_no_cheque_rejections,
                     repl_cust_sig,
                     auto_extension,
                     reference_date,
                     allow_prepayment,
                     pool_code,
                     mudarabah_acc_class,
                     mudarabah_fund_id,
                     profit_calc_bal_type,
                     redemption,
                     pre_redemption,
                     profit_sharing,
                     sal_blk_days,
                     days_unauth_noactivity,
                     days_auth_noactivity,
                     td_ratechart_allow,
                     CLUSTER_ID,
                     cash_reserve_ratio,
                     exclude_from_distribution,
                     project_account,
                     trustac_cash_limit,
                     lrgdrbalflg,
                     send_notification,
                     frequency,
                     days,
                     passbook_rt_product,
                     spend_analysis_reqd,
                     intrate_cumamt_reqd,
                     int_rate_option_redamt,
                     special_rate_code,
                     int_rate_option_remamt,
                     allow_topup,
                     blk_open_days,
                     blk_open_months,
                     blk_mat_days,
                     blk_mat_months,
                     int_rate_option_topup,
                     enable_sweep_in,
                     enable_rev_sweep_in,
                     rate_chart_tenor,
                     holiday_calendar,
                     holiday_movement,
                     mat_dt_mov_acros_month,
                     adhoc_hol,
                     applicable_dep_tenor,
                     month_end_deposit,
                     comp_wise_tracking_reqd,
                     acccls_autodep_list,
                     recompute_mat_date,
                     denm_deposit,
                     deferred_bal_update,
                     chk_min_bal_for_sweep)
         SELECT account_class,
                description,
                ac_class_type,
                dormancy,
                acc_stmt_type,
                acc_stmt_cycle,
                statement_day,
                limit_check_required,
                overdraft_facility,
                ic_inclusion,
                track_accrued_ic,
                passbook_facility,
                cheque_book_facility,
                atm_facility,
                dr_gl_line,
                cr_gl_line,
                natural_gl_sign,
                dr_cb_line,
                cr_cb_line,
                dr_ho_line,
                cr_ho_line,
                branch_list,
                ccy_list,
                cuscat_list,
                mod_no,
                record_stat,
                once_auth,
                auth_stat,
                maker_id,
                maker_dt_stamp,
                checker_id,
                checker_dt_stamp,
                stacccls_branch_list,
                stacccls_ccy_list,
                stacccls_cuscat_list,
                has_is,
                offline_limit,
                acst_format,
                display_iban_in_advices,
                auto_rollover,
                default_tenor_days,
                default_tenor_months,
                default_tenor_years,
                close_on_maturity,
                move_int_to_unclaimed,
                move_pric_to_unclaimed,
                avail_bal_reqd,
                acc_stmt_type2,
                acc_stmt_cycle2,
                statement_day2,
                acc_stmt_type3,
                acc_stmt_cycle3,
                statement_day3,
                auto_dep_ac_class,
                auto_dep_trn_code,
                sweep_mode,
                min_bal_reqd,
                dep_multiple_of,
                auto_dep_ccy,
                auto_dep_break_method,
                auto_dep_def_rate_code,
                auto_dep_def_rate_type,
                break_deposits_first,
                provide_interest_on_broken_dep,
                has_drcr_adv,
                rd_flag,
                rd_move_mat_to_unclaimed,
                rd_move_funds_on_ovd,
                rd_schedule_days,
                rd_schedule_months,
                rd_schedule_years,
                rd_min_installment_amt,
                rd_min_schedule_days,
                rd_max_schedule_days,
                interpay,
                track_receivable,
                product_list,
                txn_code_list,
                ac_stat_de_post,
                account_code,
                reg_d_applicable,
                regd_periodicity,
                auto_reorder_check_required,
                auto_reorder_check_level,
                auto_reorder_check_leaves,
                referral_required,
                acc_statistics,
                lodgement_book,
                status_change_automatic,
                dormant_param,
                end_date,
                min_tenor_days,
                min_tenor_months,
                min_tenor_years,
                max_tenor_days,
                max_tenor_months,
                max_tenor_years,
                min_amount,
                max_amount,
                grace_period,
                partial_liquidation,
                dr_int_liqd_days,
                dr_int_liqd_mode,
                dr_int_using_recv,
                verify_funds_for_drint,
                dr_int_notice,
                allow_part_liq_with_amt_blk,
                excl_sameday_rvrtrns_fm_stmt,
                allow_back_period_entry,
                event_class_code,
                auto_prov_reqd,
                provisioning_frequency,
                exposure_category,
                prov_ccy_type,
                chg_start_adv,
                free_banking_days,
                advice_days,
                consolidation_reqd,
                ilm_applicable,
                gen_interim_stmt,
                gen_interim_stmt_on_mvmt,
                gen_balance_report,
                interim_report_since,
                interim_report_type,
                balance_report_since,
                balance_report_type,
                turnover_event_class_code,
                turnover_rtoh_code,
                start_date,
                daylight_limit,
                link_ccy,
                ccy_option_prod,
                fixing_days,
                trnover_lmt_code,
                deposit_pc_bridge_gl,
                deposit_pc_category,
                deposit_pc_trn_code,
                dual_ccy_deposit,
                escrow_process,
                trn_code,
                trn_rev_code,
                minor_major,
                max_no_cheque_rejections,
                repl_cust_sig,
                auto_extension,
                reference_date,
                allow_prepayment,
                pool_code,
                mudarabah_acc_class,
                mudarabah_fund_id,
                profit_calc_bal_type,
                redemption,
                pre_redemption,
                profit_sharing,
                sal_blk_days,
                days_unauth_noactivity,
                days_auth_noactivity,
                td_ratechart_allow,
                CLUSTER_ID,
                cash_reserve_ratio,
                exclude_from_distribution,
                project_account,
                trustac_cash_limit,
                lrgdrbalflg,
                send_notification,
                frequency,
                days,
                passbook_rt_product,
                spend_analysis_reqd,
                intrate_cumamt_reqd,
                int_rate_option_redamt,
                special_rate_code,
                int_rate_option_remamt,
                allow_topup,
                blk_open_days,
                blk_open_months,
                blk_mat_days,
                blk_mat_months,
                int_rate_option_topup,
                enable_sweep_in,
                enable_rev_sweep_in,
                rate_chart_tenor,
                holiday_calendar,
                holiday_movement,
                mat_dt_mov_acros_month,
                adhoc_hol,
                applicable_dep_tenor,
                month_end_deposit,
                comp_wise_tracking_reqd,
                acccls_autodep_list,
                recompute_mat_date,
                denm_deposit,
                deferred_bal_update,
                chk_min_bal_for_sweep
           FROM sttm_account_class@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;


   PROCEDURE prc_sttm_customer
   AS
--      v_message          VARCHAR2 (4000);
--      v_rows_processed   NUMBER;
--      v_date             DATE;
--      v_seq              NUMBER;
--      v_rows_count       INTEGER;
--      v_sql              VARCHAR2 (10000);

v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
      tab_cnt            integer; 

   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;
      
      select case when today > trunc(sysdate) then prev_working_day else today end into v_date
      from src_sttm_dates where branch_code = '099';

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'CUSTOMER DERIVE',
                   'CUSTOMER',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

--      EXECUTE IMMEDIATE 'truncate table src_sttm_customer';
--
--      INSERT /*+ append parallel */
--            INTO  stglive.src_sttm_customer (customer_no,
--                                             customer_type,
--                                             customer_name1,
--                                             address_line1,
--                                             address_line3,
--                                             address_line2,
--                                             address_line4,
--                                             country,
--                                             short_name,
--                                             nationality,
--                                             language,
--                                             exposure_country,
--                                             local_branch,
--                                             liability_no,
--                                             unique_id_name,
--                                             unique_id_value,
--                                             frozen,
--                                             deceased,
--                                             whereabouts_unknown,
--                                             customer_category,
--                                             ho_ac_no,
--                                             record_stat,
--                                             auth_stat,
--                                             mod_no,
--                                             maker_id,
--                                             maker_dt_stamp,
--                                             checker_id,
--                                             checker_dt_stamp,
--                                             once_auth,
--                                             fx_cust_clean_risk_limit,
--                                             overall_limit,
--                                             fx_clean_risk_limit,
--                                             credit_rating,
--                                             revision_date,
--                                             limit_ccy,
--                                             cas_cust,
--                                             liab_node,
--                                             sec_cust_clean_risk_limit,
--                                             sec_clean_risk_limit,
--                                             sec_cust_pstl_risk_limit,
--                                             sec_pstl_risk_limit,
--                                             liab_br,
--                                             past_due_flag,
--                                             default_media,
--                                             ssn,
--                                             swift_code,
--                                             loc_code,
--                                             short_name2,
--                                             utility_provider,
--                                             utility_provider_id,
--                                             risk_profile,
--                                             debtor_category,
--                                             full_name,
--                                             udf_1,
--                                             udf_2,
--                                             udf_3,
--                                             udf_4,
--                                             udf_5,
--                                             aml_required,
--                                             aml_customer_grp,
--                                             mailers_required,
--                                             group_code,
--                                             exposure_category,
--                                             cust_classification,
--                                             cif_status,
--                                             cif_status_since,
--                                             charge_group,
--                                             introducer,
--                                             cust_clg_group,
--                                             chk_digit_valid_reqd,
--                                             alg_id,
--                                             ft_accting_as_of,
--                                             unadvised,
--                                             tax_group,
--                                             consol_tax_cert_reqd,
--                                             individual_tax_cert_reqd,
--                                             cls_ccy_allowed,
--                                             cls_participant,
--                                             fx_netting_customer,
--                                             risk_category,
--                                             fax_number,
--                                             ext_ref_no,
--                                             crm_customer,
--                                             issuer_customer,
--                                             treasury_customer,
--                                             cif_creation_date,
--                                             wht_pct,
--                                             rp_customer,
--                                             generate_mt920,
--                                             kyc_details,
--                                             staff,
--                                             kyc_ref_no,
--                                             utility_provider_type,
--                                             joint_venture,
--                                             jv_limit_tracking,
--                                             private_customer,
--                                             lc_collateral_pct,
--                                             elcm_customer,
--                                             elcm_customer_no,
--                                             auto_create_account,
--                                             auto_cust_ac_no,
--                                             track_limits,
--                                             ar_ap_tracking,
--                                             rm_id,
--                                             autogen_stmtplan,
--                                             frequency,
--                                             stmt_day,
--                                             pincode,
--                                             mfi_customer)
--         SELECT customer_no,
--                customer_type,
--                customer_name1,
--                address_line1,
--                address_line3,
--                address_line2,
--                address_line4,
--                country,
--                short_name,
--                nationality,
--                language,
--                exposure_country,
--                local_branch,
--                liability_no,
--                unique_id_name,
--                unique_id_value,
--                frozen,
--                deceased,
--                whereabouts_unknown,
--                customer_category,
--                ho_ac_no,
--                record_stat,
--                auth_stat,
--                mod_no,
--                maker_id,
--                maker_dt_stamp,
--                checker_id,
--                checker_dt_stamp,
--                once_auth,
--                fx_cust_clean_risk_limit,
--                overall_limit,
--                fx_clean_risk_limit,
--                credit_rating,
--                revision_date,
--                limit_ccy,
--                cas_cust,
--                liab_node,
--                sec_cust_clean_risk_limit,
--                sec_clean_risk_limit,
--                sec_cust_pstl_risk_limit,
--                sec_pstl_risk_limit,
--                liab_br,
--                past_due_flag,
--                default_media,
--                ssn,
--                swift_code,
--                loc_code,
--                short_name2,
--                utility_provider,
--                utility_provider_id,
--                risk_profile,
--                debtor_category,
--                full_name,
--                udf_1,
--                udf_2,
--                udf_3,
--                udf_4,
--                udf_5,
--                aml_required,
--                aml_customer_grp,
--                mailers_required,
--                group_code,
--                exposure_category,
--                cust_classification,
--                cif_status,
--                cif_status_since,
--                charge_group,
--                introducer,
--                cust_clg_group,
--                chk_digit_valid_reqd,
--                alg_id,
--                ft_accting_as_of,
--                unadvised,
--                tax_group,
--                consol_tax_cert_reqd,
--                individual_tax_cert_reqd,
--                cls_ccy_allowed,
--                cls_participant,
--                fx_netting_customer,
--                risk_category,
--                fax_number,
--                ext_ref_no,
--                crm_customer,
--                issuer_customer,
--                treasury_customer,
--                cif_creation_date,
--                wht_pct,
--                rp_customer,
--                generate_mt920,
--                kyc_details,
--                staff,
--                kyc_ref_no,
--                utility_provider_type,
--                joint_venture,
--                jv_limit_tracking,
--                private_customer,
--                lc_collateral_pct,
--                elcm_customer,
--                elcm_customer_no,
--                auto_create_account,
--                auto_cust_ac_no,
--                track_limits,
--                ar_ap_tracking,
--                rm_id,
--                autogen_stmtplan,
--                frequency,
--                stmt_day,
--                pincode,
--                mfi_customer
--           FROM sttm_customer@loc_fcubslive;
--
--      v_rows_processed := SQL%ROWCOUNT;

begin
        select count(*) into tab_cnt from sys.all_tables where lower(table_name)='tmp_sttm_customer' and owner = 'STGLIVE';
        EXCEPTION
        WHEN NO_DATA_FOUND THEN
            tab_cnt:=0;
        end;
        
      if(tab_cnt)=1 Then
        execute immediate 'drop table tmp_sttm_customer';
              v_sql := 'create table tmp_sttm_customer as SELECT /*+ PARALLEL(auto) */ customer_no,
                customer_type,
                customer_name1,
                address_line1,
                address_line3,
                address_line2,
                address_line4,
                country,
                short_name,
                nationality,
                language,
                exposure_country,
                local_branch,
                liability_no,
                unique_id_name,
                unique_id_value,
                frozen,
                deceased,
                whereabouts_unknown,
                customer_category,
                ho_ac_no,
                record_stat,
                auth_stat,
                mod_no,
                maker_id,
                maker_dt_stamp,
                checker_id,
                checker_dt_stamp,
                once_auth,
                fx_cust_clean_risk_limit,
                overall_limit,
                fx_clean_risk_limit,
                credit_rating,
                revision_date,
                limit_ccy,
                cas_cust,
                liab_node,
                sec_cust_clean_risk_limit,
                sec_clean_risk_limit,
                sec_cust_pstl_risk_limit,
                sec_pstl_risk_limit,
                liab_br,
                past_due_flag,
                default_media,
                ssn,
                swift_code,
                loc_code,
                short_name2,
                utility_provider,
                utility_provider_id,
                risk_profile,
                debtor_category,
                full_name,
                udf_1,
                udf_2,
                udf_3,
                udf_4,
                udf_5,
                aml_required,
                aml_customer_grp,
                mailers_required,
                group_code,
                exposure_category,
                cust_classification,
                cif_status,
                cif_status_since,
                charge_group,
                introducer,
                cust_clg_group,
                chk_digit_valid_reqd,
                alg_id,
                ft_accting_as_of,
                unadvised,
                tax_group,
                consol_tax_cert_reqd,
                individual_tax_cert_reqd,
                cls_ccy_allowed,
                cls_participant,
                fx_netting_customer,
                risk_category,
                fax_number,
                ext_ref_no,
                crm_customer,
                issuer_customer,
                treasury_customer,
                cif_creation_date,
                wht_pct,
                rp_customer,
                generate_mt920,
                kyc_details,
                staff,
                kyc_ref_no,
                utility_provider_type,
                joint_venture,
                jv_limit_tracking,
                private_customer,
                lc_collateral_pct,
                elcm_customer,
                elcm_customer_no,
                auto_create_account,
                auto_cust_ac_no,
                track_limits,
                ar_ap_tracking,
                rm_id,
                autogen_stmtplan,
                frequency,
                stmt_day,
                pincode,
                mfi_customer,
                '||1||' qset
           FROM sttm_customer@loc_fcubslive';
            execute immediate v_sql;
            v_rows_processed := sql%rowcount;
      else
             v_sql := 'create table tmp_sttm_customer as SELECT /*+ PARALLEL(auto) */ customer_no,
                customer_type,
                customer_name1,
                address_line1,
                address_line3,
                address_line2,
                address_line4,
                country,
                short_name,
                nationality,
                language,
                exposure_country,
                local_branch,
                liability_no,
                unique_id_name,
                unique_id_value,
                frozen,
                deceased,
                whereabouts_unknown,
                customer_category,
                ho_ac_no,
                record_stat,
                auth_stat,
                mod_no,
                maker_id,
                maker_dt_stamp,
                checker_id,
                checker_dt_stamp,
                once_auth,
                fx_cust_clean_risk_limit,
                overall_limit,
                fx_clean_risk_limit,
                credit_rating,
                revision_date,
                limit_ccy,
                cas_cust,
                liab_node,
                sec_cust_clean_risk_limit,
                sec_clean_risk_limit,
                sec_cust_pstl_risk_limit,
                sec_pstl_risk_limit,
                liab_br,
                past_due_flag,
                default_media,
                ssn,
                swift_code,
                loc_code,
                short_name2,
                utility_provider,
                utility_provider_id,
                risk_profile,
                debtor_category,
                full_name,
                udf_1,
                udf_2,
                udf_3,
                udf_4,
                udf_5,
                aml_required,
                aml_customer_grp,
                mailers_required,
                group_code,
                exposure_category,
                cust_classification,
                cif_status,
                cif_status_since,
                charge_group,
                introducer,
                cust_clg_group,
                chk_digit_valid_reqd,
                alg_id,
                ft_accting_as_of,
                unadvised,
                tax_group,
                consol_tax_cert_reqd,
                individual_tax_cert_reqd,
                cls_ccy_allowed,
                cls_participant,
                fx_netting_customer,
                risk_category,
                fax_number,
                ext_ref_no,
                crm_customer,
                issuer_customer,
                treasury_customer,
                cif_creation_date,
                wht_pct,
                rp_customer,
                generate_mt920,
                kyc_details,
                staff,
                kyc_ref_no,
                utility_provider_type,
                joint_venture,
                jv_limit_tracking,
                private_customer,
                lc_collateral_pct,
                elcm_customer,
                elcm_customer_no,
                auto_create_account,
                auto_cust_ac_no,
                track_limits,
                ar_ap_tracking,
                rm_id,
                autogen_stmtplan,
                frequency,
                stmt_day,
                pincode,
                mfi_customer,
                '||1||' qset
           FROM sttm_customer@loc_fcubslive';
            --FROM cstm_inst_detail@dwhfcubs';
            execute immediate v_sql;
            v_rows_processed := sql%rowcount;
      
      end if;
         --REV_CSTM_INST_DETAILS
       execute immediate 'alter table stglive.src_sttm_customer 
                    exchange partition P' ||to_number(10)|| ' with table tmp_sttm_customer';
                    
                    prc_index_rebuild('X3_STTM_CUSTOME');
                    prc_index_rebuild('UI02_STTM_CUSTOME');
                    prc_index_rebuild('UI01_STTM_CUSTOME');
                    prc_index_rebuild('SRC_STTM_CUST_IDXE');
                    prc_index_rebuild('SRC_STTM_CUST_IDX');
                    prc_index_rebuild('MIGRM4_STTM_CUSTOME');
                    prc_index_rebuild('MIGRM3_STTM_CUSTOME');
                    prc_index_rebuild('MIGRM2_STTM_CUSTOME');
                    prc_index_rebuild('MIGRM1_STTM_CUSTOME');
                    prc_index_rebuild('IDX03_MIG_STTM_CUSTOME');
                    prc_index_rebuild('IDX02_MIG_STTM_CUSTOME');
                    prc_index_rebuild('IDX01_MIG_STTM_CUSTOME');
                    
        commit;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;


   PROCEDURE prc_sttm_country
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'COUNTRY DERIVE',
                   'COUNTRY',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_sttm_country';

      INSERT INTO stglive.src_sttm_country (country_code,
                                            description,
                                            auth_stat,
                                            record_stat,
                                            mod_no,
                                            checker_dt_stamp,
                                            once_auth,
                                            maker_id,
                                            maker_dt_stamp,
                                            checker_id,
                                            alt_country_code,
                                            region_code,
                                            blacklisted,
                                            overall_limit,
                                            limit_ccy,
                                            iban_check_reqd,
                                            intra_european,
                                            clr_code_bic,
                                            clearing_network,
                                            iso_num_country_code,
                                            gen_mt205,
                                            isd_code)
         SELECT country_code,
                description,
                auth_stat,
                record_stat,
                mod_no,
                checker_dt_stamp,
                once_auth,
                maker_id,
                maker_dt_stamp,
                checker_id,
                alt_country_code,
                region_code,
                blacklisted,
                overall_limit,
                limit_ccy,
                iban_check_reqd,
                intra_european,
                clr_code_bic,
                clearing_network,
                iso_num_country_code,
                gen_mt205,
                isd_code
           FROM sttm_country@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_istm_instrument_detail
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'INSTRUMENT DETAIL DERIVE',
                   'INSTRUMENT_DETAIL',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_istm_instrument_detail';

      INSERT INTO stglive.src_istm_instrument_detail (instrument_type,
                                                      branch,
                                                      account,
                                                      cheque_book_no,
                                                      cheque_no,
                                                      status,
                                                      amount,
                                                      beneficiary,
                                                      generation_date,
                                                      value_date,
                                                      auth_stat,
                                                      record_stat,
                                                      mod_no,
                                                      checker_dt_stamp,
                                                      once_auth,
                                                      maker_id,
                                                      maker_dt_stamp,
                                                      checker_id,
                                                      account_branch,
                                                      ccy,
                                                      module,
                                                      issuer_code)
         SELECT instrument_type,
                branch,
                account,
                cheque_book_no,
                cheque_no,
                status,
                amount,
                beneficiary,
                generation_date,
                value_date,
                auth_stat,
                record_stat,
                mod_no,
                checker_dt_stamp,
                once_auth,
                maker_id,
                maker_dt_stamp,
                checker_id,
                account_branch,
                ccy,
                module,
                issuer_code
           FROM istm_instrument_detail@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;


   PROCEDURE prc_cltb_account_comp_balances
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'ACCOUNT COMP BALANCES DERIVE',
                   'CLTB_ACCOUNT_COMP_BALANCES',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_cltb_account_comp_balances';

      INSERT INTO stglive.src_cltb_account_comp_balances (branch_code,
                                                          account_number,
                                                          component_name,
                                                          val_date,
                                                          balance)
         SELECT branch_code,
                account_number,
                component_name,
                val_date,
                balance
           FROM cltb_account_comp_balances@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;


   PROCEDURE prc_cftb_contract_interest
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'CONTRACT INT. DERIVE',
                   'CONTRACT_INTEREST',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_cftb_contract_interest';

      INSERT INTO stglive.src_cftb_contract_interest (
                     component,
                     contract_reference_no,
                     value_date,
                     transaction_date,
                     amount,
                     change_during_amendment,
                     currency,
                     event,
                     event_sequence_no,
                     pickup_event_sequence_no,
                     interest_basis,
                     rate,
                     rate_code,
                     spread,
                     status,
                     acquired_amount,
                     waiver,
                     accrual_required,
                     accrual_ccy,
                     rate_type,
                     penalty_type,
                     shown_in_contract_main_screen,
                     max_rate,
                     min_rate,
                     reset_tenor,
                     borrow_lend_ind,
                     rate_calc_type,
                     cust_margin,
                     level_no,
                     bulk_amt_flag,
                     deposit_as_ratecode,
                     unit,
                     no_of_units,
                     rate_code_usage,
                     disc_accr_applicable,
                     denominator_basis,
                     basis_366,
                     no_of_int_period,
                     min_spread,
                     max_spread,
                     margin,
                     multitenor)
         SELECT component,
                contract_reference_no,
                value_date,
                transaction_date,
                amount,
                change_during_amendment,
                currency,
                event,
                event_sequence_no,
                pickup_event_sequence_no,
                interest_basis,
                rate,
                rate_code,
                spread,
                status,
                acquired_amount,
                waiver,
                accrual_required,
                accrual_ccy,
                rate_type,
                penalty_type,
                shown_in_contract_main_screen,
                max_rate,
                min_rate,
                reset_tenor,
                borrow_lend_ind,
                rate_calc_type,
                cust_margin,
                level_no,
                bulk_amt_flag,
                deposit_as_ratecode,
                unit,
                no_of_units,
                rate_code_usage,
                disc_accr_applicable,
                denominator_basis,
                basis_366,
                no_of_int_period,
                min_spread,
                max_spread,
                margin,
                multitenor
           FROM cftb_contract_interest@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;


   PROCEDURE prc_cstm_product
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'PRODUCT DERIVE',
                   'PRODUCT',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_cstm_product';

      INSERT INTO stglive.src_cstm_product (product_code,
                                            product_description,
                                            product_slogan,
                                            product_remarks,
                                            product_start_date,
                                            product_end_date,
                                            product_group,
                                            warehouse_code,
                                            part_of_product,
                                            module,
                                            record_stat,
                                            auth_stat,
                                            once_auth,
                                            maker_id,
                                            maker_dt_stamp,
                                            checker_id,
                                            checker_dt_stamp,
                                            mod_no,
                                            pool_code,
                                            no_of_legs,
                                            branches_list,
                                            currencies_list,
                                            categories_list,
                                            normal_rate_variance,
                                            maximum_rate_variance,
                                            product_type,
                                            rate_code_preferred,
                                            rate_type_preferred,
                                            rth_class,
                                            asset_categories_list,
                                            location_list,
                                            gen_mt103p,
                                            include_for_tds_calc,
                                            instrument_product_allow,
                                            portfolio_product_allow)
         SELECT product_code,
                product_description,
                product_slogan,
                product_remarks,
                product_start_date,
                product_end_date,
                product_group,
                warehouse_code,
                part_of_product,
                module,
                record_stat,
                auth_stat,
                once_auth,
                maker_id,
                maker_dt_stamp,
                checker_id,
                checker_dt_stamp,
                mod_no,
                pool_code,
                no_of_legs,
                branches_list,
                currencies_list,
                categories_list,
                normal_rate_variance,
                maximum_rate_variance,
                product_type,
                rate_code_preferred,
                rate_type_preferred,
                rth_class,
                asset_categories_list,
                location_list,
                gen_mt103p,
                include_for_tds_calc,
                instrument_product_allow,
                portfolio_product_allow
           FROM cstm_product@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;


   PROCEDURE prc_cstb_contract
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'CONTRACT DERIVE',
                   'CONTRACT',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_cstb_contract';

      INSERT INTO stglive.src_cstb_contract (contract_ref_no,
                                             book_date,
                                             serial_no,
                                             latest_event_seq_no,
                                             user_ref_no,
                                             latest_version_no,
                                             branch,
                                             product_code,
                                             counterparty,
                                             contract_status,
                                             auth_status,
                                             template_status,
                                             product_type,
                                             curr_event_code,
                                             module_code,
                                             user_defined_status,
                                             contract_ccy,
                                             latest_event_date,
                                             external_ref_no,
                                             auto_manual_flag,
                                             fund_ref_no,
                                             response_stat,
                                             security_upload_status,
                                             stop_date,
                                             liability_cif,
                                             source,
                                             reversed_cont_ref)
         SELECT contract_ref_no,
                book_date,
                serial_no,
                latest_event_seq_no,
                user_ref_no,
                latest_version_no,
                branch,
                product_code,
                counterparty,
                contract_status,
                auth_status,
                template_status,
                product_type,
                curr_event_code,
                module_code,
                user_defined_status,
                contract_ccy,
                latest_event_date,
                external_ref_no,
                auto_manual_flag,
                fund_ref_no,
                response_stat,
                security_upload_status,
                stop_date,
                liability_cif,
                source,
                reversed_cont_ref
           FROM cstb_contract@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;


   PROCEDURE prc_actb_history
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date         DATE;
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
      v_day              VARCHAR2 (100);
      v_check            number;
      v_check2           number;
      V_SQL_TEXT       VARCHAR2(8000);

   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;
      
      select case when today > trunc(sysdate) then prev_working_day else today end into v_date
      from src_sttm_dates where branch_code = '099';

      SELECT TRIM (TO_CHAR (SYSDATE, 'DAY')) INTO v_day FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'ACTB HISTORY DERIVE',
                   'ACTB_HISTORY',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;
      
      
         EXECUTE IMMEDIATE
               'ALTER TABLE src_actb_history TRUNCATE PARTITION P'
            || TO_CHAR (v_date - 1, 'yyyymmdd');
            
            INSERT /*+ append parallel */
               INTO  src_actb_history (trn_ref_no,
                                       event_sr_no,
                                       event,
                                       ac_branch,
                                       ac_no,
                                       ac_ccy,
                                       drcr_ind,
                                       trn_code,
                                       amount_tag,
                                       fcy_amount,
                                       exch_rate,
                                       lcy_amount,
                                       related_customer,
                                       related_account,
                                       related_reference,
                                       mis_flag,
                                       mis_head,
                                       trn_dt,
                                       value_dt,
                                       txn_init_date,
                                       financial_cycle,
                                       period_code,
                                       instrument_code,
                                       bank_code,
                                       TYPE,
                                       category,
                                       cust_gl,
                                       module,
                                       ac_entry_sr_no,
                                       ib,
                                       flg_position_status,
                                       glmis_update_flag,
                                       user_id,
                                       curr_no,
                                       batch_no,
                                       print_stat,
                                       product_accrual,
                                       auth_id,
                                       product,
                                       glmis_val_upd_flag,
                                       external_ref_no,
                                       dont_showin_stmt,
                                       ic_bal_inclusion,
                                       aml_exception,
                                       orig_pnl_gl,
                                       stmt_dt,
                                       entry_seq_no)
            SELECT trn_ref_no,
                   event_sr_no,
                   event,
                   ac_branch,
                   ac_no,
                   ac_ccy,
                   drcr_ind,
                   trn_code,
                   amount_tag,
                   fcy_amount,
                   exch_rate,
                   lcy_amount,
                   related_customer,
                   related_account,
                   related_reference,
                   mis_flag,
                   mis_head,
                   trn_dt,
                   value_dt,
                   txn_init_date,
                   financial_cycle,
                   period_code,
                   instrument_code,
                   bank_code,
                   TYPE,
                   category,
                   cust_gl,
                   module,
                   ac_entry_sr_no,
                   ib,
                   flg_position_status,
                   glmis_update_flag,
                   user_id,
                   curr_no,
                   batch_no,
                   print_stat,
                   product_accrual,
                   auth_id,
                   product,
                   glmis_val_upd_flag,
                   external_ref_no,
                   dont_showin_stmt,
                   ic_bal_inclusion,
                   aml_exception,
                   orig_pnl_gl,
                   stmt_dt,
                   entry_seq_no
              FROM actb_history@loc_fcubslive
             WHERE trn_dt = (v_date - 1);
         v_rows_processed := SQL%ROWCOUNT;
         COMMIT;

  ----OLD PROCESS COMMENTED OUT BY YENI AND TUNDE ON 14JUL2020---
 /*     IF v_day IN ('MONDAY',
                   'TUESDAY',
                   'WEDNESDAY',
                   'THURSDAY',
                   'FRIDAY',
                   'SATURDAY')
      THEN
         EXECUTE IMMEDIATE
               'ALTER TABLE src_actb_history TRUNCATE PARTITION P'
            || TO_CHAR (v_date - 5, 'yyyymmdd');

         EXECUTE IMMEDIATE
               'ALTER TABLE src_actb_history TRUNCATE PARTITION P'
            || TO_CHAR (v_date - 4, 'yyyymmdd');

         EXECUTE IMMEDIATE
               'ALTER TABLE src_actb_history TRUNCATE PARTITION P'
            || TO_CHAR (v_date - 3, 'yyyymmdd');

         EXECUTE IMMEDIATE
               'ALTER TABLE src_actb_history TRUNCATE PARTITION P'
            || TO_CHAR (v_date - 2, 'yyyymmdd');
         EXECUTE IMMEDIATE
               'ALTER TABLE src_actb_history TRUNCATE PARTITION P'
            || TO_CHAR (v_date - 1, 'yyyymmdd');

         -- execute immediate 'alter index ACTB_HISTORY_IDX rebuild online'; \* rebuild unusable index on src_actb_history table *\
         --execute immediate 'alter index IND_ACC_PER_HIST rebuild online'; \* rebuild unusable index on src_actb_history table *\
         --execute immediate 'alter index IND_ACC_PER_HIST rebuild online'; \* rebuild unusable index on src_actb_history table *\
         --execute immediate 'alter index IDX_ACCNO rebuild online'; \* rebuild unusable index on src_actb_history table *\

         --execute immediate 'alter table src_actb_history truncate partition P'||to_char(sysdate, 'yyyymm');

         INSERT \*+ append parallel *\
               INTO  src_actb_history (trn_ref_no,
                                       event_sr_no,
                                       event,
                                       ac_branch,
                                       ac_no,
                                       ac_ccy,
                                       drcr_ind,
                                       trn_code,
                                       amount_tag,
                                       fcy_amount,
                                       exch_rate,
                                       lcy_amount,
                                       related_customer,
                                       related_account,
                                       related_reference,
                                       mis_flag,
                                       mis_head,
                                       trn_dt,
                                       value_dt,
                                       txn_init_date,
                                       financial_cycle,
                                       period_code,
                                       instrument_code,
                                       bank_code,
                                       TYPE,
                                       category,
                                       cust_gl,
                                       module,
                                       ac_entry_sr_no,
                                       ib,
                                       flg_position_status,
                                       glmis_update_flag,
                                       user_id,
                                       curr_no,
                                       batch_no,
                                       print_stat,
                                       product_accrual,
                                       auth_id,
                                       product,
                                       glmis_val_upd_flag,
                                       external_ref_no,
                                       dont_showin_stmt,
                                       ic_bal_inclusion,
                                       aml_exception,
                                       orig_pnl_gl,
                                       stmt_dt,
                                       entry_seq_no)
            SELECT trn_ref_no,
                   event_sr_no,
                   event,
                   ac_branch,
                   ac_no,
                   ac_ccy,
                   drcr_ind,
                   trn_code,
                   amount_tag,
                   fcy_amount,
                   exch_rate,
                   lcy_amount,
                   related_customer,
                   related_account,
                   related_reference,
                   mis_flag,
                   mis_head,
                   trn_dt,
                   value_dt,
                   txn_init_date,
                   financial_cycle,
                   period_code,
                   instrument_code,
                   bank_code,
                   TYPE,
                   category,
                   cust_gl,
                   module,
                   ac_entry_sr_no,
                   ib,
                   flg_position_status,
                   glmis_update_flag,
                   user_id,
                   curr_no,
                   batch_no,
                   print_stat,
                   product_accrual,
                   auth_id,
                   product,
                   glmis_val_upd_flag,
                   external_ref_no,
                   dont_showin_stmt,
                   ic_bal_inclusion,
                   aml_exception,
                   orig_pnl_gl,
                   stmt_dt,
                   entry_seq_no
              FROM actb_history@loc_fcubslive
             WHERE trn_dt BETWEEN (v_date - 5) AND (v_date - 1);

         v_rows_processed := SQL%ROWCOUNT;
         COMMIT;

         UPDATE fcubs_process_log
            SET status = 'COMPLETED',
                MESSAGE = 'SUCCESS',
                row_count = v_rows_processed,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
      ELSIF v_day = 'SUNDAY'
      THEN
         EXECUTE IMMEDIATE
               'ALTER TABLE src_actb_history TRUNCATE PARTITION P'
            || TO_CHAR (v_date - 6, 'yyyymmdd');

         EXECUTE IMMEDIATE
               'ALTER TABLE src_actb_history TRUNCATE PARTITION P'
            || TO_CHAR (v_date - 5, 'yyyymmdd');

         EXECUTE IMMEDIATE
               'ALTER TABLE src_actb_history TRUNCATE PARTITION P'
            || TO_CHAR (v_date - 4, 'yyyymmdd');

         EXECUTE IMMEDIATE
               'ALTER TABLE src_actb_history TRUNCATE PARTITION P'
            || TO_CHAR (v_date - 3, 'yyyymmdd');

         EXECUTE IMMEDIATE
               'ALTER TABLE src_actb_history TRUNCATE PARTITION P'
            || TO_CHAR (v_date - 2, 'yyyymmdd');
         EXECUTE IMMEDIATE
               'ALTER TABLE src_actb_history TRUNCATE PARTITION P'
            || TO_CHAR (v_date - 1, 'yyyymmdd');

         --  execute immediate 'alter index ACTB_HISTORY_IDX rebuild online'; \* rebuild unusable index on src_actb_history table *\
         --execute immediate 'alter index IND_ACC_PER_HIST rebuild online'; \* rebuild unusable index on src_actb_history table *\
         --execute immediate 'alter index IND_ACC_PER_HIST rebuild online'; \* rebuild unusable index on src_actb_history table *\
         --execute immediate 'alter index IDX_ACCNO rebuild online'; \* rebuild unusable index on src_actb_history table *\

         --execute immediate 'alter table src_actb_history truncate partition P'||to_char(sysdate, 'yyyymm');

         INSERT \*+ append parallel *\
               INTO  src_actb_history (trn_ref_no,
                                       event_sr_no,
                                       event,
                                       ac_branch,
                                       ac_no,
                                       ac_ccy,
                                       drcr_ind,
                                       trn_code,
                                       amount_tag,
                                       fcy_amount,
                                       exch_rate,
                                       lcy_amount,
                                       related_customer,
                                       related_account,
                                       related_reference,
                                       mis_flag,
                                       mis_head,
                                       trn_dt,
                                       value_dt,
                                       txn_init_date,
                                       financial_cycle,
                                       period_code,
                                       instrument_code,
                                       bank_code,
                                       TYPE,
                                       category,
                                       cust_gl,
                                       module,
                                       ac_entry_sr_no,
                                       ib,
                                       flg_position_status,
                                       glmis_update_flag,
                                       user_id,
                                       curr_no,
                                       batch_no,
                                       print_stat,
                                       product_accrual,
                                       auth_id,
                                       product,
                                       glmis_val_upd_flag,
                                       external_ref_no,
                                       dont_showin_stmt,
                                       ic_bal_inclusion,
                                       aml_exception,
                                       orig_pnl_gl,
                                       stmt_dt,
                                       entry_seq_no)
            SELECT trn_ref_no,
                   event_sr_no,
                   event,
                   ac_branch,
                   ac_no,
                   ac_ccy,
                   drcr_ind,
                   trn_code,
                   amount_tag,
                   fcy_amount,
                   exch_rate,
                   lcy_amount,
                   related_customer,
                   related_account,
                   related_reference,
                   mis_flag,
                   mis_head,
                   trn_dt,
                   value_dt,
                   txn_init_date,
                   financial_cycle,
                   period_code,
                   instrument_code,
                   bank_code,
                   TYPE,
                   category,
                   cust_gl,
                   module,
                   ac_entry_sr_no,
                   ib,
                   flg_position_status,
                   glmis_update_flag,
                   user_id,
                   curr_no,
                   batch_no,
                   print_stat,
                   product_accrual,
                   auth_id,
                   product,
                   glmis_val_upd_flag,
                   external_ref_no,
                   dont_showin_stmt,
                   ic_bal_inclusion,
                   aml_exception,
                   orig_pnl_gl,
                   stmt_dt,
                   entry_seq_no
              FROM actb_history@loc_fcubslive
             WHERE trn_dt BETWEEN (v_date - 6) AND (v_date - 1);

         v_rows_processed := SQL%ROWCOUNT;*/

         UPDATE fcubs_process_log
            SET status = 'COMPLETED',
                MESSAGE = 'SUCCESS',
                row_count = v_rows_processed,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
    --  END IF;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;


   PROCEDURE prc_gltm_glmaster
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE;
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;
      
      select case when today > trunc(sysdate) then prev_working_day else today end into v_date
      from src_sttm_dates where branch_code = '099';

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'GLMASTER DERIVE',
                   'GLMASTER',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_gltm_glmaster';

      INSERT INTO stglive.src_gltm_glmaster (gl_code,
                                             gl_desc,
                                             parent_gl,
                                             ccy_res,
                                             res_ccy,
                                             leaf,
                                             TYPE,
                                             customer,
                                             category,
                                             ho_res,
                                             reval,
                                             profit_acc,
                                             loss_acc,
                                             cbank_line_dr,
                                             cbank_line_cr,
                                             ho_line_dr,
                                             ho_line_cr,
                                             first_auth,
                                             ulti_parent,
                                             block,
                                             posting_res,
                                             recon,
                                             record_stat,
                                             once_auth,
                                             auth_stat,
                                             mod_no,
                                             maker_id,
                                             maker_dt_stamp,
                                             checker_id,
                                             checker_dt_stamp,
                                             flg_position_ac,
                                             ccy_pos_gl,
                                             ac_stmt_required,
                                             gen_stmt_only_on_mvmt,
                                             media,
                                             ac_stmt_day,
                                             ac_stmt_cycle,
                                             ac_stmt_type,
                                             address1,
                                             address2,
                                             address3,
                                             address4,
                                             is_accrual,
                                             bal_trfr_on_mis_reclass,
                                             allow_back_period_entry,
                                             ed_fcyrvl_singleentry,
                                             ed_fcyrvl_entrypair,
                                             eod_fcyrvl_revr,
                                             avg_bal_reqd,
                                             prev_yr_adj_gl,
                                             repost_fcy_entries,
                                             pl_split_reqd,
                                             intraday_posting_gl)
         SELECT gl_code,
                gl_desc,
                parent_gl,
                ccy_res,
                res_ccy,
                leaf,
                TYPE,
                customer,
                category,
                ho_res,
                reval,
                profit_acc,
                loss_acc,
                cbank_line_dr,
                cbank_line_cr,
                ho_line_dr,
                ho_line_cr,
                first_auth,
                ulti_parent,
                block,
                posting_res,
                recon,
                record_stat,
                once_auth,
                auth_stat,
                mod_no,
                maker_id,
                maker_dt_stamp,
                checker_id,
                checker_dt_stamp,
                flg_position_ac,
                ccy_pos_gl,
                ac_stmt_required,
                gen_stmt_only_on_mvmt,
                media,
                ac_stmt_day,
                ac_stmt_cycle,
                ac_stmt_type,
                address1,
                address2,
                address3,
                address4,
                is_accrual,
                bal_trfr_on_mis_reclass,
                allow_back_period_entry,
                ed_fcyrvl_singleentry,
                ed_fcyrvl_entrypair,
                eod_fcyrvl_revr,
                avg_bal_reqd,
                prev_yr_adj_gl,
                repost_fcy_entries,
                pl_split_reqd,
                intraday_posting_gl
           FROM gltm_glmaster@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;


   PROCEDURE prc_sttm_customer_cat
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'CUSTOMER CATEGORY DERIVE',
                   'CUSTOMER_CAT',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_sttm_customer_cat';

      INSERT INTO stglive.src_sttm_customer_cat (cust_cat,
                                                 cust_cat_desc,
                                                 record_stat,
                                                 auth_stat,
                                                 mod_no,
                                                 maker_id,
                                                 maker_dt_stamp,
                                                 checker_id,
                                                 checker_dt_stamp,
                                                 once_auth,
                                                 populate_changes_log)
         SELECT cust_cat,
                cust_cat_desc,
                record_stat,
                auth_stat,
                mod_no,
                maker_id,
                maker_dt_stamp,
                checker_id,
                checker_dt_stamp,
                once_auth,
                populate_changes_log
           FROM sttm_customer_cat@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_gltm_mis_code
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'MIS CODE DERIVE',
                   'MIS_CODE',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_gltm_mis_code';

      INSERT INTO stglive.src_gltm_mis_code (mis_class,
                                             mis_code,
                                             code_desc,
                                             active)
         SELECT mis_class,
                mis_code,
                code_desc,
                active
           FROM gltm_mis_code@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;


   PROCEDURE prc_cstb_amount_due
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'AMOUNT DUE DERIVE',
                   'AMOUNT_DUE',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_cstb_amount_due';

      INSERT INTO stglive.src_cstb_amount_due (contract_ref_no,
                                               component,
                                               due_date,
                                               amount_due,
                                               currency_amt_due,
                                               account_due,
                                               branch_account_due,
                                               counterparty,
                                               amount_settled,
                                               inflow_outflow,
                                               basis_amount_tag,
                                               adjusted_amount,
                                               schedule_linkage,
                                               msg_event_seq_no,
                                               sch_picked_for_liq,
                                               billing_event_seq_no,
                                               component_type,
                                               sgen_ac_branch,
                                               sgen_ac_no,
                                               sgen_ac_ccy,
                                               sgen_amount,
                                               sgen_xrate,
                                               subsidy_amount,
                                               fixed_amount_flag,
                                               unbilled_current,
                                               unbilled_prev,
                                               notc_amount,
                                               amount_prepaid,
                                               original_due_date,
                                               disc_accr_applicable,
                                               bv_adj_amount,
                                               notc_gen,
                                               notc_event_seq_no,
                                               amt_in_cont_ccy,
                                               contract_ccy)
         SELECT contract_ref_no,
                component,
                due_date,
                amount_due,
                currency_amt_due,
                account_due,
                branch_account_due,
                counterparty,
                amount_settled,
                inflow_outflow,
                basis_amount_tag,
                adjusted_amount,
                schedule_linkage,
                msg_event_seq_no,
                sch_picked_for_liq,
                billing_event_seq_no,
                component_type,
                sgen_ac_branch,
                sgen_ac_no,
                sgen_ac_ccy,
                sgen_amount,
                sgen_xrate,
                subsidy_amount,
                fixed_amount_flag,
                unbilled_current,
                unbilled_prev,
                notc_amount,
                amount_prepaid,
                original_due_date,
                disc_accr_applicable,
                bv_adj_amount,
                notc_gen,
                notc_event_seq_no,
                amt_in_cont_ccy,
                contract_ccy
           FROM cstb_amount_due@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;


   PROCEDURE prc_ictm_td_closure_renew
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'TD CLOSURE RENEW DERIVE',
                   'TD_CLOSURE_RENEW',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_ictm_td_closure_renew';

      INSERT INTO stglive.src_ictm_td_closure_renew (brn,
                                                     acc,
                                                     old_mat_date,
                                                     new_mat_date,
                                                     renewal_date,
                                                     acc_status,
                                                     rollover_type,
                                                     interest,
                                                     principal,
                                                     rollover_amt,
                                                     seqno,
                                                     tenor_years,
                                                     tenor_months,
                                                     tenor_days)
         SELECT brn,
                acc,
                old_mat_date,
                new_mat_date,
                renewal_date,
                acc_status,
                rollover_type,
                interest,
                principal,
                rollover_amt,
                seqno,
                tenor_years,
                tenor_months,
                tenor_days
           FROM ictm_td_closure_renew@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;


   PROCEDURE prc_detb_rtl_teller
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
      v_p_date           DATE;
      p_app_pdate        DATE;
      p_app_tdate        DATE;
   BEGIN
      SELECT TRUNC (MAX (trn_dt)) INTO v_p_date FROM TMP_DETB_RTL_TELLER; --Added by Ayodeji Ibrahim to address the application date and system date lapses

      SELECT TRUNC (MAX (prev_working_day))
        INTO p_app_pdate
        FROM sttm_dates@loc_fcubslive;

      SELECT TRUNC (MAX (today))
        INTO p_app_tdate
        FROM sttm_dates@loc_fcubslive;


      IF v_p_date = p_app_pdate
      THEN
         v_date := p_app_tdate;
      ELSE
         v_date := p_app_pdate;
      END IF;



      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'TELLER DERIVE',
                   'RTL_TELLER',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table TMP_DETB_RTL_TELLER';

      INSERT INTO stglive.TMP_DETB_RTL_TELLER (xref,
                                               product_code,
                                               branch_code,
                                               trn_ref_no,
                                               txn_acc,
                                               txn_ccy,
                                               txn_amount,
                                               txn_branch,
                                               txn_trn_code,
                                               ofs_acc,
                                               ofs_ccy,
                                               ofs_amount,
                                               ofs_branch,
                                               ofs_trn_code,
                                               exch_rate,
                                               lcy_amount,
                                               trn_dt,
                                               value_dt,
                                               dr_instrument_code,
                                               cr_instrument_code,
                                               rel_customer,
                                               charge_account,
                                               chg_gl,
                                               chg_ccy,
                                               chg_amt,
                                               chg_in_acy,
                                               chg_in_lcy,
                                               chg_ccy_acy_rate,
                                               acy_lcy_rate,
                                               netting_ind,
                                               txn_code,
                                               mis_head_1,
                                               chg_gl_1,
                                               chg_ccy_1,
                                               chg_amt_1,
                                               chg_in_acy_1,
                                               chg_in_lcy_1,
                                               chg_ccy_acy_rate_1,
                                               acy_lcy_rate_1,
                                               netting_ind_1,
                                               txn_code_1,
                                               mis_head_2,
                                               chg_gl_2,
                                               chg_ccy_2,
                                               chg_amt_2,
                                               chg_in_acy_2,
                                               chg_in_lcy_2,
                                               chg_ccy_acy_rate_2,
                                               acy_lcy_rate_2,
                                               netting_ind_2,
                                               txn_code_2,
                                               mis_head_3,
                                               chg_gl_3,
                                               chg_ccy_3,
                                               chg_amt_3,
                                               chg_in_acy_3,
                                               chg_in_lcy_3,
                                               chg_ccy_acy_rate_3,
                                               acy_lcy_rate_3,
                                               netting_ind_3,
                                               txn_code_3,
                                               mis_head_4,
                                               chg_gl_4,
                                               chg_ccy_4,
                                               chg_amt_4,
                                               chg_in_acy_4,
                                               chg_in_lcy_4,
                                               chg_ccy_acy_rate_4,
                                               acy_lcy_rate_4,
                                               netting_ind_4,
                                               txn_code_4,
                                               mis_head_5,
                                               rem_acc,
                                               rem_bank,
                                               rem_branch,
                                               routing_no,
                                               end_point,
                                               serial_no,
                                               record_stat,
                                               auth_stat,
                                               maker_id,
                                               maker_dt_stamp,
                                               checker_id,
                                               checker_dt_stamp,
                                               repair_reason,
                                               mod_no,
                                               scode,
                                               mis_head,
                                               narrative,
                                               dr_acc,
                                               module,
                                               esn,
                                               event_code,
                                               route_code,
                                               ft_problem,
                                               track_receivable,
                                               time_received,
                                               their_chgs2,
                                               their_chgs3,
                                               their_chgs4,
                                               their_chgs,
                                               their_chgs1,
                                               their_acc,
                                               their_acc1,
                                               their_acc2,
                                               their_acc3,
                                               their_acc4,
                                               lcy_exch_rate,
                                               tot_chg_in_tcy,
                                               chg_desc,
                                               chg_desc1,
                                               chg_desc2,
                                               chg_desc3,
                                               chg_desc4,
                                               chg_type,
                                               chg_type1,
                                               chg_type2,
                                               chg_type3,
                                               chg_type4,
                                               waiver,
                                               waiver1,
                                               waiver2,
                                               waiver3,
                                               waiver4,
                                               lcy_chg_exch_rate,
                                               lcy_chg_exch_rate1,
                                               lcy_chg_exch_rate2,
                                               lcy_chg_exch_rate3,
                                               lcy_chg_exch_rate4,
                                               chg_contra_leg,
                                               netting_reqd,
                                               service_provider,
                                               bill_number,
                                               bill_issue_date,
                                               consumer_no,
                                               txn_status,
                                               cashback_amount,
                                               txn_tanked,
                                               benef_name,
                                               benef_addr1,
                                               benef_addr2,
                                               benef_addr3,
                                               benef_addr4,
                                               passportic_no,
                                               instr_date,
                                               liqn_dt,
                                               revr_dt,
                                               fund_id,
                                               fund_ref_no,
                                               negotiated_rate,
                                               negotiation_ref_no,
                                               sdb_ref_no,
                                               project_name,
                                               unit_payment,
                                               unit_id,
                                               deposit_slip_no,
                                               reject_code,
                                               cheque_issue_date,
                                               maint_charge_applied,
                                               chg_dr_leg,
                                               chg_dr_leg_1,
                                               chg_dr_leg_2,
                                               chg_dr_leg_3,
                                               chg_dr_leg_4,
                                               token_no)
         SELECT xref,
                product_code,
                branch_code,
                trn_ref_no,
                txn_acc,
                txn_ccy,
                txn_amount,
                txn_branch,
                txn_trn_code,
                ofs_acc,
                ofs_ccy,
                ofs_amount,
                ofs_branch,
                ofs_trn_code,
                exch_rate,
                lcy_amount,
                trn_dt,
                value_dt,
                dr_instrument_code,
                cr_instrument_code,
                rel_customer,
                charge_account,
                chg_gl,
                chg_ccy,
                chg_amt,
                chg_in_acy,
                chg_in_lcy,
                chg_ccy_acy_rate,
                acy_lcy_rate,
                netting_ind,
                txn_code,
                mis_head_1,
                chg_gl_1,
                chg_ccy_1,
                chg_amt_1,
                chg_in_acy_1,
                chg_in_lcy_1,
                chg_ccy_acy_rate_1,
                acy_lcy_rate_1,
                netting_ind_1,
                txn_code_1,
                mis_head_2,
                chg_gl_2,
                chg_ccy_2,
                chg_amt_2,
                chg_in_acy_2,
                chg_in_lcy_2,
                chg_ccy_acy_rate_2,
                acy_lcy_rate_2,
                netting_ind_2,
                txn_code_2,
                mis_head_3,
                chg_gl_3,
                chg_ccy_3,
                chg_amt_3,
                chg_in_acy_3,
                chg_in_lcy_3,
                chg_ccy_acy_rate_3,
                acy_lcy_rate_3,
                netting_ind_3,
                txn_code_3,
                mis_head_4,
                chg_gl_4,
                chg_ccy_4,
                chg_amt_4,
                chg_in_acy_4,
                chg_in_lcy_4,
                chg_ccy_acy_rate_4,
                acy_lcy_rate_4,
                netting_ind_4,
                txn_code_4,
                mis_head_5,
                rem_acc,
                rem_bank,
                rem_branch,
                routing_no,
                end_point,
                serial_no,
                record_stat,
                auth_stat,
                maker_id,
                maker_dt_stamp,
                checker_id,
                checker_dt_stamp,
                repair_reason,
                mod_no,
                scode,
                mis_head,
                narrative,
                dr_acc,
                module,
                esn,
                event_code,
                route_code,
                ft_problem,
                track_receivable,
                time_received,
                their_chgs2,
                their_chgs3,
                their_chgs4,
                their_chgs,
                their_chgs1,
                their_acc,
                their_acc1,
                their_acc2,
                their_acc3,
                their_acc4,
                lcy_exch_rate,
                tot_chg_in_tcy,
                chg_desc,
                chg_desc1,
                chg_desc2,
                chg_desc3,
                chg_desc4,
                chg_type,
                chg_type1,
                chg_type2,
                chg_type3,
                chg_type4,
                waiver,
                waiver1,
                waiver2,
                waiver3,
                waiver4,
                lcy_chg_exch_rate,
                lcy_chg_exch_rate1,
                lcy_chg_exch_rate2,
                lcy_chg_exch_rate3,
                lcy_chg_exch_rate4,
                chg_contra_leg,
                netting_reqd,
                service_provider,
                bill_number,
                bill_issue_date,
                consumer_no,
                txn_status,
                cashback_amount,
                txn_tanked,
                benef_name,
                benef_addr1,
                benef_addr2,
                benef_addr3,
                benef_addr4,
                passportic_no,
                instr_date,
                liqn_dt,
                revr_dt,
                fund_id,
                fund_ref_no,
                negotiated_rate,
                negotiation_ref_no,
                sdb_ref_no,
                project_name,
                unit_payment,
                unit_id,
                deposit_slip_no,
                reject_code,
                cheque_issue_date,
                maint_charge_applied,
                chg_dr_leg,
                chg_dr_leg_1,
                chg_dr_leg_2,
                chg_dr_leg_3,
                chg_dr_leg_4,
                token_no
           FROM fcubslive.detb_rtl_teller@loc_fcubslive
          WHERE TRUNC (trn_dt) = TRUNC (v_date);

      INSERT INTO SRC_DETB_RTL_TELLER
         SELECT * FROM TMP_DETB_RTL_TELLER;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_smtb_user
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'SMTB USER DERIVE',
                   'SMTB_USER',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_smtb_user';

      INSERT INTO stglive.src_smtb_user (exit_function,
                                         user_id,
                                         start_date,
                                         user_name,
                                         user_password,
                                         status_changed_on,
                                         till_allowed,
                                         acclass_allowed,
                                         products_allowed,
                                         branches_allowed,
                                         max_override_amt,
                                         time_level,
                                         user_category,
                                         user_status,
                                         end_date,
                                         pwd_changed_on,
                                         max_txn_amt,
                                         max_auth_amt,
                                         force_passwd_change,
                                         user_language,
                                         startup_function,
                                         home_branch,
                                         fwdrew_count,
                                         gl_allowed,
                                         auth_stat,
                                         checker_dt_stamp,
                                         checker_id,
                                         maker_dt_stamp,
                                         maker_id,
                                         mod_no,
                                         once_auth,
                                         record_stat,
                                         user_password_brn,
                                         user_id_brn,
                                         user_txn_limit,
                                         limits_ccy,
                                         auto_auth,
                                         customer_no,
                                         products_access_allowed,
                                         ldap_user,
                                         branch_usrpwd,
                                         dflt_module,
                                         user_email,
                                         telephone_number,
                                         user_manager,
                                         home_phone,
                                         user_mobile,
                                         user_fax,
                                         user_pager,
                                         ext_user_ref,
                                         tax_identifier,
                                         staff_ac_restr,
                                         amount_format,
                                         date_format,
                                         dept_code,
                                         salt,
                                         el_user_id,
                                         group_code_allowed,
                                         multibranch_access,
                                         other_rm_cust_restrict,
                                         dashboard_reqd,
                                         alerts_on_home,
                                         reference_no,
                                         screen_saver_timeout,
                                         mfi_user,
                                         f10_reqd,
                                         f11_reqd,
                                         f12_reqd,
                                         access_control)
         SELECT exit_function,
                user_id,
                start_date,
                user_name,
                user_password,
                status_changed_on,
                till_allowed,
                acclass_allowed,
                products_allowed,
                branches_allowed,
                max_override_amt,
                time_level,
                user_category,
                user_status,
                end_date,
                pwd_changed_on,
                max_txn_amt,
                max_auth_amt,
                force_passwd_change,
                user_language,
                startup_function,
                home_branch,
                fwdrew_count,
                gl_allowed,
                auth_stat,
                checker_dt_stamp,
                checker_id,
                maker_dt_stamp,
                maker_id,
                mod_no,
                once_auth,
                record_stat,
                user_password_brn,
                user_id_brn,
                user_txn_limit,
                limits_ccy,
                auto_auth,
                customer_no,
                products_access_allowed,
                ldap_user,
                branch_usrpwd,
                dflt_module,
                user_email,
                telephone_number,
                user_manager,
                home_phone,
                user_mobile,
                user_fax,
                user_pager,
                ext_user_ref,
                tax_identifier,
                staff_ac_restr,
                amount_format,
                date_format,
                dept_code,
                salt,
                el_user_id,
                group_code_allowed,
                multibranch_access,
                other_rm_cust_restrict,
                dashboard_reqd,
                alerts_on_home,
                reference_no,
                screen_saver_timeout,
                mfi_user,
                f10_reqd,
                f11_reqd,
                f12_reqd,
                access_control
           FROM smtb_user@loc_fcubslive;


      v_rows_processed := SQL%ROWCOUNT;


      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_cstb_addl_text
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;
   /** DISABLE REFRESH OF ADDL TEXT  AS INSTRUCTED BY IBRAHIM  22-DEC-2016


    insert into fcubs_process_log(process_sequence, process_type, process_name, reference_date, status, message, row_count, start_date, end_date, duration)
     values (v_seq, 'ADDL TEXT DERIVE','CSTB_ADDL_TEXT', v_date, 'STARTED', null, 0, sysdate, null, null);

    commit;


    execute immediate 'truncate table src_cstb_addl_text';

    insert into stglive.src_cstb_addl_text(reference_no, evnt_seq_no, addl_text)
      select reference_no,
             evnt_seq_no,
             addl_text
          from cstb_addl_text@loc_fcubslive;


        v_rows_processed := sql%rowcount;

       update fcubs_process_log
       set status     = 'COMPLETED',
           message    = 'SUCCESS',
           row_count  = v_rows_processed,
           end_date   = sysdate,
           duration   = (sysdate - start_date)  * 24 * 3600
     where process_sequence = v_seq;

    commit;

    exception when others then
    v_message := substr(sqlerrm,1,200);

    update fcubs_process_log
      set status     = 'FAILED',
          message    = v_message,
          row_count  = 0,
          end_date   = sysdate,
          duration   = (sysdate - start_date)  * 24 * 3600
      where process_sequence = v_seq;

    commit; **/

   END;

   PROCEDURE prc_cltb_account_master
   AS
--      v_message          VARCHAR2 (4000);
--      v_rows_processed   NUMBER;
--      v_date             DATE := TRUNC (SYSDATE);
--      v_seq              NUMBER;
--      v_rows_count       INTEGER;
--      v_sql              VARCHAR2 (10000);

v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
      tab_cnt               integer;

   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'ACCOUNT MASTER DERIVE',
                   'CLTB_ACCOUNT_MASTER',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


--      EXECUTE IMMEDIATE 'truncate table src_cltb_account_master';
--
--      INSERT INTO stglive.src_cltb_account_master (
--                     account_number,
--                     branch_code,
--                     application_num,
--                     customer_id,
--                     product_code,
--                     product_category,
--                     book_date,
--                     value_date,
--                     maturity_date,
--                     amount_financed,
--                     downpayment_amount,
--                     currency,
--                     original_st_date,
--                     primary_applicant_id,
--                     primary_applicant_name,
--                     user_defined_status,
--                     calc_reqd,
--                     back_val_eff_dt,
--                     auto_man_rollover,
--                     schedule_basis,
--                     ude_rollover_basis,
--                     rollover_type,
--                     special_amount,
--                     rate_code_pref,
--                     passbook_facility,
--                     atm_facility,
--                     allow_back_period_entry,
--                     int_stmt,
--                     track_receivable_aliq,
--                     track_receivable_mliq,
--                     liquidation_mode,
--                     amend_past_paid_schedule,
--                     cheque_book_facility,
--                     liq_back_valued_schedules,
--                     liq_comp_dates_flag,
--                     retries_auto_liq,
--                     residual_amount,
--                     account_status,
--                     auth_stat,
--                     version_no,
--                     latest_esn,
--                     next_accr_date,
--                     has_problems,
--                     process_no,
--                     amount_disbursed,
--                     stop_accruals,
--                     funded_status,
--                     amortized,
--                     recalc_action_code,
--                     maker_id,
--                     maker_dt_stamp,
--                     checker_id,
--                     checker_dt_stamp,
--                     arvn_applied,
--                     alt_acc_no,
--                     partial_liquidation,
--                     aliq_reversed_pmt,
--                     no_of_installments,
--                     frequency,
--                     frequency_unit,
--                     first_ins_date,
--                     linked_reference,
--                     linkage_type,
--                     field_char_1,
--                     field_char_2,
--                     field_char_3,
--                     field_char_4,
--                     field_char_5,
--                     field_char_6,
--                     field_char_7,
--                     field_char_8,
--                     field_char_9,
--                     field_char_10,
--                     field_char_11,
--                     field_char_12,
--                     field_char_13,
--                     field_char_14,
--                     field_char_15,
--                     field_char_16,
--                     field_char_17,
--                     field_char_18,
--                     field_char_19,
--                     field_char_20,
--                     field_number_1,
--                     field_number_2,
--                     field_number_3,
--                     field_number_4,
--                     field_number_5,
--                     field_number_6,
--                     field_number_7,
--                     field_number_8,
--                     field_number_9,
--                     field_number_10,
--                     field_number_11,
--                     field_number_12,
--                     field_number_13,
--                     field_number_14,
--                     field_number_15,
--                     field_number_16,
--                     field_number_17,
--                     field_number_18,
--                     field_number_19,
--                     field_number_20,
--                     field_date_1,
--                     field_date_2,
--                     field_date_3,
--                     field_date_4,
--                     field_date_5,
--                     field_date_6,
--                     field_date_7,
--                     field_date_8,
--                     field_date_9,
--                     field_date_10,
--                     roll_by,
--                     maturity_type,
--                     net_principal,
--                     index_xrate,
--                     dr_payment_mode,
--                     cr_payment_mode,
--                     dr_prod_ac,
--                     cr_prod_ac,
--                     dr_acc_brn,
--                     cr_acc_brn,
--                     ext_acc_no_cr,
--                     ext_acc_name_cr,
--                     clg_bank_code_cr,
--                     clg_brn_code_cr,
--                     pc_cat_cr,
--                     ext_acc_no_dr,
--                     ext_acc_name_dr,
--                     clg_bank_code_dr,
--                     clg_brn_code_dr,
--                     pc_cat_dr,
--                     card_no,
--                     instrument_no_cr,
--                     routing_no_cr,
--                     end_point_cr,
--                     clg_prod_code_cr,
--                     sector_code_cr,
--                     instrument_no_dr,
--                     routing_no_dr,
--                     end_point_dr,
--                     clg_prod_code_dr,
--                     sector_code_dr,
--                     upload_source_dr,
--                     upload_source_cr,
--                     emi_amount,
--                     cutoff_transaction,
--                     delinquency_status,
--                     execution_date,
--                     migration_date,
--                     usgt_status,
--                     last_intraday_accr_dt,
--                     giro_mode_dr,
--                     giro_service_dr,
--                     giro_number_dr,
--                     payer_acc_no_dr,
--                     payer_bank_code_dr,
--                     payer_branch_dr,
--                     payer_address1_dr,
--                     payer_address2_dr,
--                     payer_address3_dr,
--                     payer_address4_dr,
--                     giro_mode_cr,
--                     giro_service_cr,
--                     giro_number_cr,
--                     payer_acc_no_cr,
--                     payer_bank_code_cr,
--                     payer_branch_cr,
--                     payer_address1_cr,
--                     payer_address2_cr,
--                     payer_address3_cr,
--                     payer_address4_cr,
--                     due_dates_on,
--                     user_ref_no,
--                     bill_ref_no,
--                     rollover_allowed,
--                     amt_available,
--                     commitment_type,
--                     loan_type,
--                     module_code,
--                     line_id,
--                     packing_credit,
--                     residual_value_basis,
--                     residual_value,
--                     residual_auto_liqd,
--                     lease_type,
--                     lease_payment_mode,
--                     subsidy_customer_id,
--                     interest_subsidy_allowed,
--                     residual_subsidy_allowed,
--                     residual_subsidy_value,
--                     supplier_id,
--                     fa_asset_ref_no,
--                     insurance_comp_code,
--                     derived_status,
--                     allow_bulk_paymnet,
--                     loan_to_value,
--                     stop_dsbr,
--                     mortgage_group,
--                     lease_extend_by,
--                     intermediary_initiated,
--                     intermediary_code,
--                     notary_auto_confirmed,
--                     recalc_annuity,
--                     loan_stmt_reqd,
--                     subsystemstat,
--                     emi_freq,
--                     min_emi,
--                     max_emi,
--                     emi_freq_unit,
--                     end_date,
--                     use_guarantor,
--                     loan_against_sal,
--                     amount_utilized,
--                     min_amt_due_rule,
--                     first_pay_by_date,
--                     creditdays,
--                     open_line_loan,
--                     revolving_type,
--                     book_unearned_interest,
--                     upfront_profit_booked,
--                     asset_cost,
--                     liqd_residual_value,
--                     dealer,
--                     princ_prev_accrual,
--                     fund_id,
--                     amort_reschedule_on_dsbr,
--                     amount_block_flag,
--                     amount_blocked,
--                     amount_block_remarks,
--                     insurance_flag,
--                     total_sale_value,
--                     uidb_calc_reqd,
--                     bank_share_percent,
--                     cust_share_percent,
--                     wakala_acc_no,
--                     staff_finance,
--                     future_dp_receivable,
--                     end_construct_dt,
--                     total_amount,
--                     allow_multiple_dp,
--                     uidb_nominal_amt,
--                     days_for_cif_ac,
--                     days_for_gua_ac,
--                     supp_grace_period,
--                     supp_frequency_unit,
--                     cust_grace_period,
--                     cust_frequency_unit,
--                     maturity_tenor,
--                     maturity_unit,
--                     allow_multi_party,
--                     post_const_uidb,
--                     balloon_amount,
--                     project_account,
--                     prop_handover,
--                     handover_date,
--                     handover_conf,
--                     insurance_financed,
--                     applicant_income,
--                     retries_advice_days,
--                     loan_stlmnt_noticeflg,
--                     notice_date,
--                     expected_closure_date,
--                     auto_close_collateral,
--                     arrahnu_extension,
--                     downpayment_percen,
--                     max_rnog,
--                     rnog_no,
--                     status_change_mode,
--                     secr_status,
--                     taken_over,
--                     asset_type,
--                     mur_cont_status,
--                     rate_chg_action,
--                     mfi_loan_type,
--                     sanctioning_officer,
--                     loan_disbursement_category)
--         SELECT account_number,
--                branch_code,
--                application_num,
--                customer_id,
--                product_code,
--                product_category,
--                book_date,
--                value_date,
--                maturity_date,
--                amount_financed,
--                downpayment_amount,
--                currency,
--                original_st_date,
--                primary_applicant_id,
--                primary_applicant_name,
--                user_defined_status,
--                calc_reqd,
--                back_val_eff_dt,
--                auto_man_rollover,
--                schedule_basis,
--                ude_rollover_basis,
--                rollover_type,
--                special_amount,
--                rate_code_pref,
--                passbook_facility,
--                atm_facility,
--                allow_back_period_entry,
--                int_stmt,
--                track_receivable_aliq,
--                track_receivable_mliq,
--                liquidation_mode,
--                amend_past_paid_schedule,
--                cheque_book_facility,
--                liq_back_valued_schedules,
--                liq_comp_dates_flag,
--                retries_auto_liq,
--                residual_amount,
--                account_status,
--                auth_stat,
--                version_no,
--                latest_esn,
--                next_accr_date,
--                has_problems,
--                process_no,
--                amount_disbursed,
--                stop_accruals,
--                funded_status,
--                amortized,
--                recalc_action_code,
--                maker_id,
--                maker_dt_stamp,
--                checker_id,
--                checker_dt_stamp,
--                arvn_applied,
--                alt_acc_no,
--                partial_liquidation,
--                aliq_reversed_pmt,
--                no_of_installments,
--                frequency,
--                frequency_unit,
--                first_ins_date,
--                linked_reference,
--                linkage_type,
--                field_char_1,
--                field_char_2,
--                field_char_3,
--                field_char_4,
--                field_char_5,
--                field_char_6,
--                field_char_7,
--                field_char_8,
--                field_char_9,
--                field_char_10,
--                field_char_11,
--                field_char_12,
--                field_char_13,
--                field_char_14,
--                field_char_15,
--                field_char_16,
--                field_char_17,
--                field_char_18,
--                field_char_19,
--                field_char_20,
--                field_number_1,
--                field_number_2,
--                field_number_3,
--                field_number_4,
--                field_number_5,
--                field_number_6,
--                field_number_7,
--                field_number_8,
--                field_number_9,
--                field_number_10,
--                field_number_11,
--                field_number_12,
--                field_number_13,
--                field_number_14,
--                field_number_15,
--                field_number_16,
--                field_number_17,
--                field_number_18,
--                field_number_19,
--                field_number_20,
--                field_date_1,
--                field_date_2,
--                field_date_3,
--                field_date_4,
--                field_date_5,
--                field_date_6,
--                field_date_7,
--                field_date_8,
--                field_date_9,
--                field_date_10,
--                roll_by,
--                maturity_type,
--                net_principal,
--                index_xrate,
--                dr_payment_mode,
--                cr_payment_mode,
--                dr_prod_ac,
--                cr_prod_ac,
--                dr_acc_brn,
--                cr_acc_brn,
--                ext_acc_no_cr,
--                ext_acc_name_cr,
--                clg_bank_code_cr,
--                clg_brn_code_cr,
--                pc_cat_cr,
--                ext_acc_no_dr,
--                ext_acc_name_dr,
--                clg_bank_code_dr,
--                clg_brn_code_dr,
--                pc_cat_dr,
--                card_no,
--                instrument_no_cr,
--                routing_no_cr,
--                end_point_cr,
--                clg_prod_code_cr,
--                sector_code_cr,
--                instrument_no_dr,
--                routing_no_dr,
--                end_point_dr,
--                clg_prod_code_dr,
--                sector_code_dr,
--                upload_source_dr,
--                upload_source_cr,
--                emi_amount,
--                cutoff_transaction,
--                delinquency_status,
--                execution_date,
--                migration_date,
--                usgt_status,
--                last_intraday_accr_dt,
--                giro_mode_dr,
--                giro_service_dr,
--                giro_number_dr,
--                payer_acc_no_dr,
--                payer_bank_code_dr,
--                payer_branch_dr,
--                payer_address1_dr,
--                payer_address2_dr,
--                payer_address3_dr,
--                payer_address4_dr,
--                giro_mode_cr,
--                giro_service_cr,
--                giro_number_cr,
--                payer_acc_no_cr,
--                payer_bank_code_cr,
--                payer_branch_cr,
--                payer_address1_cr,
--                payer_address2_cr,
--                payer_address3_cr,
--                payer_address4_cr,
--                due_dates_on,
--                user_ref_no,
--                bill_ref_no,
--                rollover_allowed,
--                amt_available,
--                commitment_type,
--                loan_type,
--                module_code,
--                line_id,
--                packing_credit,
--                residual_value_basis,
--                residual_value,
--                residual_auto_liqd,
--                lease_type,
--                lease_payment_mode,
--                subsidy_customer_id,
--                interest_subsidy_allowed,
--                residual_subsidy_allowed,
--                residual_subsidy_value,
--                supplier_id,
--                fa_asset_ref_no,
--                insurance_comp_code,
--                derived_status,
--                allow_bulk_paymnet,
--                loan_to_value,
--                stop_dsbr,
--                mortgage_group,
--                lease_extend_by,
--                intermediary_initiated,
--                intermediary_code,
--                notary_auto_confirmed,
--                recalc_annuity,
--                loan_stmt_reqd,
--                subsystemstat,
--                emi_freq,
--                min_emi,
--                max_emi,
--                emi_freq_unit,
--                end_date,
--                use_guarantor,
--                loan_against_sal,
--                amount_utilized,
--                min_amt_due_rule,
--                first_pay_by_date,
--                creditdays,
--                open_line_loan,
--                revolving_type,
--                book_unearned_interest,
--                upfront_profit_booked,
--                asset_cost,
--                liqd_residual_value,
--                dealer,
--                princ_prev_accrual,
--                fund_id,
--                amort_reschedule_on_dsbr,
--                amount_block_flag,
--                amount_blocked,
--                amount_block_remarks,
--                insurance_flag,
--                total_sale_value,
--                uidb_calc_reqd,
--                bank_share_percent,
--                cust_share_percent,
--                wakala_acc_no,
--                staff_finance,
--                future_dp_receivable,
--                end_construct_dt,
--                total_amount,
--                allow_multiple_dp,
--                uidb_nominal_amt,
--                days_for_cif_ac,
--                days_for_gua_ac,
--                supp_grace_period,
--                supp_frequency_unit,
--                cust_grace_period,
--                cust_frequency_unit,
--                maturity_tenor,
--                maturity_unit,
--                allow_multi_party,
--                post_const_uidb,
--                balloon_amount,
--                project_account,
--                prop_handover,
--                handover_date,
--                handover_conf,
--                insurance_financed,
--                applicant_income,
--                retries_advice_days,
--                loan_stlmnt_noticeflg,
--                notice_date,
--                expected_closure_date,
--                auto_close_collateral,
--                arrahnu_extension,
--                downpayment_percen,
--                max_rnog,
--                rnog_no,
--                status_change_mode,
--                secr_status,
--                taken_over,
--                asset_type,
--                mur_cont_status,
--                rate_chg_action,
--                mfi_loan_type,
--                sanctioning_officer,
--                loan_disbursement_category
--           FROM cltb_account_master@loc_fcubslive;
--
--
--      v_rows_processed := SQL%ROWCOUNT;

begin
        select count(*) into tab_cnt from sys.all_tables where lower(table_name)='tmp_cltb_account_masta' and owner = 'STGLIVE';
        EXCEPTION
        WHEN NO_DATA_FOUND THEN
            tab_cnt:=0;
      end;
      
      if(tab_cnt)=1 Then
        execute immediate 'drop table tmp_cltb_account_masta';
        v_sql := 'create table tmp_cltb_account_masta as SELECT /*+ PARALLEL(auto) */ account_number,
             branch_code,
             application_num,
             customer_id,
             product_code,
             product_category,
             book_date,
             value_date,
             maturity_date,
             amount_financed,
             downpayment_amount,
             currency,
             original_st_date,
             primary_applicant_id,
             primary_applicant_name,
             user_defined_status,
             calc_reqd,
             back_val_eff_dt,
             auto_man_rollover,
             schedule_basis,
             ude_rollover_basis,
             rollover_type,
             special_amount,
             rate_code_pref,
             passbook_facility,
             atm_facility,
             allow_back_period_entry,
             int_stmt,
             track_receivable_aliq,
             track_receivable_mliq,
             liquidation_mode,
             amend_past_paid_schedule,
             cheque_book_facility,
             liq_back_valued_schedules,
             liq_comp_dates_flag,
             retries_auto_liq,
             residual_amount,
             account_status,
             auth_stat,
             version_no,
             latest_esn,
             next_accr_date,
             has_problems,
             process_no,
             amount_disbursed,
             stop_accruals,
             funded_status,
             amortized,
             recalc_action_code,
             maker_id,
             maker_dt_stamp,
             checker_id,
             checker_dt_stamp,
             arvn_applied,
             alt_acc_no,
             partial_liquidation,
             aliq_reversed_pmt,
             no_of_installments,
             frequency,
             frequency_unit,
             first_ins_date,
             linked_reference,
             linkage_type,
             field_char_1,
             field_char_2,
             field_char_3,
             field_char_4,
             field_char_5,
             field_char_6,
             field_char_7,
             field_char_8,
             field_char_9,
             field_char_10,
             field_char_11,
             field_char_12,
             field_char_13,
             field_char_14,
             field_char_15,
             field_char_16,
             field_char_17,
             field_char_18,
             field_char_19,
             field_char_20,
             field_number_1,
             field_number_2,
             field_number_3,
             field_number_4,
             field_number_5,
             field_number_6,
             field_number_7,
             field_number_8,
             field_number_9,
             field_number_10,
             field_number_11,
             field_number_12,
             field_number_13,
             field_number_14,
             field_number_15,
             field_number_16,
             field_number_17,
             field_number_18,
             field_number_19,
             field_number_20,
             field_date_1,
             field_date_2,
             field_date_3,
             field_date_4,
             field_date_5,
             field_date_6,
             field_date_7,
             field_date_8,
             field_date_9,
             field_date_10,
             roll_by,
             maturity_type,
             net_principal,
             index_xrate,
             dr_payment_mode,
             cr_payment_mode,
             dr_prod_ac,
             cr_prod_ac,
             dr_acc_brn,
             cr_acc_brn,
             ext_acc_no_cr,
             ext_acc_name_cr,
             clg_bank_code_cr,
             clg_brn_code_cr,
             pc_cat_cr,
             ext_acc_no_dr,
             ext_acc_name_dr,
             clg_bank_code_dr,
             clg_brn_code_dr,
             pc_cat_dr,
             card_no,
             instrument_no_cr,
             routing_no_cr,
             end_point_cr,
             clg_prod_code_cr,
             sector_code_cr,
             instrument_no_dr,
             routing_no_dr,
             end_point_dr,
             clg_prod_code_dr,
             sector_code_dr,
             upload_source_dr,
             upload_source_cr,
             emi_amount,
             cutoff_transaction,
             delinquency_status,
             execution_date,
             migration_date,
             usgt_status,
             last_intraday_accr_dt,
             giro_mode_dr,
             giro_service_dr,
             giro_number_dr,
             payer_acc_no_dr,
             payer_bank_code_dr,
             payer_branch_dr,
             payer_address1_dr,
             payer_address2_dr,
             payer_address3_dr,
             payer_address4_dr,
             giro_mode_cr,
             giro_service_cr,
             giro_number_cr,
             payer_acc_no_cr,
             payer_bank_code_cr,
             payer_branch_cr,
             payer_address1_cr,
             payer_address2_cr,
             payer_address3_cr,
             payer_address4_cr,
             due_dates_on,
             user_ref_no,
             bill_ref_no,
             rollover_allowed,
             amt_available,
             commitment_type,
             loan_type,
             module_code,
             line_id,
             packing_credit,
             residual_value_basis,
             residual_value,
             residual_auto_liqd,
             lease_type,
             lease_payment_mode,
             subsidy_customer_id,
             interest_subsidy_allowed,
             residual_subsidy_allowed,
             residual_subsidy_value,
             supplier_id,
             fa_asset_ref_no,
             insurance_comp_code,
             derived_status,
             allow_bulk_paymnet,
             loan_to_value,
             stop_dsbr,
             mortgage_group,
             lease_extend_by,
             intermediary_initiated,
             intermediary_code,
             notary_auto_confirmed,
             recalc_annuity,
             loan_stmt_reqd,
             subsystemstat,
             emi_freq,
             min_emi,
             max_emi,
             emi_freq_unit,
             end_date,
             use_guarantor,
             loan_against_sal,
             amount_utilized,
             min_amt_due_rule,
             first_pay_by_date,
             creditdays,
             open_line_loan,
             revolving_type,
             book_unearned_interest,
             upfront_profit_booked,
             asset_cost,
             liqd_residual_value,
             dealer,
             princ_prev_accrual,
             fund_id,
             amort_reschedule_on_dsbr,
             amount_block_flag,
             amount_blocked,
             amount_block_remarks,
             insurance_flag,
             total_sale_value,
             uidb_calc_reqd,
             bank_share_percent,
             cust_share_percent,
             wakala_acc_no,
             staff_finance,
             future_dp_receivable,
             end_construct_dt,
             total_amount,
             allow_multiple_dp,
             uidb_nominal_amt,
             days_for_cif_ac,
             days_for_gua_ac,
             supp_grace_period,
             supp_frequency_unit,
             cust_grace_period,
             cust_frequency_unit,
             maturity_tenor,
             maturity_unit,
             allow_multi_party,
             post_const_uidb,
             balloon_amount,
             project_account,
             prop_handover,
             handover_date,
             handover_conf,
             insurance_financed,
             applicant_income,
             retries_advice_days,
             loan_stlmnt_noticeflg,
             notice_date,
             expected_closure_date,
             auto_close_collateral,
             arrahnu_extension,
             downpayment_percen,
             max_rnog,
             rnog_no,
             status_change_mode,
             secr_status,
             taken_over,
             asset_type,
             mur_cont_status,
             rate_chg_action,
             mfi_loan_type,
             sanctioning_officer,
             loan_disbursement_category,
             '||1||' qset
        from cltb_account_master@loc_fcubs';
        execute immediate v_sql;
        v_rows_processed := sql%rowcount;
        else
        v_sql := 'create table tmp_cltb_account_masta as SELECT /*+ PARALLEL(auto) */ account_number,
             branch_code,
             application_num,
             customer_id,
             product_code,
             product_category,
             book_date,
             value_date,
             maturity_date,
             amount_financed,
             downpayment_amount,
             currency,
             original_st_date,
             primary_applicant_id,
             primary_applicant_name,
             user_defined_status,
             calc_reqd,
             back_val_eff_dt,
             auto_man_rollover,
             schedule_basis,
             ude_rollover_basis,
             rollover_type,
             special_amount,
             rate_code_pref,
             passbook_facility,
             atm_facility,
             allow_back_period_entry,
             int_stmt,
             track_receivable_aliq,
             track_receivable_mliq,
             liquidation_mode,
             amend_past_paid_schedule,
             cheque_book_facility,
             liq_back_valued_schedules,
             liq_comp_dates_flag,
             retries_auto_liq,
             residual_amount,
             account_status,
             auth_stat,
             version_no,
             latest_esn,
             next_accr_date,
             has_problems,
             process_no,
             amount_disbursed,
             stop_accruals,
             funded_status,
             amortized,
             recalc_action_code,
             maker_id,
             maker_dt_stamp,
             checker_id,
             checker_dt_stamp,
             arvn_applied,
             alt_acc_no,
             partial_liquidation,
             aliq_reversed_pmt,
             no_of_installments,
             frequency,
             frequency_unit,
             first_ins_date,
             linked_reference,
             linkage_type,
             field_char_1,
             field_char_2,
             field_char_3,
             field_char_4,
             field_char_5,
             field_char_6,
             field_char_7,
             field_char_8,
             field_char_9,
             field_char_10,
             field_char_11,
             field_char_12,
             field_char_13,
             field_char_14,
             field_char_15,
             field_char_16,
             field_char_17,
             field_char_18,
             field_char_19,
             field_char_20,
             field_number_1,
             field_number_2,
             field_number_3,
             field_number_4,
             field_number_5,
             field_number_6,
             field_number_7,
             field_number_8,
             field_number_9,
             field_number_10,
             field_number_11,
             field_number_12,
             field_number_13,
             field_number_14,
             field_number_15,
             field_number_16,
             field_number_17,
             field_number_18,
             field_number_19,
             field_number_20,
             field_date_1,
             field_date_2,
             field_date_3,
             field_date_4,
             field_date_5,
             field_date_6,
             field_date_7,
             field_date_8,
             field_date_9,
             field_date_10,
             roll_by,
             maturity_type,
             net_principal,
             index_xrate,
             dr_payment_mode,
             cr_payment_mode,
             dr_prod_ac,
             cr_prod_ac,
             dr_acc_brn,
             cr_acc_brn,
             ext_acc_no_cr,
             ext_acc_name_cr,
             clg_bank_code_cr,
             clg_brn_code_cr,
             pc_cat_cr,
             ext_acc_no_dr,
             ext_acc_name_dr,
             clg_bank_code_dr,
             clg_brn_code_dr,
             pc_cat_dr,
             card_no,
             instrument_no_cr,
             routing_no_cr,
             end_point_cr,
             clg_prod_code_cr,
             sector_code_cr,
             instrument_no_dr,
             routing_no_dr,
             end_point_dr,
             clg_prod_code_dr,
             sector_code_dr,
             upload_source_dr,
             upload_source_cr,
             emi_amount,
             cutoff_transaction,
             delinquency_status,
             execution_date,
             migration_date,
             usgt_status,
             last_intraday_accr_dt,
             giro_mode_dr,
             giro_service_dr,
             giro_number_dr,
             payer_acc_no_dr,
             payer_bank_code_dr,
             payer_branch_dr,
             payer_address1_dr,
             payer_address2_dr,
             payer_address3_dr,
             payer_address4_dr,
             giro_mode_cr,
             giro_service_cr,
             giro_number_cr,
             payer_acc_no_cr,
             payer_bank_code_cr,
             payer_branch_cr,
             payer_address1_cr,
             payer_address2_cr,
             payer_address3_cr,
             payer_address4_cr,
             due_dates_on,
             user_ref_no,
             bill_ref_no,
             rollover_allowed,
             amt_available,
             commitment_type,
             loan_type,
             module_code,
             line_id,
             packing_credit,
             residual_value_basis,
             residual_value,
             residual_auto_liqd,
             lease_type,
             lease_payment_mode,
             subsidy_customer_id,
             interest_subsidy_allowed,
             residual_subsidy_allowed,
             residual_subsidy_value,
             supplier_id,
             fa_asset_ref_no,
             insurance_comp_code,
             derived_status,
             allow_bulk_paymnet,
             loan_to_value,
             stop_dsbr,
             mortgage_group,
             lease_extend_by,
             intermediary_initiated,
             intermediary_code,
             notary_auto_confirmed,
             recalc_annuity,
             loan_stmt_reqd,
             subsystemstat,
             emi_freq,
             min_emi,
             max_emi,
             emi_freq_unit,
             end_date,
             use_guarantor,
             loan_against_sal,
             amount_utilized,
             min_amt_due_rule,
             first_pay_by_date,
             creditdays,
             open_line_loan,
             revolving_type,
             book_unearned_interest,
             upfront_profit_booked,
             asset_cost,
             liqd_residual_value,
             dealer,
             princ_prev_accrual,
             fund_id,
             amort_reschedule_on_dsbr,
             amount_block_flag,
             amount_blocked,
             amount_block_remarks,
             insurance_flag,
             total_sale_value,
             uidb_calc_reqd,
             bank_share_percent,
             cust_share_percent,
             wakala_acc_no,
             staff_finance,
             future_dp_receivable,
             end_construct_dt,
             total_amount,
             allow_multiple_dp,
             uidb_nominal_amt,
             days_for_cif_ac,
             days_for_gua_ac,
             supp_grace_period,
             supp_frequency_unit,
             cust_grace_period,
             cust_frequency_unit,
             maturity_tenor,
             maturity_unit,
             allow_multi_party,
             post_const_uidb,
             balloon_amount,
             project_account,
             prop_handover,
             handover_date,
             handover_conf,
             insurance_financed,
             applicant_income,
             retries_advice_days,
             loan_stlmnt_noticeflg,
             notice_date,
             expected_closure_date,
             auto_close_collateral,
             arrahnu_extension,
             downpayment_percen,
             max_rnog,
             rnog_no,
             status_change_mode,
             secr_status,
             taken_over,
             asset_type,
             mur_cont_status,
             rate_chg_action,
             mfi_loan_type,
             sanctioning_officer,
             loan_disbursement_category,
             '||1||' qset
        from cltb_account_master@loc_fcubs';
        execute immediate v_sql;
        v_rows_processed := sql%rowcount;
        end if;
        
        execute immediate 'alter table stglive.src_cltb_account_master 
                    exchange partition P' ||to_number(10)|| ' with table tmp_cltb_account_masta';
                    
                    
                    prc_index_rebuild('IDX_CLTB_MAST_ACCT_NUI');
                    prc_index_rebuild('IDX_CLTB_MAST_ACCT_NIHUGS');
                    commit;


      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_sttm_trn_code
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'TRN CODE DERIVE',
                   'STTM_TRN_CODE',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_sttm_trn_code';

      INSERT INTO stglive.src_sttm_trn_code (trn_code,
                                             trn_desc,
                                             trn_swift_code,
                                             avl_info,
                                             cheque_mandatory,
                                             ic_txn_count,
                                             ic_tover_inclusion,
                                             consider_for_activity,
                                             mis_head,
                                             mod_no,
                                             maker_dt_stamp,
                                             record_stat,
                                             auth_stat,
                                             once_auth,
                                             maker_id,
                                             new_val_date,
                                             avl_days,
                                             checker_dt_stamp,
                                             checker_id,
                                             ic_txn_count_number,
                                             avail_bal_reqd,
                                             ic_penalty,
                                             ic_bal_inclusion,
                                             aml_monitoring,
                                             product_cat,
                                             intraday_release,
                                             ib_in_lcy,
                                             stmt_dt_basis,
                                             acumen_trn_code,
                                             ignore_lm_bvt_processing,
                                             exempt_adv_interest,
                                             trnover_lmt_inclusion,
                                             escrow_processing,
                                             salary_credit,
                                             leave_salary_processing,
                                             bal_update_thru_ppc,
                                             consider_cover_acc,
                                             component_type)
         SELECT trn_code,
                trn_desc,
                trn_swift_code,
                avl_info,
                cheque_mandatory,
                ic_txn_count,
                ic_tover_inclusion,
                consider_for_activity,
                mis_head,
                mod_no,
                maker_dt_stamp,
                record_stat,
                auth_stat,
                once_auth,
                maker_id,
                new_val_date,
                avl_days,
                checker_dt_stamp,
                checker_id,
                ic_txn_count_number,
                avail_bal_reqd,
                ic_penalty,
                ic_bal_inclusion,
                aml_monitoring,
                product_cat,
                intraday_release,
                ib_in_lcy,
                stmt_dt_basis,
                acumen_trn_code,
                ignore_lm_bvt_processing,
                exempt_adv_interest,
                trnover_lmt_inclusion,
                escrow_processing,
                salary_credit,
                leave_salary_processing,
                bal_update_thru_ppc,
                consider_cover_acc,
                component_type
           FROM sttm_trn_code@loc_fcubslive;


      v_rows_processed := SQL%ROWCOUNT;


      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_iftb_clearing_upload
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'CLEARING UPLOAD DERIVE',
                   'IFTB_CLEARING_UPLOAD',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_iftb_clearing_upload';

      INSERT INTO stglive.src_iftb_clearing_upload (scode,
                                                    xref,
                                                    prod,
                                                    txn_brn,
                                                    remaccount,
                                                    rembank,
                                                    rembranch,
                                                    benaccount,
                                                    benbank,
                                                    benbranch,
                                                    instrno,
                                                    instrccy,
                                                    instramt,
                                                    instrdate,
                                                    txndate,
                                                    valdatebnk,
                                                    valdatecust,
                                                    lateclg,
                                                    routingno,
                                                    endpoint,
                                                    serialno,
                                                    fccref,
                                                    status,
                                                    entry_no,
                                                    record_stat,
                                                    auth_stat,
                                                    once_auth,
                                                    mod_no,
                                                    maker_id,
                                                    maker_dt_stamp,
                                                    checker_id,
                                                    checker_dt_stamp,
                                                    error_codes,
                                                    error_params,
                                                    process_id,
                                                    bene_ccy,
                                                    din,
                                                    din_date,
                                                    adjust_amt_flag,
                                                    old_instr_amt,
                                                    override_stale_days,
                                                    rej_procd,
                                                    override_stop_pay,
                                                    file_id,
                                                    cash_letter_id,
                                                    bundle_id,
                                                    remarks,
                                                    rej_reason_code,
                                                    force_posting,
                                                    rej_adv_reqd,
                                                    consol_ref_no,
                                                    reversal_flag,
                                                    upload_date,
                                                    consider_for_reg_cc,
                                                    spl_chq_flg,
                                                    rem_cust,
                                                    rem_details1,
                                                    rem_details2,
                                                    rem_details3,
                                                    ben_cust,
                                                    bene_details1,
                                                    bene_details2,
                                                    bene_details3,
                                                    exch_rate,
                                                    direction,
                                                    acc_branch,
                                                    acc_ccy,
                                                    acc_ccy_amt,
                                                    instrno2,
                                                    bank_code,
                                                    branch_code,
                                                    sector_code,
                                                    module_reference_no,
                                                    event_seq_no,
                                                    module_code,
                                                    chg_ccy,
                                                    chg_amt,
                                                    lcy_chg_amt,
                                                    chgccy_lcy_xrate,
                                                    chg_ccy1,
                                                    chg_amt1,
                                                    lcy_chg_amt1,
                                                    chgccy_lcy_xrate1,
                                                    chg_ccy2,
                                                    chg_amt2,
                                                    lcy_chg_amt2,
                                                    chgccy_lcy_xrate2,
                                                    chg_ccy3,
                                                    chg_amt3,
                                                    lcy_chg_amt3,
                                                    chgccy_lcy_xrate3,
                                                    chg_ccy4,
                                                    chg_amt4,
                                                    lcy_chg_amt4,
                                                    chgccy_lcy_xrate4,
                                                    tcytotchgamt,
                                                    acytotchgamt,
                                                    moduledesc,
                                                    contstat,
                                                    txnccy,
                                                    batchtotamt,
                                                    routbnknam,
                                                    routbrnnam,
                                                    routsectdisc,
                                                    denmccy1,
                                                    denmamt1,
                                                    denmccy2,
                                                    denmamt2,
                                                    acctitle,
                                                    custname,
                                                    actamt,
                                                    consolidated,
                                                    fcj_list,
                                                    negotiated_rate,
                                                    negotiation_ref_no,
                                                    project_name,
                                                    unit_payment,
                                                    unit_id,
                                                    deposit_slip_no,
                                                    instr_type,
                                                    chequeissuedate,
                                                    chg_trn_ref_no,
                                                    waive_reject_chg,
                                                    benroutingno)
         SELECT scode,
                xref,
                prod,
                txn_brn,
                remaccount,
                rembank,
                rembranch,
                benaccount,
                benbank,
                benbranch,
                instrno,
                instrccy,
                instramt,
                instrdate,
                txndate,
                valdatebnk,
                valdatecust,
                lateclg,
                routingno,
                endpoint,
                serialno,
                fccref,
                status,
                entry_no,
                record_stat,
                auth_stat,
                once_auth,
                mod_no,
                maker_id,
                maker_dt_stamp,
                checker_id,
                checker_dt_stamp,
                error_codes,
                error_params,
                process_id,
                bene_ccy,
                din,
                din_date,
                adjust_amt_flag,
                old_instr_amt,
                override_stale_days,
                rej_procd,
                override_stop_pay,
                file_id,
                cash_letter_id,
                bundle_id,
                remarks,
                rej_reason_code,
                force_posting,
                rej_adv_reqd,
                consol_ref_no,
                reversal_flag,
                upload_date,
                consider_for_reg_cc,
                spl_chq_flg,
                rem_cust,
                rem_details1,
                rem_details2,
                rem_details3,
                ben_cust,
                bene_details1,
                bene_details2,
                bene_details3,
                exch_rate,
                direction,
                acc_branch,
                acc_ccy,
                acc_ccy_amt,
                instrno2,
                bank_code,
                branch_code,
                sector_code,
                module_reference_no,
                event_seq_no,
                module_code,
                chg_ccy,
                chg_amt,
                lcy_chg_amt,
                chgccy_lcy_xrate,
                chg_ccy1,
                chg_amt1,
                lcy_chg_amt1,
                chgccy_lcy_xrate1,
                chg_ccy2,
                chg_amt2,
                lcy_chg_amt2,
                chgccy_lcy_xrate2,
                chg_ccy3,
                chg_amt3,
                lcy_chg_amt3,
                chgccy_lcy_xrate3,
                chg_ccy4,
                chg_amt4,
                lcy_chg_amt4,
                chgccy_lcy_xrate4,
                tcytotchgamt,
                acytotchgamt,
                moduledesc,
                contstat,
                txnccy,
                batchtotamt,
                routbnknam,
                routbrnnam,
                routsectdisc,
                denmccy1,
                denmamt1,
                denmccy2,
                denmamt2,
                acctitle,
                custname,
                actamt,
                consolidated,
                fcj_list,
                negotiated_rate,
                negotiation_ref_no,
                project_name,
                unit_payment,
                unit_id,
                deposit_slip_no,
                instr_type,
                chequeissuedate,
                chg_trn_ref_no,
                waive_reject_chg,
                benroutingno
           FROM iftb_clearing_upload@loc_fcubslive;


      v_rows_processed := SQL%ROWCOUNT;


      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_fbtm_end_point
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'END POINT DERIVE',
                   'FBTM_END_POINT',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_fbtm_end_point';

      INSERT INTO stglive.src_fbtm_end_point (end_point,
                                              end_point_description,
                                              clearing_house,
                                              end_point_literal)
         SELECT end_point,
                end_point_description,
                clearing_house,
                end_point_literal
           FROM fbtm_end_point@loc_fcubslive;


      v_rows_processed := SQL%ROWCOUNT;


      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_detm_clg_bank_code
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'BANK CODE DERIVE',
                   'DETM_CLG_BANK_CODE',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_detm_clg_bank_code';

      INSERT INTO stglive.src_detm_clg_bank_code (clg_bank_code,
                                                  clg_bank_name,
                                                  record_stat,
                                                  auth_stat,
                                                  mod_no,
                                                  maker_id,
                                                  maker_dt_stamp,
                                                  checker_id,
                                                  checker_dt_stamp,
                                                  once_auth)
         SELECT clg_bank_code,
                clg_bank_name,
                record_stat,
                auth_stat,
                mod_no,
                maker_id,
                maker_dt_stamp,
                checker_id,
                checker_dt_stamp,
                once_auth
           FROM detm_clg_bank_code@loc_fcubslive;


      v_rows_processed := SQL%ROWCOUNT;


      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_istm_instr_txn
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE;
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;
      
      select case when today > trunc(sysdate) then prev_working_day else today end into v_date
      from src_sttm_dates where branch_code = '099';

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'INSTR TXN DERIVE',
                   'ISTM_INSTR_TXN',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_istm_instr_txn';

      INSERT INTO stglive.src_istm_instr_txn (contract_ref_no,
                                              version_no,
                                              event_seq_no,
                                              issuing_branch,
                                              payable_branch,
                                              product_code,
                                              instr_type,
                                              instr_stat,
                                              instr_ccy,
                                              instr_amount,
                                              instr_date,
                                              instr_no,
                                              dd_micr_no,
                                              ac_branch,
                                              ac_no,
                                              ac_ccy,
                                              exch_rate,
                                              acy_amount,
                                              lcy_amount,
                                              rel_customer,
                                              benef_name,
                                              benef_addr_1,
                                              benef_addr_2,
                                              benef_addr_3,
                                              benef_addr_4,
                                              benef_addr_5,
                                              identifier_name_1,
                                              identifier_value_1,
                                              identifier_name_2,
                                              identifier_value_2,
                                              identifier_name_3,
                                              identifier_value_3,
                                              identifier_name_4,
                                              identifier_value_4,
                                              identifier_name_5,
                                              identifier_value_5,
                                              identifier_name_6,
                                              identifier_value_6,
                                              narrative,
                                              maker_id,
                                              maker_dt_stamp,
                                              checker_id,
                                              checker_dt_stamp,
                                              record_stat,
                                              auth_stat,
                                              once_auth,
                                              mod_no,
                                              charge_account,
                                              chg_gl,
                                              chg_ccy,
                                              chg_amt,
                                              chg_in_acy,
                                              chg_in_lcy,
                                              chg_ccy_acy_rate,
                                              acy_lcy_rate,
                                              netting_ind,
                                              txn_code,
                                              mis_head_1,
                                              chg_gl_1,
                                              chg_ccy_1,
                                              chg_amt_1,
                                              chg_in_acy_1,
                                              chg_in_lcy_1,
                                              chg_ccy_acy_rate_1,
                                              acy_lcy_rate_1,
                                              netting_ind_1,
                                              txn_code_1,
                                              mis_head_2,
                                              chg_gl_2,
                                              chg_ccy_2,
                                              chg_amt_2,
                                              chg_in_acy_2,
                                              chg_in_lcy_2,
                                              chg_ccy_acy_rate_2,
                                              acy_lcy_rate_2,
                                              netting_ind_2,
                                              txn_code_2,
                                              mis_head_3,
                                              chg_gl_3,
                                              chg_ccy_3,
                                              chg_amt_3,
                                              chg_in_acy_3,
                                              chg_in_lcy_3,
                                              chg_ccy_acy_rate_3,
                                              acy_lcy_rate_3,
                                              netting_ind_3,
                                              txn_code_3,
                                              mis_head_4,
                                              chg_gl_4,
                                              chg_ccy_4,
                                              chg_amt_4,
                                              chg_in_acy_4,
                                              chg_in_lcy_4,
                                              chg_ccy_acy_rate_4,
                                              acy_lcy_rate_4,
                                              netting_ind_4,
                                              txn_code_4,
                                              mis_head_5,
                                              print_stat,
                                              expiry_date,
                                              print_copy,
                                              payable_bank,
                                              ofs_acc,
                                              ofs_ccy,
                                              ofs_amount,
                                              ofs_branch,
                                              ssn,
                                              reissued,
                                              org_draft_no,
                                              reissue_remarks,
                                              reissued_draft_no,
                                              scode,
                                              xref,
                                              trn_dt,
                                              ben_account,
                                              ben_cust,
                                              ben_ccy,
                                              discount_days,
                                              their_acc,
                                              their_acc1,
                                              their_acc2,
                                              their_acc3,
                                              their_acc4,
                                              chg_type,
                                              chg_type1,
                                              chg_type2,
                                              chg_type3,
                                              chg_type4,
                                              waiver,
                                              waiver1,
                                              waiver2,
                                              waiver3,
                                              waiver4,
                                              lcy_chg_exch_rate,
                                              lcy_chg_exch_rate1,
                                              lcy_chg_exch_rate2,
                                              lcy_chg_exch_rate3,
                                              lcy_chg_exch_rate4,
                                              chg_desc,
                                              chg_desc1,
                                              chg_desc2,
                                              chg_desc3,
                                              chg_desc4,
                                              txn_tanked,
                                              issuer_code,
                                              country_code,
                                              delivery_mode,
                                              delivery_add1,
                                              delivery_add2,
                                              delivery_add3,
                                              delivery_add4,
                                              cheque_no,
                                              payout_chg,
                                              payment_mode,
                                              old_dd_micr_no,
                                              remarks,
                                              reval_freq_days,
                                              reval_freq_months,
                                              reval_freq_years,
                                              old_instr_no,
                                              batch_no,
                                              charge_ccy,
                                              revalidated,
                                              duplicate,
                                              manual_input)
         SELECT contract_ref_no,
                version_no,
                event_seq_no,
                issuing_branch,
                payable_branch,
                product_code,
                instr_type,
                instr_stat,
                instr_ccy,
                instr_amount,
                instr_date,
                instr_no,
                dd_micr_no,
                ac_branch,
                ac_no,
                ac_ccy,
                exch_rate,
                acy_amount,
                lcy_amount,
                rel_customer,
                benef_name,
                benef_addr_1,
                benef_addr_2,
                benef_addr_3,
                benef_addr_4,
                benef_addr_5,
                identifier_name_1,
                identifier_value_1,
                identifier_name_2,
                identifier_value_2,
                identifier_name_3,
                identifier_value_3,
                identifier_name_4,
                identifier_value_4,
                identifier_name_5,
                identifier_value_5,
                identifier_name_6,
                identifier_value_6,
                narrative,
                maker_id,
                maker_dt_stamp,
                checker_id,
                checker_dt_stamp,
                record_stat,
                auth_stat,
                once_auth,
                mod_no,
                charge_account,
                chg_gl,
                chg_ccy,
                chg_amt,
                chg_in_acy,
                chg_in_lcy,
                chg_ccy_acy_rate,
                acy_lcy_rate,
                netting_ind,
                txn_code,
                mis_head_1,
                chg_gl_1,
                chg_ccy_1,
                chg_amt_1,
                chg_in_acy_1,
                chg_in_lcy_1,
                chg_ccy_acy_rate_1,
                acy_lcy_rate_1,
                netting_ind_1,
                txn_code_1,
                mis_head_2,
                chg_gl_2,
                chg_ccy_2,
                chg_amt_2,
                chg_in_acy_2,
                chg_in_lcy_2,
                chg_ccy_acy_rate_2,
                acy_lcy_rate_2,
                netting_ind_2,
                txn_code_2,
                mis_head_3,
                chg_gl_3,
                chg_ccy_3,
                chg_amt_3,
                chg_in_acy_3,
                chg_in_lcy_3,
                chg_ccy_acy_rate_3,
                acy_lcy_rate_3,
                netting_ind_3,
                txn_code_3,
                mis_head_4,
                chg_gl_4,
                chg_ccy_4,
                chg_amt_4,
                chg_in_acy_4,
                chg_in_lcy_4,
                chg_ccy_acy_rate_4,
                acy_lcy_rate_4,
                netting_ind_4,
                txn_code_4,
                mis_head_5,
                print_stat,
                expiry_date,
                print_copy,
                payable_bank,
                ofs_acc,
                ofs_ccy,
                ofs_amount,
                ofs_branch,
                ssn,
                reissued,
                org_draft_no,
                reissue_remarks,
                reissued_draft_no,
                scode,
                xref,
                trn_dt,
                ben_account,
                ben_cust,
                ben_ccy,
                discount_days,
                their_acc,
                their_acc1,
                their_acc2,
                their_acc3,
                their_acc4,
                chg_type,
                chg_type1,
                chg_type2,
                chg_type3,
                chg_type4,
                waiver,
                waiver1,
                waiver2,
                waiver3,
                waiver4,
                lcy_chg_exch_rate,
                lcy_chg_exch_rate1,
                lcy_chg_exch_rate2,
                lcy_chg_exch_rate3,
                lcy_chg_exch_rate4,
                chg_desc,
                chg_desc1,
                chg_desc2,
                chg_desc3,
                chg_desc4,
                txn_tanked,
                issuer_code,
                country_code,
                delivery_mode,
                delivery_add1,
                delivery_add2,
                delivery_add3,
                delivery_add4,
                cheque_no,
                payout_chg,
                payment_mode,
                old_dd_micr_no,
                remarks,
                reval_freq_days,
                reval_freq_months,
                reval_freq_years,
                old_instr_no,
                batch_no,
                charge_ccy,
                revalidated,
                duplicate,
                manual_input
           FROM istm_instr_txn@loc_fcubslive;


      v_rows_processed := SQL%ROWCOUNT;


      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_catm_check_book
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'CHECK BOOK DERIVE',
                   'CATM_CHECK_BOOK',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_catm_check_book';

      INSERT INTO stglive.src_catm_check_book (branch,
                                               account,
                                               first_check_no,
                                               check_leaves,
                                               order_date,
                                               issue_date,
                                               order_details,
                                               maker_id,
                                               maker_dt_stamp,
                                               checker_id,
                                               checker_dt_stamp,
                                               mod_no,
                                               once_auth,
                                               auth_stat,
                                               record_stat,
                                               chq_type,
                                               print_status,
                                               external_ref_no,
                                               incl_for_chkbook_printing,
                                               delivery_ref_no,
                                               delivery_mode,
                                               delivery_date,
                                               chqbook_deliverd,
                                               cheque_book_type,
                                               delivery_add1,
                                               delivery_add2,
                                               delivery_add3,
                                               delivery_add4,
                                               language_code,
                                               request_mode,
                                               request_status,
                                               trn_ref_no,
                                               seq_no)
         SELECT branch,
                account,
                first_check_no,
                check_leaves,
                order_date,
                issue_date,
                order_details,
                maker_id,
                maker_dt_stamp,
                checker_id,
                checker_dt_stamp,
                mod_no,
                once_auth,
                auth_stat,
                record_stat,
                chq_type,
                print_status,
                external_ref_no,
                incl_for_chkbook_printing,
                delivery_ref_no,
                delivery_mode,
                delivery_date,
                chqbook_deliverd,
                cheque_book_type,
                delivery_add1,
                delivery_add2,
                delivery_add3,
                delivery_add4,
                language_code,
                request_mode,
                request_status,
                trn_ref_no,
                seq_no
           FROM catm_check_book@loc_fcubslive;


      v_rows_processed := SQL%ROWCOUNT;


      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_mitm_customer_default
   AS
--      v_message          VARCHAR2 (4000);
--      v_rows_processed   NUMBER;
--      v_date             DATE := TRUNC (SYSDATE);
--      v_seq              NUMBER;
--      v_rows_count       INTEGER;
--      v_sql              VARCHAR2 (10000);

v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
      tab_cnt            integer;

   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'CUSTOMER DEFAULT DERIVE',
                   'MITM_CUSTOMER_DEFAULT',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


--      EXECUTE IMMEDIATE 'truncate table src_mitm_customer_default';
--
--      INSERT /*+ append parallel */
--            INTO  stglive.src_mitm_customer_default (customer,
--                                                     mis_group,
--                                                     cust_mis_1,
--                                                     cust_mis_2,
--                                                     cust_mis_3,
--                                                     cust_mis_4,
--                                                     cust_mis_5,
--                                                     cust_mis_6,
--                                                     cust_mis_7,
--                                                     cust_mis_8,
--                                                     cust_mis_9,
--                                                     cust_mis_10,
--                                                     comp_mis_1,
--                                                     comp_mis_2,
--                                                     comp_mis_3,
--                                                     comp_mis_4,
--                                                     comp_mis_5,
--                                                     comp_mis_6,
--                                                     comp_mis_7,
--                                                     comp_mis_8,
--                                                     comp_mis_9,
--                                                     comp_mis_10)
--         SELECT customer,
--                mis_group,
--                cust_mis_1,
--                cust_mis_2,
--                cust_mis_3,
--                cust_mis_4,
--                cust_mis_5,
--                cust_mis_6,
--                cust_mis_7,
--                cust_mis_8,
--                cust_mis_9,
--                cust_mis_10,
--                comp_mis_1,
--                comp_mis_2,
--                comp_mis_3,
--                comp_mis_4,
--                comp_mis_5,
--                comp_mis_6,
--                comp_mis_7,
--                comp_mis_8,
--                comp_mis_9,
--                comp_mis_10
--           FROM mitm_customer_default@loc_fcubslive;
--
--
--      v_rows_processed := SQL%ROWCOUNT;

begin
        select count(*) into tab_cnt from sys.all_tables where lower(table_name)='tmp_mitm_customer_default_rev' and owner = 'STGLIVE';
        EXCEPTION
        WHEN NO_DATA_FOUND THEN
            tab_cnt:=0;
      end;
      
      if(tab_cnt)=1 Then
        execute immediate 'drop table tmp_mitm_customer_default_rev';
        v_sql := 'create table tmp_mitm_customer_default_rev as
        SELECT /*+ PARALLEL(auto) */ customer,
                mis_group,
                cust_mis_1,
                cust_mis_2,
                cust_mis_3,
                cust_mis_4,
                cust_mis_5,
                cust_mis_6,
                cust_mis_7,
                cust_mis_8,
                cust_mis_9,
                cust_mis_10,
                comp_mis_1,
                comp_mis_2,
                comp_mis_3,
                comp_mis_4,
                comp_mis_5,
                comp_mis_6,
                comp_mis_7,
                comp_mis_8,
                comp_mis_9,
                comp_mis_10,
                '||1||' qset
           FROM mitm_customer_default@loc_fcubslive';
        --FROM sttb_account@loc_fcubs';
        execute immediate v_sql;
        v_rows_processed := SQL%ROWCOUNT;
       else
        v_sql := 'create table tmp_mitm_customer_default_rev as
        SELECT /*+ PARALLEL(auto) */ customer,
                mis_group,
                cust_mis_1,
                cust_mis_2,
                cust_mis_3,
                cust_mis_4,
                cust_mis_5,

                cust_mis_6,
                cust_mis_7,
                cust_mis_8,
                cust_mis_9,
                cust_mis_10,
                comp_mis_1,
                comp_mis_2,
                comp_mis_3,
                comp_mis_4,
                comp_mis_5,
                comp_mis_6,
                comp_mis_7,
                comp_mis_8,
                comp_mis_9,
                comp_mis_10,
                '||1||' qset
           FROM mitm_customer_default@loc_fcubslive';
      
        execute immediate v_sql;
        v_rows_processed := SQL%ROWCOUNT;
       end if;
       
       execute immediate 'alter table stglive.src_mitm_customer_default 
                    exchange partition P' ||to_number(10)|| ' with table tmp_mitm_customer_default_rev';
                    
                    prc_index_rebuild('PK01_MITM_CUSTOM_DEFAULT');
                    commit;


      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_ldtb_contract_iccf_calc
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'LDTB CONTRACT ICCF CALC DERIVE',
                   'LDTB_CONTRACT_ICCF_CALC',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_ldtb_contract_iccf_calc';

      INSERT INTO stglive.src_ldtb_contract_iccf_calc (
                     contract_ref_no,
                     component,
                     prepayment_penalty_seq_no,
                     schedule_date,
                     start_date,
                     product,
                     currency,
                     end_date,
                     basis_amount,
                     rate,
                     no_of_days,
                     calculated_amount,
                     iccf_calc_method,
                     daily_average_amount)
         SELECT contract_ref_no,
                component,
                prepayment_penalty_seq_no,
                schedule_date,
                start_date,
                product,
                currency,
                end_date,
                basis_amount,
                rate,
                no_of_days,
                calculated_amount,
                iccf_calc_method,
                daily_average_amount
           FROM ldtb_contract_iccf_calc@loc_fcubslive;


      v_rows_processed := SQL%ROWCOUNT;


      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_actb_accbal_history
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
      v_day              VARCHAR2 (100);
      tab_cnt            integer;
         mindate           date;
      maxdate           date; 
      v_mindate           VARCHAR2 (100);
       v_partition       VARCHAR2 (100);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      SELECT TRIM (TO_CHAR (SYSDATE, 'DAY')) INTO v_day FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'ACCBAL HISTORY DERIVE',
                   'ACTB_ACCBAL_HISTORY',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

IF v_day IN ('WEDNESDAY',
                   'THURSDAY',
                   'FRIDAY',
                'SATURDAY')
      THEN
       DELETE /*+parallel(50)*/ src_actb_accbal_history
          WHERE bkg_date >= v_date - 2;

        COMMIT;

        --execute immediate 'truncate table src_actb_accbal_history';

         INSERT /*+ append parallel */
               INTO  stglive.src_actb_accbal_history (branch_code,
                                                     account,
                                                      bkg_date,
                                                      acy_opening_bal,
                                                      lcy_opening_bal,
                                                      acy_closing_bal,
                                                      lcy_closing_bal,
                                                      acy_dr_tur,
                                                      lcy_dr_tur,
                                                      acy_cr_tur,
                                                      lcy_cr_tur,
                                                      acc_ccy,
                                                      acy_closing_avlbal,
                                                      acy_closing_uncoll,
                                                      acy_closing_block)
            SELECT branch_code,
                   account,
                  bkg_date,
                   acy_opening_bal,
                   lcy_opening_bal,
                   acy_closing_bal,
                   lcy_closing_bal,
                   acy_dr_tur,
                   lcy_dr_tur,
                   acy_cr_tur,
                   lcy_cr_tur,
                   acc_ccy,
                   acy_closing_avlbal,
                   acy_closing_uncoll,
                   acy_closing_block
              FROM actb_accbal_history@loc_fcubslive
             WHERE bkg_date >= v_date - 2;


         v_rows_processed := SQL%ROWCOUNT;
         COMMIT;
        
         UPDATE fcubs_process_log
            SET status = 'COMPLETED',
                MESSAGE = 'SUCCESS',
                row_count = v_rows_processed,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
     ELSIF v_day IN ('SUNDAY', 'MONDAY', 'TUESDAY')
      THEN
         DELETE /*+parallel(50)*/ src_actb_accbal_history
          WHERE bkg_date >= v_date - 4;

         COMMIT;

         --execute immediate 'truncate table src_actb_accbal_history';

         INSERT /*+ append parallel */
               INTO  stglive.src_actb_accbal_history (branch_code,
                                                      account,
                                                      bkg_date,
                                                      acy_opening_bal,
                                                      lcy_opening_bal,
                                                      acy_closing_bal,
                                                     lcy_closing_bal,
                                                      acy_dr_tur,
                                                    lcy_dr_tur,
                                                      acy_cr_tur,
                                                      lcy_cr_tur,
                                                     acc_ccy,
                                                      acy_closing_avlbal,
                                                      acy_closing_uncoll,
                                                      acy_closing_block)
            SELECT branch_code,
                   account,
                   bkg_date,
                   acy_opening_bal,
                 lcy_opening_bal,
                   acy_closing_bal,
                   lcy_closing_bal,
                  acy_dr_tur,
                   lcy_dr_tur,
                   acy_cr_tur,
                   lcy_cr_tur,
                  acc_ccy,
                   acy_closing_avlbal,
                  acy_closing_uncoll,
                  acy_closing_block
              FROM actb_accbal_history@loc_fcubslive
             WHERE bkg_date >= v_date - 4;

         v_rows_processed := SQL%ROWCOUNT;
         COMMIT;

         UPDATE fcubs_process_log
            SET status = 'COMPLETED',
                MESSAGE = 'SUCCESS',
                row_count = v_rows_processed,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
      END IF;


    
--      mindate := v_date-2;
--       maxdate := v_date;
--       
--       while mindate <= maxdate
--       loop
--        
--        v_mindate := to_char(mindate,'dd-MON-yyyy');
--        execute immediate 'truncate table tmp_actb_accbal_history';
--        v_sql := 'insert into/*+ parallel(10)*/ tmp_actb_accbal_history
--        SELECT /*+ PARALLEL(10)*/ branch_code,
--                   account,
--                   bkg_date,
--                   acy_opening_bal,
--                   lcy_opening_bal,
--                   acy_closing_bal,
--                   lcy_closing_bal,
--                   acy_dr_tur,
--                   lcy_dr_tur,
--                   acy_cr_tur,
--                   lcy_cr_tur,
--                   acc_ccy,
--                   acy_closing_avlbal,
--                   acy_closing_uncoll,
--                   acy_closing_block
--              FROM actb_accbal_history@loc_fcubslive
--               WHERE bkg_date ='''|| v_mindate ||'''';
--      execute immediate v_sql;
--      v_rows_processed := SQL%ROWCOUNT;
--      commit;
--      v_partition:= 'P'|| to_char(mindate,'yyyymmdd');
--    /* Call a truncate table partition procedure */
--    prc_truncate_partition('src_actb_accbal_history',v_partition);
--    
-- 
--    execute immediate 'alter table src_actb_accbal_history 
--    exchange partition P'||to_char(mindate,'yyyymmdd')||' with table tmp_actb_accbal_history';
--    
--    mindate := mindate + 1;
--    
--    end loop;

   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_sttm_cust_personal
   AS
--      v_message          VARCHAR2 (4000);
--      v_rows_processed   NUMBER;
--      v_date             DATE := TRUNC (SYSDATE);
--      v_seq              NUMBER;
--      v_rows_count       INTEGER;
--      v_sql              VARCHAR2 (10000);

 v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (32000);
      tab_cnt            integer;

   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'CUST PERSONAL DERIVE',
                   'STTM_CUST_PERSONAL',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


--      EXECUTE IMMEDIATE 'truncate table src_sttm_cust_personal';
--
--      INSERT INTO stglive.src_sttm_cust_personal (customer_prefix,
--                                                  first_name,
--                                                  middle_name,
--                                                  last_name,
--                                                  date_of_birth,
--                                                  legal_guardian,
--                                                  minor,
--                                                  sex,
--                                                  p_national_id,
--                                                  passport_no,
--                                                  ppt_iss_date,
--                                                  ppt_exp_date,
--                                                  d_address1,
--                                                  d_address2,
--                                                  d_address3,
--                                                  telephone,
--                                                  fax,
--                                                  e_mail,
--                                                  p_address1,
--                                                  p_address3,
--                                                  p_address2,
--                                                  customer_no,
--                                                  d_country,
--                                                  p_country,
--                                                  resident_status,
--                                                  customer_prefix1,
--                                                  customer_prefix2,
--                                                  mobile_number,
--                                                  age_proof_submitted,
--                                                  cust_comm_mode,
--                                                  p_address4,
--                                                  d_address4,
--                                                  place_of_birth,
--                                                  birth_country,
--                                                  tel_isd_no,
--                                                  mob_isd_no,
--                                                  fax_isd_no,
--                                                  us_res_status,
--                                                  pa_issued,
--                                                  pa_holder_name,
--                                                  pa_holder_nationalty,
--                                                  pa_holder_addr,
--                                                  pa_holder_addr_country,
--                                                  pa_holder_tel_isd,
--                                                  pa_holder_tel_no,
--                                                  vst_us_prev,
--                                                  home_tel_no,
--                                                  home_tel_isd,
--                                                  p_pincode,
--                                                  pref_contact_dt,
--                                                  pref_contact_time,
--                                                  d_pincode)
--         SELECT customer_prefix,
--                first_name,
--                middle_name,
--                last_name,
--                date_of_birth,
--                legal_guardian,
--                minor,
--                sex,
--                p_national_id,
--                passport_no,
--                ppt_iss_date,
--                ppt_exp_date,
--                d_address1,
--                d_address2,
--                d_address3,
--                telephone,
--                fax,
--                e_mail,
--                p_address1,
--                p_address3,
--                p_address2,
--                customer_no,
--                d_country,
--                p_country,
--                resident_status,
--                customer_prefix1,
--                customer_prefix2,
--                mobile_number,
--                age_proof_submitted,
--                cust_comm_mode,
--                p_address4,
--                d_address4,
--                place_of_birth,
--                birth_country,
--                tel_isd_no,
--                mob_isd_no,
--                fax_isd_no,
--                us_res_status,
--                pa_issued,
--                pa_holder_name,
--                pa_holder_nationalty,
--                pa_holder_addr,
--                pa_holder_addr_country,
--                pa_holder_tel_isd,
--                pa_holder_tel_no,
--                vst_us_prev,
--                home_tel_no,
--                home_tel_isd,
--                p_pincode,
--                pref_contact_dt,
--                pref_contact_time,
--                d_pincode
--           FROM sttm_cust_personal@loc_fcubslive;
--
--
--      v_rows_processed := SQL%ROWCOUNT;

begin
        select count(*) into tab_cnt from sys.all_tables where lower(table_name)='tmp_sttm_cust_personal' and owner = 'STGLIVE';
        EXCEPTION
        WHEN NO_DATA_FOUND THEN
            tab_cnt:=0;
      end;
      
      if(tab_cnt)=1 Then
        execute immediate 'drop table tmp_sttm_cust_personal';
      v_sql := 'CREATE TABLE tmp_sttm_cust_personal AS SELECT /*+ PARALLEL(auto) */ customer_prefix,
             first_name,
             middle_name,
             last_name,
             date_of_birth,
             legal_guardian,
             minor,
             sex,
             p_national_id,
             passport_no,
             ppt_iss_date,
             ppt_exp_date,
             d_address1,
             d_address2,
             d_address3,
             telephone,
             fax,
             e_mail,
             p_address1,
             p_address3,
             p_address2,
             customer_no,
             d_country,
             p_country,
             resident_status,
             customer_prefix1,
             customer_prefix2,
             mobile_number,
             age_proof_submitted,
             cust_comm_mode,
             p_address4,
             d_address4,
             place_of_birth,
             birth_country,
             tel_isd_no,
             mob_isd_no,
             fax_isd_no,
             us_res_status,
             pa_issued,
             pa_holder_name,
             pa_holder_nationalty,
             pa_holder_addr,
             pa_holder_addr_country,
             pa_holder_tel_isd,
             pa_holder_tel_no,
             vst_us_prev,
             home_tel_no,
             home_tel_isd,
             p_pincode,
             pref_contact_dt,
             pref_contact_time,
             d_pincode,
             '||1||' qset
        FROM sttm_cust_personal@loc_fcubs';
        execute immediate v_sql;
        v_rows_processed := SQL%ROWCOUNT;
        else
            v_sql := 'CREATE TABLE tmp_sttm_cust_personal AS SELECT /*+ PARALLEL(auto) */ customer_prefix,
             first_name,
             middle_name,
             last_name,
             date_of_birth,
             legal_guardian,
             minor,
             sex,
             p_national_id,
             passport_no,
             ppt_iss_date,
             ppt_exp_date,
             d_address1,
             d_address2,
             d_address3,
             telephone,
             fax,
             e_mail,
             p_address1,
             p_address3,
             p_address2,
             customer_no,
             d_country,
             p_country,
             resident_status,
             customer_prefix1,
             customer_prefix2,
             mobile_number,
             age_proof_submitted,
             cust_comm_mode,
             p_address4,
             d_address4,
             place_of_birth,
             birth_country,
             tel_isd_no,
             mob_isd_no,
             fax_isd_no,
             us_res_status,
             pa_issued,
             pa_holder_name,
             pa_holder_nationalty,
             pa_holder_addr,
             pa_holder_addr_country,
             pa_holder_tel_isd,
             pa_holder_tel_no,
             vst_us_prev,
             home_tel_no,
             home_tel_isd,
             p_pincode,
             pref_contact_dt,
             pref_contact_time,
             d_pincode,
             '||1||' qset
        FROM sttm_cust_personal@loc_fcubs';
        execute immediate v_sql;
        v_rows_processed := SQL%ROWCOUNT;
        
        end if;
        
        execute immediate 'alter table stglive.src_sttm_cust_personal 
                    exchange partition P' ||to_number(10)|| ' with table tmp_sttm_cust_personal';
   
                    prc_index_rebuild('IDS_STCUST_PER_COUNTRY');
prc_index_rebuild('IDS_STCUST_PER_CUST_NO');
prc_index_rebuild('IDS_STCUST_PER_MOBNUM');
commit;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_iftm_arc_maint
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'ARC MAINT DERIVE',
                   'IFTM_ARC_MAINT',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_iftm_arc_maint';

      INSERT INTO stglive.src_iftm_arc_maint (cod_branch,
                                              cod_prod_acc_flag,
                                              cod_prod_acc_cls,
                                              cod_ccy,
                                              cod_trans_type,
                                              cod_offset_acc,
                                              cod_offset_txn_code,
                                              cod_main_txn_code,
                                              cod_chg_type,
                                              cod_chg_amt,
                                              cod_chg_rate,
                                              cod_min_chg,
                                              cod_max_chg,
                                              cod_chg_gl,
                                              cod_chg_txn_code,
                                              cod_chg_netting,
                                              cod_rate_code,
                                              cod_rate_code_type,
                                              cod_basis,
                                              maker_id,
                                              maker_dt_stamp,
                                              checker_id,
                                              checker_dt_stamp,
                                              mod_no,
                                              record_stat,
                                              auth_stat,
                                              once_auth,
                                              cod_basis1,
                                              cod_chg_rate1,
                                              cod_min_chg1,
                                              cod_max_chg1,
                                              cod_chg_gl1,
                                              cod_chg_txn_code1,
                                              cod_basis2,
                                              cod_chg_rate2,
                                              cod_min_chg2,
                                              cod_max_chg2,
                                              cod_chg_gl2,
                                              cod_chg_txn_code2,
                                              cod_basis3,
                                              cod_chg_rate3,
                                              cod_min_chg3,
                                              cod_max_chg3,
                                              cod_chg_gl3,
                                              cod_chg_txn_code3,
                                              cod_basis4,
                                              cod_chg_rate4,
                                              cod_min_chg4,
                                              cod_max_chg4,
                                              cod_chg_gl4,
                                              cod_chg_txn_code4,
                                              cod_txn_account,
                                              cod_txn_brn,
                                              cod_offset_brn,
                                              cod_chg_ccy,
                                              cod_chg_desc,
                                              cod_chg_type1,
                                              cod_chg_ccy1,
                                              cod_rate_code1,
                                              cod_rate_code_type1,
                                              cod_chg_netting1,
                                              cod_chg_amt1,
                                              cod_chg_desc1,
                                              cod_chg_type2,
                                              cod_chg_ccy2,
                                              cod_rate_code2,
                                              cod_rate_code_type2,
                                              cod_chg_netting2,
                                              cod_chg_amt2,
                                              cod_chg_desc2,
                                              cod_chg_type3,
                                              cod_chg_ccy3,
                                              cod_rate_code3,
                                              cod_rate_code_type3,
                                              cod_chg_netting3,
                                              cod_chg_amt3,
                                              cod_chg_desc3,
                                              cod_chg_type4,
                                              cod_chg_ccy4,
                                              cod_rate_code4,
                                              cod_rate_code_type4,
                                              cod_chg_netting4,
                                              cod_chg_amt4,
                                              cod_chg_desc4,
                                              cod_trans_desc,
                                              cod_mis_head,
                                              cod_mis_head1,
                                              cod_mis_head2,
                                              cod_mis_head3,
                                              cod_mis_head4,
                                              cod_mis_head5,
                                              consider_for_reg_cc,
                                              end_point,
                                              bank_float_days,
                                              cust_float_days,
                                              cod_main_leg,
                                              dr_acc,
                                              chg_from,
                                              generate_transaction_advice,
                                              large_dep_float,
                                              new_ac_float,
                                              spl_chq_flg,
                                              slab_type1,
                                              slab_val11,
                                              slab_chg11,
                                              slab_val12,
                                              slab_chg12,
                                              slab_val13,
                                              slab_chg13,
                                              slab_val14,
                                              slab_chg14,
                                              slab_val15,
                                              slab_chg15,
                                              slab_type2,
                                              slab_val21,
                                              slab_chg21,
                                              slab_val22,
                                              slab_chg22,
                                              slab_val23,
                                              slab_chg23,
                                              slab_val24,
                                              slab_chg24,
                                              slab_val25,
                                              slab_chg25,
                                              slab_type3,
                                              slab_val31,
                                              slab_chg31,
                                              slab_val32,
                                              slab_chg32,
                                              slab_val33,
                                              slab_chg33,
                                              slab_val34,
                                              slab_chg34,
                                              slab_val35,
                                              slab_chg35,
                                              slab_type4,
                                              slab_val41,
                                              slab_chg41,
                                              slab_val42,
                                              slab_chg42,
                                              slab_val43,
                                              slab_chg43,
                                              slab_val44,
                                              slab_chg44,
                                              slab_val45,
                                              slab_chg45,
                                              slab_type5,
                                              slab_val51,
                                              slab_chg51,
                                              slab_val52,
                                              slab_chg52,
                                              slab_val53,
                                              slab_chg53,
                                              slab_val54,
                                              slab_chg54,
                                              slab_val55,
                                              slab_chg55,
                                              liqd_prod_for_dd,
                                              interest_basis1,
                                              interest_basis2,
                                              interest_basis3,
                                              interest_basis4,
                                              interest_basis5,
                                              cod_net_charges,
                                              cod_their_chgs,
                                              cod_their_chgs1,
                                              cod_their_chgs2,
                                              cod_their_chgs3,
                                              cod_their_chgs4,
                                              float_days_basis,
                                              cod_gen_mt101,
                                              profit_reval_gl,
                                              loss_reval_gl,
                                              customer_group,
                                              rate_type_indicator,
                                              cod_ib_product,
                                              cod_main_offset_flag,
                                              cod_acc_cls_grp,
                                              cod_chg_track_prf,
                                              cod_chg_liqd_prf,
                                              cod_chg_track_prf1,
                                              cod_chg_liqd_prf1,
                                              cod_chg_track_prf2,
                                              cod_chg_liqd_prf2,
                                              cod_chg_track_prf3,
                                              cod_chg_liqd_prf3,
                                              cod_chg_track_prf4,
                                              cod_chg_liqd_prf4,
                                              chg_dr_leg,
                                              chg_dr_leg_1,
                                              chg_dr_leg_2,
                                              chg_dr_leg_3,
                                              chg_dr_leg_4)
         SELECT cod_branch,
                cod_prod_acc_flag,
                cod_prod_acc_cls,
                cod_ccy,
                cod_trans_type,
                cod_offset_acc,
                cod_offset_txn_code,
                cod_main_txn_code,
                cod_chg_type,
                cod_chg_amt,
                cod_chg_rate,
                cod_min_chg,
                cod_max_chg,
                cod_chg_gl,
                cod_chg_txn_code,
                cod_chg_netting,
                cod_rate_code,
                cod_rate_code_type,
                cod_basis,
                maker_id,
                maker_dt_stamp,
                checker_id,
                checker_dt_stamp,
                mod_no,
                record_stat,
                auth_stat,
                once_auth,
                cod_basis1,
                cod_chg_rate1,
                cod_min_chg1,
                cod_max_chg1,
                cod_chg_gl1,
                cod_chg_txn_code1,
                cod_basis2,
                cod_chg_rate2,
                cod_min_chg2,
                cod_max_chg2,
                cod_chg_gl2,
                cod_chg_txn_code2,
                cod_basis3,
                cod_chg_rate3,
                cod_min_chg3,
                cod_max_chg3,
                cod_chg_gl3,
                cod_chg_txn_code3,
                cod_basis4,
                cod_chg_rate4,
                cod_min_chg4,
                cod_max_chg4,
                cod_chg_gl4,
                cod_chg_txn_code4,
                cod_txn_account,
                cod_txn_brn,
                cod_offset_brn,
                cod_chg_ccy,
                cod_chg_desc,
                cod_chg_type1,
                cod_chg_ccy1,
                cod_rate_code1,
                cod_rate_code_type1,
                cod_chg_netting1,
                cod_chg_amt1,
                cod_chg_desc1,
                cod_chg_type2,
                cod_chg_ccy2,
                cod_rate_code2,
                cod_rate_code_type2,
                cod_chg_netting2,
                cod_chg_amt2,
                cod_chg_desc2,
                cod_chg_type3,
                cod_chg_ccy3,
                cod_rate_code3,
                cod_rate_code_type3,
                cod_chg_netting3,
                cod_chg_amt3,
                cod_chg_desc3,
                cod_chg_type4,
                cod_chg_ccy4,
                cod_rate_code4,
                cod_rate_code_type4,
                cod_chg_netting4,
                cod_chg_amt4,
                cod_chg_desc4,
                cod_trans_desc,
                cod_mis_head,
                cod_mis_head1,
                cod_mis_head2,
                cod_mis_head3,
                cod_mis_head4,
                cod_mis_head5,
                consider_for_reg_cc,
                end_point,
                bank_float_days,
                cust_float_days,
                cod_main_leg,
                dr_acc,
                chg_from,
                generate_transaction_advice,
                large_dep_float,
                new_ac_float,
                spl_chq_flg,
                slab_type1,
                slab_val11,
                slab_chg11,
                slab_val12,
                slab_chg12,
                slab_val13,
                slab_chg13,
                slab_val14,
                slab_chg14,
                slab_val15,
                slab_chg15,
                slab_type2,
                slab_val21,
                slab_chg21,
                slab_val22,
                slab_chg22,
                slab_val23,
                slab_chg23,
                slab_val24,
                slab_chg24,
                slab_val25,
                slab_chg25,
                slab_type3,
                slab_val31,
                slab_chg31,
                slab_val32,
                slab_chg32,
                slab_val33,
                slab_chg33,
                slab_val34,
                slab_chg34,
                slab_val35,
                slab_chg35,
                slab_type4,
                slab_val41,
                slab_chg41,
                slab_val42,
                slab_chg42,
                slab_val43,
                slab_chg43,
                slab_val44,
                slab_chg44,
                slab_val45,
                slab_chg45,
                slab_type5,
                slab_val51,
                slab_chg51,
                slab_val52,
                slab_chg52,
                slab_val53,
                slab_chg53,
                slab_val54,
                slab_chg54,
                slab_val55,
                slab_chg55,
                liqd_prod_for_dd,
                interest_basis1,
                interest_basis2,
                interest_basis3,
                interest_basis4,
                interest_basis5,
                cod_net_charges,
                cod_their_chgs,
                cod_their_chgs1,
                cod_their_chgs2,
                cod_their_chgs3,
                cod_their_chgs4,
                float_days_basis,
                cod_gen_mt101,
                profit_reval_gl,
                loss_reval_gl,
                customer_group,
                rate_type_indicator,
                cod_ib_product,
                cod_main_offset_flag,
                cod_acc_cls_grp,
                cod_chg_track_prf,
                cod_chg_liqd_prf,
                cod_chg_track_prf1,
                cod_chg_liqd_prf1,
                cod_chg_track_prf2,
                cod_chg_liqd_prf2,
                cod_chg_track_prf3,
                cod_chg_liqd_prf3,
                cod_chg_track_prf4,
                cod_chg_liqd_prf4,
                chg_dr_leg,
                chg_dr_leg_1,
                chg_dr_leg_2,
                chg_dr_leg_3,
                chg_dr_leg_4
           FROM iftm_arc_maint@loc_fcubslive;


      v_rows_processed := SQL%ROWCOUNT;


      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_sttm_contract_statuses
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'CONTRACT STATUSES DERIVE',
                   'STTM_CONTRACT_STATUSES',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_sttm_contract_statuses';

      INSERT INTO stglive.src_sttm_contract_statuses (status_code,
                                                      once_auth,
                                                      record_stat,
                                                      mod_no,
                                                      auth_stat,
                                                      description,
                                                      checker_dt_stamp,
                                                      checker_id,
                                                      maker_dt_stamp,
                                                      maker_id,
                                                      status_type,
                                                      status_seq)
         SELECT status_code,
                once_auth,
                record_stat,
                mod_no,
                auth_stat,
                description,
                checker_dt_stamp,
                checker_id,
                maker_dt_stamp,
                maker_id,
                status_type,
                status_seq
           FROM sttm_contract_statuses@loc_fcubslive;


      v_rows_processed := SQL%ROWCOUNT;


      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_getm_liab
   AS
--      v_message          VARCHAR2 (4000);
--      v_rows_processed   NUMBER;
--      v_date             DATE := TRUNC (SYSDATE);
--      v_seq              NUMBER;
--      v_rows_count       INTEGER;
--      v_sql              VARCHAR2 (10000);

v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
      vg_date             VARCHAR2 (20);
      tab_cnt             integer;
      vv_date             date;
      vo_date             date;


   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'GETM LIAB DERIVE',
                   'GETM_LIAB',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


--      EXECUTE IMMEDIATE 'truncate table src_getm_liab';
--
--      INSERT INTO stglive.src_getm_liab (id,
--                                         process_no,
--                                         liab_no,
--                                         liab_name,
--                                         liab_branch,
--                                         liab_ccy,
--                                         util_amt,
--                                         revision_date,
--                                         credit_rating,
--                                         overall_score,
--                                         user_define_status,
--                                         overall_limit,
--                                         unadvised,
--                                         netting_required,
--                                         category,
--                                         conversion_date,
--                                         record_stat,
--                                         auth_stat,
--                                         mod_no,
--                                         maker_id,
--                                         maker_dt_stamp,
--                                         checker_id,
--                                         checker_dt_stamp,
--                                         once_auth,
--                                         source,
--                                         user_refno,
--                                         udf_value_1,
--                                         udf_value_2,
--                                         udf_value_3,
--                                         udf_value_4,
--                                         udf_value_5,
--                                         udf_value_6,
--                                         udf_value_7,
--                                         udf_value_8,
--                                         udf_value_9,
--                                         udf_value_10,
--                                         udf_value_11,
--                                         udf_value_12,
--                                         udf_value_13,
--                                         udf_value_14,
--                                         udf_value_15,
--                                         udf_value_16,
--                                         udf_value_17,
--                                         udf_value_18,
--                                         udf_value_19,
--                                         udf_value_20,
--                                         udf_value_21,
--                                         udf_value_22,
--                                         udf_value_23,
--                                         udf_value_24,
--                                         udf_value_25,
--                                         udf_value_26,
--                                         udf_value_27,
--                                         udf_value_28,
--                                         udf_value_29,
--                                         udf_value_30,
--                                         udf_value_31,
--                                         udf_value_32,
--                                         udf_value_33,
--                                         udf_value_34,
--                                         udf_value_35,
--                                         udf_value_36,
--                                         udf_value_37,
--                                         udf_value_38,
--                                         udf_value_39,
--                                         udf_value_40,
--                                         udf_value_41,
--                                         udf_value_42,
--                                         udf_value_43,
--                                         udf_value_44,
--                                         udf_value_45,
--                                         udf_value_46,
--                                         udf_value_47,
--                                         udf_value_48,
--                                         udf_value_49,
--                                         udf_value_50,
--                                         fx_clean_risk_limit,
--                                         sec_clean_risk_limit,
--                                         sec_pstl_risk_limit,
--                                         main_liab_id,
--                                         last_reval_date,
--                                         last_reval_xrate)
--         SELECT id,
--                process_no,
--                liab_no,
--                liab_name,
--                liab_branch,
--                liab_ccy,
--                util_amt,
--                revision_date,
--                credit_rating,
--                overall_score,
--                user_define_status,
--                overall_limit,
--                unadvised,
--                netting_required,
--                category,
--                conversion_date,
--                record_stat,
--                auth_stat,
--                mod_no,
--                maker_id,
--                maker_dt_stamp,
--                checker_id,
--                checker_dt_stamp,
--                once_auth,
--                source,
--                user_refno,
--                udf_value_1,
--                udf_value_2,
--                udf_value_3,
--                udf_value_4,
--                udf_value_5,
--                udf_value_6,
--                udf_value_7,
--                udf_value_8,
--                udf_value_9,
--                udf_value_10,
--                udf_value_11,
--                udf_value_12,
--                udf_value_13,
--                udf_value_14,
--                udf_value_15,
--                udf_value_16,
--                udf_value_17,
--                udf_value_18,
--                udf_value_19,
--                udf_value_20,
--                udf_value_21,
--                udf_value_22,
--                udf_value_23,
--                udf_value_24,
--                udf_value_25,
--                udf_value_26,
--                udf_value_27,
--                udf_value_28,
--                udf_value_29,
--                udf_value_30,
--                udf_value_31,
--                udf_value_32,
--                udf_value_33,
--                udf_value_34,
--                udf_value_35,
--                udf_value_36,
--                udf_value_37,
--                udf_value_38,
--                udf_value_39,
--                udf_value_40,
--                udf_value_41,
--                udf_value_42,
--                udf_value_43,
--                udf_value_44,
--                udf_value_45,
--                udf_value_46,
--                udf_value_47,
--                udf_value_48,
--                udf_value_49,
--                udf_value_50,
--                fx_clean_risk_limit,
--                sec_clean_risk_limit,
--                sec_pstl_risk_limit,
--                main_liab_id,
--                last_reval_date,
--                last_reval_xrate
--           FROM getm_liab@loc_fcubslive;
--
--
--      v_rows_processed := SQL%ROWCOUNT;

 begin
        select count(*) into tab_cnt from sys.all_tables where lower(table_name)='tmp_src_getm_liabs' and owner = 'STGLIVE';
        EXCEPTION
        WHEN NO_DATA_FOUND THEN
            tab_cnt:=0;
    end;
    if(tab_cnt)=1 Then
        execute immediate 'drop table tmp_src_getm_liabs';
        v_sql := 'CREATE TABLE tmp_src_getm_liabs AS SELECT /*+ PARALLEL(auto) */ 
               id,
               process_no,
               liab_no,
               liab_name,
               liab_branch,
               liab_ccy,
               util_amt,
               revision_date,
               credit_rating,
               overall_score,
               user_define_status,
               overall_limit,
               unadvised,
               netting_required,
               category,
               conversion_date,
               record_stat,
               auth_stat,
               mod_no,
               maker_id,
               maker_dt_stamp,
               checker_id,
               checker_dt_stamp,
               once_auth,
               source,
               user_refno,
               udf_value_1,
               udf_value_2,
               udf_value_3,
               udf_value_4,
               udf_value_5,
               udf_value_6,
               udf_value_7,
               udf_value_8,
               udf_value_9,
               udf_value_10,
               udf_value_11,
               udf_value_12,
               udf_value_13,
               udf_value_14,
               udf_value_15,
               udf_value_16,
               udf_value_17,
               udf_value_18,
               udf_value_19,
               udf_value_20,
               udf_value_21,
               udf_value_22,
               udf_value_23,
               udf_value_24,
               udf_value_25,
               udf_value_26,
               udf_value_27,
               udf_value_28,
               udf_value_29,
               udf_value_30,
               udf_value_31,
               udf_value_32,
               udf_value_33,
               udf_value_34,
               udf_value_35,
               udf_value_36,
               udf_value_37,
               udf_value_38,
               udf_value_39,
               udf_value_40,
               udf_value_41,
               udf_value_42,
               udf_value_43,
               udf_value_44,
               udf_value_45,
               udf_value_46,
               udf_value_47,
               udf_value_48,
               udf_value_49,
               udf_value_50,
               fx_clean_risk_limit,
               sec_clean_risk_limit,
               sec_pstl_risk_limit,
               main_liab_id,
               last_reval_date,
               last_reval_xrate,
               '||1||' qset
       FROM getm_liab@loc_fcubs';
       EXECUTE IMMEDIATE v_sql;
       v_rows_processed := SQL%ROWCOUNT;
    else
        v_sql := 'CREATE TABLE tmp_src_getm_liabs AS SELECT /*+ PARALLEL(auto) */ 
               id,
               process_no,
               liab_no,
               liab_name,
               liab_branch,
               liab_ccy,
               util_amt,
               revision_date,
               credit_rating,
               overall_score,
               user_define_status,
               overall_limit,
               unadvised,
               netting_required,
               category,
               conversion_date,
               record_stat,
               auth_stat,
               mod_no,
               maker_id,
               maker_dt_stamp,
               checker_id,
               checker_dt_stamp,
               once_auth,
               source,
               user_refno,
               udf_value_1,
               udf_value_2,
               udf_value_3,
               udf_value_4,
               udf_value_5,
               udf_value_6,
               udf_value_7,
               udf_value_8,
               udf_value_9,
               udf_value_10,
               udf_value_11,
               udf_value_12,
               udf_value_13,
               udf_value_14,
               udf_value_15,
               udf_value_16,
               udf_value_17,
               udf_value_18,
               udf_value_19,
               udf_value_20,
               udf_value_21,
               udf_value_22,
               udf_value_23,
               udf_value_24,
               udf_value_25,
               udf_value_26,
               udf_value_27,
               udf_value_28,
               udf_value_29,
               udf_value_30,
               udf_value_31,
               udf_value_32,
               udf_value_33,
               udf_value_34,
               udf_value_35,
               udf_value_36,
               udf_value_37,
               udf_value_38,
               udf_value_39,
               udf_value_40,
               udf_value_41,
               udf_value_42,
               udf_value_43,
               udf_value_44,
               udf_value_45,
               udf_value_46,
               udf_value_47,
               udf_value_48,
               udf_value_49,
               udf_value_50,
               fx_clean_risk_limit,
               sec_clean_risk_limit,
               sec_pstl_risk_limit,
               main_liab_id,
               last_reval_date,
               last_reval_xrate,
               '||1||' qset
          FROM getm_liab@loc_fcubs';
          EXECUTE IMMEDIATE v_sql;
          v_rows_processed := SQL%ROWCOUNT;
    
    end if;
    
    execute immediate 'alter table stglive.src_getm_liab 
                    exchange partition P' ||to_number(10)|| ' with table tmp_src_getm_liabs';
     
    prc_index_rebuild('PK01_GETM_LIAB1');
    prc_index_rebuild('UI01_GETM_LIAB1');
    commit;



      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_sttm_od_coll_linkages
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'OD COLL LINKAGES DERIVE',
                   'STTM_OD_COLL_LINKAGES',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_sttm_od_coll_linkages';

      INSERT INTO stglive.src_sttm_od_coll_linkages (branch_code,
                                                     cust_ac_no,
                                                     collateral_type,
                                                     collateral,
                                                     collateral_branch,
                                                     available_amount,
                                                     linked_amount,
                                                     coll_int_rate,
                                                     int_spread,
                                                     od_int_rate,
                                                     category_name,
                                                     haircut,
                                                     collateral_code,
                                                     collateral_pool)
         SELECT branch_code,
                cust_ac_no,
                collateral_type,
                collateral,
                collateral_branch,
                available_amount,
                linked_amount,
                coll_int_rate,
                int_spread,
                od_int_rate,
                category_name,
                haircut,
                collateral_code,
                collateral_pool
           FROM sttm_od_coll_linkages@loc_fcubslive;


      v_rows_processed := SQL%ROWCOUNT;


      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_gltb_gl_bal
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE;
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;
      
      select case when today > trunc(sysdate) then prev_working_day else today end into v_date
      from src_sttm_dates where branch_code = '099';

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'GL BAL DERIVE',
                   'GLTB_GL_BAL',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_gltb_gl_bal';

      INSERT INTO stglive.src_gltb_gl_bal (branch_code,
                                           gl_code,
                                           ccy_code,
                                           fin_year,
                                           period_code,
                                           parent_gl,
                                           leaf,
                                           category,
                                           dr_mov,
                                           cr_mov,
                                           dr_mov_lcy,
                                           cr_mov_lcy,
                                           dr_bal,
                                           cr_bal,
                                           dr_bal_lcy,
                                           cr_bal_lcy,
                                           uncollected,
                                           open_dr_bal,
                                           open_cr_bal,
                                           open_dr_bal_lcy,
                                           open_cr_bal_lcy,
                                           open_dr_mov,
                                           open_cr_mov,
                                           open_dr_mov_lcy,
                                           open_cr_mov_lcy,
                                           dr_mov_old,
                                           cr_mov_old,
                                           dr_mov_lcy_old,
                                           cr_mov_lcy_old,
                                           has_tov,
                                           acy_today_tover_dr,
                                           lcy_today_tover_dr,
                                           acy_today_tover_cr,
                                           lcy_today_tover_cr)
         SELECT branch_code,
                gl_code,
                ccy_code,
                fin_year,
                period_code,
                parent_gl,
                leaf,
                category,
                dr_mov,
                cr_mov,
                dr_mov_lcy,
                cr_mov_lcy,
                dr_bal,
                cr_bal,
                dr_bal_lcy,
                cr_bal_lcy,
                uncollected,
                open_dr_bal,
                open_cr_bal,
                open_dr_bal_lcy,
                open_cr_bal_lcy,
                open_dr_mov,
                open_cr_mov,
                open_dr_mov_lcy,
                open_cr_mov_lcy,
                dr_mov_old,
                cr_mov_old,
                dr_mov_lcy_old,
                cr_mov_lcy_old,
                has_tov,
                acy_today_tover_dr,
                lcy_today_tover_dr,
                acy_today_tover_cr,
                lcy_today_tover_cr
           FROM gltb_gl_bal@loc_fcubslive;


      v_rows_processed := SQL%ROWCOUNT;


      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_cstm_inst_detail
   AS
--      v_message          VARCHAR2 (4000);
--      v_rows_processed   NUMBER;
--      v_date             DATE := TRUNC (SYSDATE);
--      v_seq              NUMBER;
--      v_rows_count       INTEGER;
--      v_sql              VARCHAR2 (10000);

v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
      tab_cnt            integer; 

   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'INST DETAIL DERIVE',
                   'CSTM_INST_DETAIL',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


--      EXECUTE IMMEDIATE 'truncate table src_cstm_inst_detail';
--
--      INSERT INTO stglive.src_cstm_inst_detail (customer_no,
--                                                inst_id,
--                                                inst_date,
--                                                inst_expr_date,
--                                                display_type,
--                                                memo_detail_id,
--                                                memo_id,
--                                                channel,
--                                                language,
--                                                MESSAGE,
--                                                show_to_customer,
--                                                user_message)
--         SELECT customer_no,
--                inst_id,
--                inst_date,
--                inst_expr_date,
--                display_type,
--                memo_detail_id,
--                memo_id,
--                channel,
--                language,
--                MESSAGE,
--                show_to_customer,
--                user_message
--           FROM cstm_inst_detail@loc_fcubslive;
--
--
--      v_rows_processed := SQL%ROWCOUNT;


 begin
        select count(*) into tab_cnt from sys.all_tables where lower(table_name)='tmp_cstm_inst_details' and owner = 'STGLIVE';
        EXCEPTION
        WHEN NO_DATA_FOUND THEN
            tab_cnt:=0;
        end;
        
      if(tab_cnt)=1 Then
        execute immediate 'drop table tmp_cstm_inst_details';
              v_sql := 'create table tmp_cstm_inst_details as SELECT /*+ PARALLEL(auto) */ customer_no,
               inst_id,
               inst_date,
               inst_expr_date,
               display_type,
               memo_detail_id,
               memo_id,
               channel,
               language,
               MESSAGE,
               show_to_customer,
               user_message,
               '||1||' qset
            FROM cstm_inst_detail@loc_fcubs';
            execute immediate v_sql;
            v_rows_processed := sql%rowcount;
      else
             v_sql := 'create table tmp_cstm_inst_details as SELECT /*+ PARALLEL(auto) */ customer_no,
               inst_id,
               inst_date,
               inst_expr_date,
               display_type,
               memo_detail_id,
               memo_id,
               channel,
               language,
               MESSAGE,
               show_to_customer,
               user_message,
               '||1||' qset
            FROM cstm_inst_detail@loc_fcubs';
            --FROM cstm_inst_detail@dwhfcubs';
            execute immediate v_sql;
            v_rows_processed := sql%rowcount;
      
      end if;
         --REV_CSTM_INST_DETAILS
         
         /** HAD TO REMOVE CHECK CONSTRAINTS and add unique constraint---
          ORA-14118: CHECK constraint mismatch in ALTER TABLE EXCHANGE PARTITION**/
          
          execute immediate 'ALTER TABLE tmp_cstm_inst_details ADD (
  CONSTRAINT PK01_CSTM_INST_DETAIL11
  PRIMARY KEY
  (MEMO_ID, INST_ID))';
         
       execute immediate 'alter table stglive.src_cstm_inst_detail 
                    exchange partition P' ||to_number(10)|| ' with table tmp_cstm_inst_details';
                    
            prc_index_rebuild('IN_CUSTOMER1');
            prc_index_rebuild('PK01_CSTM_INST_DETAIL1');
commit;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_catm_amount_blocks
   AS
--      v_message          VARCHAR2 (4000);
--      v_rows_processed   NUMBER;
--      v_date             DATE;
--      v_seq              NUMBER;
--      v_rows_count       INTEGER;
--      v_sql              VARCHAR2 (10000);

v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE;
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
      tab_cnt            integer;
      vv_date           VARCHAR2 (20);
      max_date          date;

   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;
      
      select case when today > trunc(sysdate) then prev_working_day else today end into v_date
      from src_sttm_dates where branch_code = '099';

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'AMOUNT BLOCKS DERIVE',
                   'CATM_AMOUNT_BLOCKS',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


--      EXECUTE IMMEDIATE 'truncate table src_catm_amount_blocks';
--
--      INSERT /*+ append parallel */ INTO stglive.src_catm_amount_blocks (branch,
--                                                  account,
--                                                  amount_block_no,
--                                                  amount,
--                                                  effective_date,
--                                                  expiry_date,
--                                                  maker_id,
--                                                  maker_dt_stamp,
--                                                  checker_id,
--                                                  checker_dt_stamp,
--                                                  auth_stat,
--                                                  record_stat,
--                                                  once_auth,
--                                                  mod_no,
--                                                  remarks,
--                                                  amount_block_type,
--                                                  reference_no,
--                                                  hold_code,
--                                                  related_ref_no,
--                                                  event_seq_no,
--                                                  beneficiary_email_id,
--                                                  beneficiary_facebook_id,
--                                                  beneficiary_telephone)
--         SELECT branch,
--                account,
--                amount_block_no,
--                amount,
--                effective_date,
--                expiry_date,
--                maker_id,
--                maker_dt_stamp,
--                checker_id,
--                checker_dt_stamp,
--                auth_stat,
--                record_stat,
--                once_auth,
--                mod_no,
--                remarks,
--                amount_block_type,
--                reference_no,
--                hold_code,
--                related_ref_no,
--                event_seq_no,
--                beneficiary_email_id,
--                beneficiary_facebook_id,
--                beneficiary_telephone
--           FROM catm_amount_blocks@loc_fcubslive;
--
--
--      v_rows_processed := SQL%ROWCOUNT;



 begin
        select count(*) into tab_cnt from sys.all_tables where lower(table_name)='tmp_catm_amount_blocks' and owner = 'STGLIVE';
        EXCEPTION
        WHEN NO_DATA_FOUND THEN
            tab_cnt:=0;
      end;
      if(tab_cnt)=1 Then
      execute immediate 'drop table tmp_catm_amount_blocks';
      v_sql:='create table tmp_catm_amount_blocks
                as
         select /*+ parallel(auto) */ branch,
                account,
                amount_block_no,
                amount,
                effective_date,
                expiry_date,
                maker_id,
                maker_dt_stamp,
                checker_id,
                checker_dt_stamp,
                auth_stat,
                record_stat,
                once_auth,
                mod_no,
                remarks,
                amount_block_type,
                reference_no,
                hold_code,
                related_ref_no,
                event_seq_no,
                beneficiary_email_id,
                beneficiary_facebook_id,
                beneficiary_telephone,
                '||1||' qset
               from catm_amount_blocks@loc_fcubs';
           --FROM catm_amount_blocks@loc_fcubs where trunc(MAKER_DT_STAMP)<='''||vv_date||'''';
           execute immediate v_sql;
           else
           v_sql:='create table tmp_catm_amount_blocks
                as
         select /*+ parallel(auto) */ branch,
                account,
                amount_block_no,
                amount,
                effective_date,
                expiry_date,
                maker_id,
                maker_dt_stamp,
                checker_id,
                checker_dt_stamp,
                auth_stat,
                record_stat,
                once_auth,
                mod_no,
                remarks,
                amount_block_type,
                reference_no,
                hold_code,
                related_ref_no,
                event_seq_no,
                beneficiary_email_id,
                beneficiary_facebook_id,
                beneficiary_telephone,
                '||1||' qset
           from catm_amount_blocks@loc_fcubs';
           --from catm_amount_blocks@loc_fcubs where trunc(MAKER_DT_STAMP)<='''||vv_date||'''';
           execute immediate v_sql;
           v_rows_processed := SQL%ROWCOUNT;
           end if;
       
      execute immediate 'alter table stglive.src_catm_amount_blocks 
                    exchange partition P' ||to_number(10)|| ' with table tmp_catm_amount_blocks';
      v_rows_processed := SQL%ROWCOUNT;
      
      --end loop;
      
        prc_index_rebuild('IDX_CATM_AMT_BLK_ACCT_BRN');
        --prc_index_rebuild('IDX_CATM_AMT_BLK_ACCT_BRN');
        prc_index_rebuild('PK01_REV_CATM_AMOUNT_BLOCKS1');
        commit;


      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_sitb_contract_master
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'SITB CONTRACT MASTER DRIVE',
                   'SRC_SITB_CONTRACT_MASTER',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_sitb_contract_master';

      INSERT INTO stglive.src_sitb_contract_master (contract_ref_no,
                                                    event_seq_no,
                                                    version_no,
                                                    user_ref_number,
                                                    event_code,
                                                    si_expiry_date,
                                                    action_code_amt,
                                                    apply_chg_suxs,
                                                    apply_chg_pexc,
                                                    apply_chg_rejt,
                                                    max_retry_count,
                                                    min_sweep_amt,
                                                    instruction_no,
                                                    dr_acc_br,
                                                    dr_account,
                                                    dr_acc_ccy,
                                                    si_amt_ccy,
                                                    si_amt,
                                                    cr_acc_br,
                                                    cr_account,
                                                    cr_acc_ccy,
                                                    priority,
                                                    charge_whom,
                                                    min_bal_after_sweep,
                                                    internal_remarks,
                                                    iccf_changed,
                                                    tax_changed,
                                                    settle_changed,
                                                    mis_changed,
                                                    transfer_type,
                                                    subsystem_stat,
                                                    dup_resolution_list,
                                                    retry_count_adv,
                                                    si_tanked_stat,
                                                    calc_si_amt)
         SELECT contract_ref_no,
                event_seq_no,
                version_no,
                user_ref_number,
                event_code,
                si_expiry_date,
                action_code_amt,
                apply_chg_suxs,
                apply_chg_pexc,
                apply_chg_rejt,
                max_retry_count,
                min_sweep_amt,
                instruction_no,
                dr_acc_br,
                dr_account,
                dr_acc_ccy,
                si_amt_ccy,
                si_amt,
                cr_acc_br,
                cr_account,
                cr_acc_ccy,
                priority,
                charge_whom,
                min_bal_after_sweep,
                internal_remarks,
                iccf_changed,
                tax_changed,
                settle_changed,
                mis_changed,
                transfer_type,
                subsystem_stat,
                dup_resolution_list,
                retry_count_adv,
                si_tanked_stat,
                calc_si_amt
           FROM sitb_contract_master@loc_fcubslive;


      v_rows_processed := SQL%ROWCOUNT;


      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_sitb_instruction
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'INSTRUCTION DRIVE',
                   'SITB_INSTRUCTION',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_sitb_instruction';

      INSERT INTO stglive.src_sitb_instruction (instruction_no,
                                                inst_version_no,
                                                latest_version_no,
                                                product_code,
                                                product_type,
                                                si_type,
                                                cal_hol_excp,
                                                rate_type,
                                                exec_days,
                                                exec_mths,
                                                exec_yrs,
                                                first_exec_date,
                                                next_exec_date,
                                                first_value_date,
                                                next_value_date,
                                                month_end_flag,
                                                processing_time,
                                                user_inst_no,
                                                inst_status,
                                                auth_status,
                                                latest_version_date,
                                                branch,
                                                book_date,
                                                serial_no,
                                                counterparty,
                                                latest_cycle_no,
                                                latest_cycle_date,
                                                source_code,
                                                source_inst_no,
                                                operation)
         SELECT instruction_no,
                inst_version_no,
                latest_version_no,
                product_code,
                product_type,
                si_type,
                cal_hol_excp,
                rate_type,
                exec_days,
                exec_mths,
                exec_yrs,
                first_exec_date,
                next_exec_date,
                first_value_date,
                next_value_date,
                month_end_flag,
                processing_time,
                user_inst_no,
                inst_status,
                auth_status,
                latest_version_date,
                branch,
                book_date,
                serial_no,
                counterparty,
                latest_cycle_no,
                latest_cycle_date,
                source_code,
                source_inst_no,
                operation
           FROM sitb_instruction@loc_fcubslive;


      v_rows_processed := SQL%ROWCOUNT;


      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_sttb_account
   AS
--      v_message          VARCHAR2 (4000);
--      v_rows_processed   NUMBER;
--      v_date             DATE := TRUNC (SYSDATE);
--      v_seq              NUMBER;
--      v_rows_count       INTEGER;
--      v_sql              VARCHAR2 (10000);

v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
      tab_cnt            integer;

   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'STTB ACCOUNT DRIVE',
                   'STTB_ACCOUNT',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


--      EXECUTE IMMEDIATE 'truncate table src_sttb_account';
--
--      INSERT INTO stglive.src_sttb_account (ac_gl_no,
--                                            pkey,
--                                            branch_code,
--                                            ac_gl_ccy,
--                                            ac_or_gl,
--                                            cust_no,
--                                            gl_aclass_type,
--                                            ac_gl_desc,
--                                            ac_stat_no_cr,
--                                            ac_stat_no_dr,
--                                            gl_stat_blocked,
--                                            ac_stat_stop_pay,
--                                            ac_stat_dormant,
--                                            ac_stat_frozen,
--                                            gl_stat_de_post,
--                                            gl_branch_res,
--                                            gl_ccy_res,
--                                            alt_ac_no,
--                                            cust_name1,
--                                            gl_category,
--                                            recon_type,
--                                            ac_class,
--                                            ac_natural_gl,
--                                            customer_cat,
--                                            offline_limit,
--                                            ac_gl_rec_status,
--                                            ac_open_date,
--                                            auth_stat,
--                                            native,
--                                            ac_native,
--                                            iban_ac_no,
--                                            dormant_param,
--                                            once_auth,
--                                            default_waiver)
--         SELECT ac_gl_no,
--                pkey,
--                branch_code,
--                ac_gl_ccy,
--                ac_or_gl,
--                cust_no,
--                gl_aclass_type,
--                ac_gl_desc,
--                ac_stat_no_cr,
--                ac_stat_no_dr,
--                gl_stat_blocked,
--                ac_stat_stop_pay,
--                ac_stat_dormant,
--                ac_stat_frozen,
--                gl_stat_de_post,
--                gl_branch_res,
--                gl_ccy_res,
--                alt_ac_no,
--                cust_name1,
--                gl_category,
--                recon_type,
--                ac_class,
--                ac_natural_gl,
--                customer_cat,
--                offline_limit,
--                ac_gl_rec_status,
--                ac_open_date,
--                auth_stat,
--                native,
--                ac_native,
--                iban_ac_no,
--                dormant_param,
--                once_auth,
--                default_waiver
--           FROM sttb_account@loc_fcubslive;
--
--
--      v_rows_processed := SQL%ROWCOUNT;

 begin
        select count(*) into tab_cnt from sys.all_tables where lower(table_name)='tmp_sttb_account_rev' and owner = 'STGLIVE';
        EXCEPTION
        WHEN NO_DATA_FOUND THEN
            tab_cnt:=0;
      end;
      
      if(tab_cnt)=1 Then
        execute immediate 'drop table tmp_sttb_account_rev';
        v_sql := 'create table tmp_sttb_account_rev as
        SELECT /*+ PARALLEL(auto) */ ac_gl_no,
             pkey,
             branch_code,
             ac_gl_ccy,
             ac_or_gl,
             cust_no,
             gl_aclass_type,
             ac_gl_desc,
             ac_stat_no_cr,
             ac_stat_no_dr,
             gl_stat_blocked,
             ac_stat_stop_pay,
             ac_stat_dormant,
             ac_stat_frozen,
             gl_stat_de_post,
             gl_branch_res,
             gl_ccy_res,
             alt_ac_no,
             cust_name1,
             gl_category,
             recon_type,
             ac_class,
             ac_natural_gl,
             customer_cat,
             offline_limit,
             ac_gl_rec_status,
             ac_open_date,
             auth_stat,
             native,
             ac_native,
             iban_ac_no,
             dormant_param,
             once_auth,
             default_waiver,
             '||1||' qset
        from sttb_account@loc_fcubs';
        --FROM sttb_account@loc_fcubs';
        execute immediate v_sql;
        v_rows_processed := SQL%ROWCOUNT;
       else
        v_sql := 'create table tmp_sttb_account_rev as
        SELECT /*+ PARALLEL(auto) */ ac_gl_no,
             pkey,
             branch_code,
             ac_gl_ccy,
             ac_or_gl,
             cust_no,
             gl_aclass_type,
             ac_gl_desc,
             ac_stat_no_cr,
             ac_stat_no_dr,
             gl_stat_blocked,
             ac_stat_stop_pay,
             ac_stat_dormant,
             ac_stat_frozen,
             gl_stat_de_post,
             gl_branch_res,
             gl_ccy_res,
             alt_ac_no,
             cust_name1,
             gl_category,
             recon_type,
             ac_class,
             ac_natural_gl,
             customer_cat,
             offline_limit,
             ac_gl_rec_status,
             ac_open_date,
             auth_stat,
             native,
             ac_native,
             iban_ac_no,
             dormant_param,
             once_auth,
             default_waiver,
             '||1||' qset
        from sttb_account@loc_fcubs';
        --from sttb_account@loc_fcubs';
        execute immediate v_sql;
        v_rows_processed := SQL%ROWCOUNT;
       end if;
       
       execute immediate 'alter table stglive.src_sttb_account 
                    exchange partition P' ||to_number(10)|| ' with table tmp_sttb_account_rev';

            prc_index_rebuild('IX03_STTB_ACCOUNT1');
            prc_index_rebuild('MIGRM1_STTB_ACCOUNT1');
            prc_index_rebuild('PK01_STTB_ACCOUNT1');
            commit;


      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_cltb_account_schedules
   AS
--      v_message          VARCHAR2 (4000);
--      v_rows_processed   NUMBER;
--      v_date             DATE := TRUNC (SYSDATE);
--      v_seq              NUMBER;
--      v_rows_count       INTEGER;
--      v_sql              VARCHAR2 (10000);

v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_sql              VARCHAR2 (32000);
      vpartition         VARCHAR2(4);
      tab_cnt            integer;

   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'ACCOUNT SCHEDULES DRIVE',
                   'CLTB_ACCOUNT_SCHEDULES',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


--      EXECUTE IMMEDIATE 'truncate table src_cltb_account_schedules';
--
--      INSERT INTO stglive.src_cltb_account_schedules (account_number,
--                                                      branch_code,
--                                                      component_name,
--                                                      formula_name,
--                                                      schedule_type,
--                                                      schedule_st_date,
--                                                      schedule_due_date,
--                                                      grace_days,
--                                                      orig_amount_due,
--                                                      amount_due,
--                                                      adj_amount,
--                                                      amount_settled,
--                                                      amount_overdue,
--                                                      accrued_amount,
--                                                      settlement_ccy,
--                                                      lcy_equivalent,
--                                                      dly_avg_amt,
--                                                      emi_amount,
--                                                      schedule_flag,
--                                                      waiver_flag,
--                                                      event_seq_no,
--                                                      schedule_linkage,
--                                                      capitalized,
--                                                      process_no,
--                                                      amount_readjusted,
--                                                      adj_settled,
--                                                      sch_status,
--                                                      account_gl,
--                                                      last_pmnt_value_date,
--                                                      retry_start_date,
--                                                      mora_int,
--                                                      schedule_no,
--                                                      writeoff_amt,
--                                                      readj_settled,
--                                                      last_readj_xrate,
--                                                      susp_amt_due,
--                                                      susp_amt_settled,
--                                                      susp_amt_lcy,
--                                                      susp_read_amt,
--                                                      susp_read_settled,
--                                                      last_susp_xrate,
--                                                      amount_waived,
--                                                      irr_applicable,
--                                                      list_days,
--                                                      list_avg_amt,
--                                                      pay_by_date)
--         SELECT account_number,
--                branch_code,
--                component_name,
--                formula_name,
--                schedule_type,
--                schedule_st_date,
--                schedule_due_date,
--                grace_days,
--                orig_amount_due,
--                amount_due,
--                adj_amount,
--                amount_settled,
--                amount_overdue,
--                accrued_amount,
--                settlement_ccy,
--                lcy_equivalent,
--                dly_avg_amt,
--                emi_amount,
--                schedule_flag,
--                waiver_flag,
--                event_seq_no,
--                schedule_linkage,
--                capitalized,
--                process_no,
--                amount_readjusted,
--                adj_settled,
--                sch_status,
--                account_gl,
--                last_pmnt_value_date,
--                retry_start_date,
--                mora_int,
--                schedule_no,
--                writeoff_amt,
--                readj_settled,
--                last_readj_xrate,
--                susp_amt_due,
--                susp_amt_settled,
--                susp_amt_lcy,
--                susp_read_amt,
--                susp_read_settled,
--                last_susp_xrate,
--                amount_waived,
--                irr_applicable,
--                list_days,
--                list_avg_amt,
--                pay_by_date
--           FROM cltb_account_schedules@loc_fcubslive;
--
--
--      v_rows_processed := SQL%ROWCOUNT;

 begin
        select count(*) into tab_cnt from sys.all_tables where lower(table_name)='tmp_cltb_acct_schedule' and owner = 'STGLIVE';
        EXCEPTION
        WHEN NO_DATA_FOUND THEN
            tab_cnt:=0;
      end;
      if(tab_cnt)=1 Then
      execute immediate 'drop table tmp_cltb_acct_schedule';
      v_sql := 'create table tmp_cltb_acct_schedule as
         SELECT /*+ PARALLEL(auto) */ account_number,
                branch_code,
                component_name,
                formula_name,
                schedule_type,
                schedule_st_date,
                schedule_due_date,
                grace_days,
                orig_amount_due,
                amount_due,
                adj_amount,
                amount_settled,
                amount_overdue,
                accrued_amount,
                settlement_ccy,
                lcy_equivalent,
                dly_avg_amt,
                emi_amount,
                schedule_flag,
                waiver_flag,
                event_seq_no,
                schedule_linkage,
                capitalized,
                process_no,
                amount_readjusted,
                adj_settled,
                sch_status,
                account_gl,
                last_pmnt_value_date,
                retry_start_date,
                mora_int,
                schedule_no,
                writeoff_amt,
                readj_settled,
                last_readj_xrate,
                susp_amt_due,
                susp_amt_settled,
                susp_amt_lcy,
                susp_read_amt,
                susp_read_settled,
                last_susp_xrate,
                amount_waived,
                irr_applicable,
                list_days,
                list_avg_amt,
                pay_by_date,
                '||1||' qset
        FROM cltb_account_schedules@loc_fcubs';
        execute immediate v_sql;
        v_rows_processed := SQL%ROWCOUNT;
        else
         v_sql := 'create table tmp_cltb_acct_schedule as
         SELECT /*+ PARALLEL(auto) */ account_number,
                branch_code,
                component_name,
                formula_name,
                schedule_type,
                schedule_st_date,
                schedule_due_date,
                grace_days,
                orig_amount_due,
                amount_due,
                adj_amount,
                amount_settled,
                amount_overdue,
                accrued_amount,
                settlement_ccy,
                lcy_equivalent,
                dly_avg_amt,
                emi_amount,
                schedule_flag,
                waiver_flag,
                event_seq_no,
                schedule_linkage,
                capitalized,
                process_no,
                amount_readjusted,
                adj_settled,
                sch_status,
                account_gl,
                last_pmnt_value_date,
                retry_start_date,
                mora_int,
                schedule_no,
                writeoff_amt,
                readj_settled,
                last_readj_xrate,
                susp_amt_due,
                susp_amt_settled,
                susp_amt_lcy,
                susp_read_amt,
                susp_read_settled,
                last_susp_xrate,
                amount_waived,
                irr_applicable,
                list_days,
                list_avg_amt,
                pay_by_date,
                '||1||' qset
       FROM cltb_account_schedules@loc_fcubs';
        execute immediate v_sql;
        v_rows_processed := SQL%ROWCOUNT;
        end if;
         
      execute immediate 'alter table stglive.src_cltb_account_schedules 
                    exchange partition P' ||to_number(10)|| ' with table tmp_cltb_acct_schedule';
                    
                    prc_index_rebuild('ACC_NO_SCHE_DUE_DT1');
                    commit;



      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_cstb_contract_event_log
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE;
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;
      
      select case when today > trunc(sysdate) then prev_working_day else today end into v_date
      from src_sttm_dates where branch_code = '099';

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'CONTRACT EVENT LOG DRIVE',
                   'CSTB_CONTRACT_EVENT_LOG',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_cstb_contract_event_log';

      INSERT INTO stglive.src_cstb_contract_event_log (module,
                                                       contract_ref_no,
                                                       maker_id,
                                                       maker_dt_stamp,
                                                       checker_id,
                                                       checker_dt_stamp,
                                                       event_seq_no,
                                                       event_date,
                                                       event_code,
                                                       contract_status,
                                                       auth_status,
                                                       new_version_indicator,
                                                       reversed_event_seq_no,
                                                       event_value_date)
         SELECT module,
                contract_ref_no,
                maker_id,
                maker_dt_stamp,
                checker_id,
                checker_dt_stamp,
                event_seq_no,
                event_date,
                event_code,
                contract_status,
                auth_status,
                new_version_indicator,
                reversed_event_seq_no,
                event_value_date
           FROM cstb_contract_event_log@loc_fcubslive;


      v_rows_processed := SQL%ROWCOUNT;


      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   /*procedure prc_ictm_td as

   v_message           varchar2(4000);
   v_rows_processed    number;
   v_date              date := trunc(sysdate);
   v_seq               number;
   v_rows_count        integer;
   v_sql               varchar2(10000);

    begin

     select process_seq.nextval into v_seq from dual;

     insert into fcubs_process_log(process_sequence, process_type, process_name, reference_date, status, message, row_count, start_date, end_date, duration)
      values (v_seq, 'ICTM_TD','ICTM_TD', v_date, 'STARTED', null, 0, sysdate, null, null);

     commit;


     execute immediate 'truncate table src_ictm_td';

     insert into src_ictm_td(acc, account_class, acy_accrued_cr_ic, ac_desc, ac_open_date, alt_ac_no,
                             auto_rollover, book_acc, book_brn, brn, ccy, close_on_maturity, cust_no, int_cap,
                             joint_ac_indicator, maturity_date, nominee1, nominee2, rate, rollover_amt, rollover_type, td_amount)
       select acc, account_class, acy_accrued_cr_ic, ac_desc, ac_open_date, alt_ac_no,
              auto_rollover, book_acc, book_brn, brn, ccy, close_on_maturity, cust_no, int_cap,
              joint_ac_indicator, maturity_date, nominee1, nominee2, rate, rollover_amt, rollover_type, td_amount
           from ictm_td@loc_fcubslive;


         v_rows_processed := sql%rowcount;


      update fcubs_process_log
        set status     = 'COMPLETED',
            message    = 'SUCCESS',
            row_count  = v_rows_processed,
            end_date   = sysdate,
            duration   = (sysdate - start_date)  * 24 * 3600
      where process_sequence = v_seq;

     commit;

     exception when others then
     v_message := substr(sqlerrm,1,200);

     update fcubs_process_log
       set status     = 'FAILED',
           message    = v_message,
           row_count  = 0,
           end_date   = sysdate,
           duration   = (sysdate - start_date)  * 24 * 3600
       where process_sequence = v_seq;

     commit;

     end;  */

   PROCEDURE prc_actb_daily_ghost_log
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'ACTB DAILY DERIVE',
                   'ACTB_DAILY_GHOST_LOG',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_actb_daily_ghost_log';

      INSERT INTO stglive.src_actb_daily_ghost_log (ac_branch,
                                                    ac_ccy,
                                                    ac_entry_sr_no,
                                                    ac_no,
                                                    amount_tag,
                                                    auth_id,
                                                    auth_stat,
                                                    avldays,
                                                    balance_upd,
                                                    bank_code,
                                                    batch_no,
                                                    category,
                                                    curr_no,
                                                    cust_gl,
                                                    delete_stat,
                                                    distributed,
                                                    drcr_ind,
                                                    event,
                                                    event_sr_no,
                                                    exch_rate,
                                                    fcy_amount,
                                                    financial_cycle,
                                                    flg_position_status,
                                                    fw_ref,
                                                    glmis_update_flag,
                                                    ib,
                                                    instrument_code,
                                                    lcy_amount,
                                                    mis_flag,
                                                    mis_head,
                                                    module,
                                                    netting_ind,
                                                    node,
                                                    node_sr_no,
                                                    on_line,
                                                    period_code,
                                                    print_stat,
                                                    related_account,
                                                    related_customer,
                                                    related_reference,
                                                    trn_code,
                                                    trn_dt,
                                                    trn_ref_no,
                                                    txn_init_date,
                                                    TYPE,
                                                    updact,
                                                    user_id,
                                                    value_dt)
         SELECT ac_branch,
                ac_ccy,
                ac_entry_sr_no,
                ac_no,
                amount_tag,
                auth_id,
                auth_stat,
                avldays,
                balance_upd,
                bank_code,
                batch_no,
                category,
                curr_no,
                cust_gl,
                delete_stat,
                distributed,
                drcr_ind,
                event,
                event_sr_no,
                exch_rate,
                fcy_amount,
                financial_cycle,
                flg_position_status,
                fw_ref,
                glmis_update_flag,
                ib,
                instrument_code,
                lcy_amount,
                mis_flag,
                mis_head,
                module,
                netting_ind,
                node,
                node_sr_no,
                on_line,
                period_code,
                print_stat,
                related_account,
                related_customer,
                related_reference,
                trn_code,
                trn_dt,
                trn_ref_no,
                txn_init_date,
                TYPE,
                updact,
                user_id,
                value_dt
           FROM actb_daily_ghost_log@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_ictm_tdpayout_details
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'ICTM TDPAYOUT DERIVE',
                   'ICTM_TDPAYOUT_DETAILS',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_ictm_tdpayout_details';

      INSERT INTO stglive.src_ictm_tdpayout_details (acc,
                                                     bankcode,
                                                     benfadd1,
                                                     benfadd2,
                                                     benfname,
                                                     brn,
                                                     ccy,
                                                     instno,
                                                     narrative,
                                                     offset_acc,
                                                     offset_brn,
                                                     offset_ccy,
                                                     otherdets,
                                                     payouttype,
                                                     payout_component,
                                                     percentage,
                                                     redmamt,
                                                     ref_no,
                                                     seqno,
                                                     waive_issue_chg,
                                                     xrate)
         SELECT acc,
                bankcode,
                benfadd1,
                benfadd2,
                benfname,
                brn,
                ccy,
                instno,
                narrative,
                offset_acc,
                offset_brn,
                offset_ccy,
                otherdets,
                payouttype,
                payout_component,
                percentage,
                redmamt,
                ref_no,
                seqno,
                waive_issue_chg,
                xrate
           FROM ictm_tdpayout_details@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_cltm_product
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'CLTM PRODUCT DERIVE',
                   'CLTM_PRODUCT',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_cltm_product';

      INSERT INTO stglive.src_cltm_product (accrue_principal,
                                            acop_emi_type,
                                            acq_type,
                                            adhoc_hol_treatment_reqd,
                                            aliq_reversed_pmt,
                                            allow_back_period_entry,
                                            allow_recomp_of_sch,
                                            amend_past_paid_schedule,
                                            amort_reschedule_on_dsbr,
                                            apply_contract_hol_ccy,
                                            apply_contract_hol_ccy_mat,
                                            apply_facility_hol_ccy,
                                            apply_facility_hol_ccy_mat,
                                            apply_local_hol_ccy,
                                            apply_local_hol_ccy_mat,
                                            arrahnu_extension,
                                            assetccy,
                                            asset_type,
                                            atm_facility,
                                            auth_stat,
                                            auto_liqd_basis,
                                            auto_liqd_percent,
                                            auto_man_rollover,
                                            balloon_reqd,
                                            book_unearned_interest,
                                            branch_list,
                                            cap_on_nmlsch,
                                            cascade_schedules,
                                            ccy_list,
                                            checker_dt_stamp,
                                            checker_id,
                                            cheque_book_facility,
                                            cl_against_bill,
                                            consider_branch_holiday_mat,
                                            consider_branch_holiday_sch,
                                            contract_type,
                                            craj_entries_pref,
                                            creditdays,
                                            cuscat_list,
                                            cust_frequency_unit,
                                            cust_grace_period,
                                            days_for_cif_ac,
                                            days_for_gua_ac,
                                            default_from_metsch,
                                            disbursement_mode,
                                            draj_entries_pref,
                                            fa_product,
                                            grace_period_comp,
                                            hamish_jid_min_percen,
                                            handover_frequency,
                                            handover_unit,
                                            holiday_ccy_mat,
                                            holiday_ccy_sch,
                                            holiday_check,
                                            holiday_check_mat,
                                            holiday_default_basis,
                                            ic_product,
                                            ignore_holidays,
                                            ignore_holidays_mat_val_dt,
                                            insurance_flag,
                                            insurance_required,
                                            interest_only_period,
                                            interest_only_unit,
                                            interest_subsidy_allowed,
                                            int_stmt,
                                            inv_trkg_req,
                                            irr_recomp,
                                            lease_asset_booking,
                                            lease_payment_mode,
                                            lease_type,
                                            leasing_asset_required,
                                            limits_product,
                                            liquidation_mode,
                                            liq_back_val_sch_flag,
                                            liq_comp_dates_flag,
                                            loan_against_sal,
                                            maker_dt_stamp,
                                            maker_id,
                                            maxassetcost,
                                            maximum_rate_variance,
                                            max_tenor,
                                            minassetcost,
                                            min_emi_amount,
                                            min_emi_ccy,
                                            min_tenor,
                                            module_code,
                                            mod_no,
                                            move_across_month,
                                            move_across_month_mat_val_dt,
                                            multiple_asset,
                                            normal_rate_variance,
                                            notary_confirm_reqd,
                                            notice_day_basis,
                                            od_account_class,
                                            od_tracking_allowed,
                                            once_auth,
                                            open_line_loan,
                                            packing_credit,
                                            partial_liquidation,
                                            passbook_facility,
                                            prepayment_tbd_treatment,
                                            prepay_emi_type,
                                            prepmt_effective_from,
                                            product_category,
                                            product_code,
                                            product_desc,
                                            product_end_date,
                                            product_type,
                                            profita_calc,
                                            project_account,
                                            prop_handover,
                                            rate_chg_action,
                                            rate_code_pref,
                                            rate_type,
                                            rebate_reqd,
                                            recomputation_basis,
                                            record_stat,
                                            reference_no_format,
                                            rekey_down_payment,
                                            rekey_residual_value,
                                            residual_auto_liquidate,
                                            residual_subsidy_allowed,
                                            residual_value_basis,
                                            retries_auto_liq,
                                            retries_for_advice,
                                            revolving_type,
                                            rollover_allowed,
                                            rollover_with_interest,
                                            roll_by,
                                            rp_window_tenor,
                                            rp_window_unit,
                                            sale_conf,
                                            schedule_basis,
                                            schedule_movement,
                                            schedule_movement_mat_val_dt,
                                            secr_allowed,
                                            spl_int_accrual,
                                            status_for_gua_ac,
                                            std_tenor,
                                            supp_frequency_unit,
                                            supp_grace_period,
                                            tenor_unit,
                                            track_receivable,
                                            track_receivable_aliq,
                                            track_receivable_mliq,
                                            ude_rollover_basis,
                                            ude_tenor,
                                            ude_unit,
                                            uidb_ude,
                                            vami_action,
                                            vami_emi_type,
                                            yacr_freq)
         SELECT accrue_principal,
                acop_emi_type,
                acq_type,
                adhoc_hol_treatment_reqd,
                aliq_reversed_pmt,
                allow_back_period_entry,
                allow_recomp_of_sch,
                amend_past_paid_schedule,
                amort_reschedule_on_dsbr,
                apply_contract_hol_ccy,
                apply_contract_hol_ccy_mat,
                apply_facility_hol_ccy,
                apply_facility_hol_ccy_mat,
                apply_local_hol_ccy,
                apply_local_hol_ccy_mat,
                arrahnu_extension,
                assetccy,
                asset_type,
                atm_facility,
                auth_stat,
                auto_liqd_basis,
                auto_liqd_percent,
                auto_man_rollover,
                balloon_reqd,
                book_unearned_interest,
                branch_list,
                cap_on_nmlsch,
                cascade_schedules,
                ccy_list,
                checker_dt_stamp,
                checker_id,
                cheque_book_facility,
                cl_against_bill,
                consider_branch_holiday_mat,
                consider_branch_holiday_sch,
                contract_type,
                craj_entries_pref,
                creditdays,
                cuscat_list,
                cust_frequency_unit,
                cust_grace_period,
                days_for_cif_ac,
                days_for_gua_ac,
                default_from_metsch,
                disbursement_mode,
                draj_entries_pref,
                fa_product,
                grace_period_comp,
                hamish_jid_min_percen,
                handover_frequency,
                handover_unit,
                holiday_ccy_mat,
                holiday_ccy_sch,
                holiday_check,
                holiday_check_mat,
                holiday_default_basis,
                ic_product,
                ignore_holidays,
                ignore_holidays_mat_val_dt,
                insurance_flag,
                insurance_required,
                interest_only_period,
                interest_only_unit,
                interest_subsidy_allowed,
                int_stmt,
                inv_trkg_req,
                irr_recomp,
                lease_asset_booking,
                lease_payment_mode,
                lease_type,
                leasing_asset_required,
                limits_product,
                liquidation_mode,
                liq_back_val_sch_flag,
                liq_comp_dates_flag,
                loan_against_sal,
                maker_dt_stamp,
                maker_id,
                maxassetcost,
                maximum_rate_variance,
                max_tenor,
                minassetcost,
                min_emi_amount,
                min_emi_ccy,
                min_tenor,
                module_code,
                mod_no,
                move_across_month,
                move_across_month_mat_val_dt,
                multiple_asset,
                normal_rate_variance,
                notary_confirm_reqd,
                notice_day_basis,
                od_account_class,
                od_tracking_allowed,
                once_auth,
                open_line_loan,
                packing_credit,
                partial_liquidation,
                passbook_facility,
                prepayment_tbd_treatment,
                prepay_emi_type,
                prepmt_effective_from,
                product_category,
                product_code,
                product_desc,
                product_end_date,
                product_type,
                profita_calc,
                project_account,
                prop_handover,
                rate_chg_action,
                rate_code_pref,
                rate_type,
                rebate_reqd,
                recomputation_basis,
                record_stat,
                reference_no_format,
                rekey_down_payment,
                rekey_residual_value,
                residual_auto_liquidate,
                residual_subsidy_allowed,
                residual_value_basis,
                retries_auto_liq,
                retries_for_advice,
                revolving_type,
                rollover_allowed,
                rollover_with_interest,
                roll_by,
                rp_window_tenor,
                rp_window_unit,
                sale_conf,
                schedule_basis,
                schedule_movement,
                schedule_movement_mat_val_dt,
                secr_allowed,
                spl_int_accrual,
                status_for_gua_ac,
                std_tenor,
                supp_frequency_unit,
                supp_grace_period,
                tenor_unit,
                track_receivable,
                track_receivable_aliq,
                track_receivable_mliq,
                ude_rollover_basis,
                ude_tenor,
                ude_unit,
                uidb_ude,
                vami_action,
                vami_emi_type,
                yacr_freq
           FROM cltm_product@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;


   PROCEDURE prc_cstm_inst_master
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'CSTM INST DERIVE',
                   'CSTM_INST_MASTER',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_cstm_inst_master';

      INSERT INTO stglive.src_cstm_inst_master (auth_stat,
                                                branch_code,
                                                category,
                                                checker_dt_stamp,
                                                checker_id,
                                                customer_no,
                                                description,
                                                maker_dt_stamp,
                                                maker_id,
                                                memo_id,
                                                mod_no,
                                                once_auth,
                                                record_stat)
         SELECT auth_stat,
                branch_code,
                category,
                checker_dt_stamp,
                checker_id,
                customer_no,
                description,
                maker_dt_stamp,
                maker_id,
                memo_id,
                mod_no,
                once_auth,
                record_stat
           FROM cstm_inst_master@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;


   PROCEDURE prc_sttm_corp_directors
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'STTM CORP DERIVE',
                   'STTM_CORP_DIRECTORS',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_sttm_corp_directors';

      INSERT INTO stglive.src_sttm_corp_directors (address_line1,
                                                   address_line2,
                                                   address_line3,
                                                   address_line4,
                                                   addr_country,
                                                   customer_no,
                                                   director_name,
                                                   e_mail,
                                                   home_tel_isd,
                                                   home_tel_no,
                                                   mobile_number,
                                                   mob_isd_no,
                                                   nationality,
                                                   pct_holding,
                                                   pincode,
                                                   p_address1,
                                                   p_address2,
                                                   p_address3,
                                                   p_address4,
                                                   p_country,
                                                   p_pincode,
                                                   slno,
                                                   tax_id,
                                                   telephone,
                                                   tel_isd_no,
                                                   us_res_status)
         SELECT address_line1,
                address_line2,
                address_line3,
                address_line4,
                addr_country,
                customer_no,
                director_name,
                e_mail,
                home_tel_isd,
                home_tel_no,
                mobile_number,
                mob_isd_no,
                nationality,
                pct_holding,
                pincode,
                p_address1,
                p_address2,
                p_address3,
                p_address4,
                p_country,
                p_pincode,
                slno,
                tax_id,
                telephone,
                tel_isd_no,
                us_res_status
           FROM sttm_corp_directors@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_sttm_cust_corporate
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'STTM CUST DERIVE',
                   'STTM_CUST_CORPORATE',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_sttm_cust_corporate';

      INSERT INTO stglive.src_sttm_cust_corporate (amounts_ccy,
                                                   business_description,
                                                   capital,
                                                   corporate_name,
                                                   customer_no,
                                                   c_national_id,
                                                   incorp_country,
                                                   incorp_date,
                                                   networth,
                                                   ownership_type,
                                                   pref_contact_dt,
                                                   pref_contact_time,
                                                   r_address1,
                                                   r_address2,
                                                   r_address3,
                                                   r_address4,
                                                   r_country,
                                                   r_pincode)
         SELECT amounts_ccy,
                business_description,
                capital,
                corporate_name,
                customer_no,
                c_national_id,
                incorp_country,
                incorp_date,
                networth,
                ownership_type,
                pref_contact_dt,
                pref_contact_time,
                r_address1,
                r_address2,
                r_address3,
                r_address4,
                r_country,
                r_pincode
           FROM sttm_cust_corporate@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_sttm_cust_domestic
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'STTM CUST DOMESTIC DERIVE',
                   'STTM_CUST_DOMESTIC',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_sttm_cust_domestic';

      INSERT INTO stglive.src_sttm_cust_domestic (accomodation,
                                                  customer_no,
                                                  dependent_children,
                                                  dependent_others,
                                                  educational_status,
                                                  marital_status,
                                                  mother_maiden_name,
                                                  spouse_emp_status,
                                                  spouse_name)
         SELECT accomodation,
                customer_no,
                dependent_children,
                dependent_others,
                educational_status,
                marital_status,
                mother_maiden_name,
                spouse_emp_status,
                spouse_name
           FROM sttm_cust_domestic@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;


   PROCEDURE prc_cltb_account_apps_master
   AS
--      v_message          VARCHAR2 (4000);
--      v_rows_processed   NUMBER;
--      v_date             DATE;
--      v_seq              NUMBER;
--      v_rows_count       INTEGER;
--      v_sql              VARCHAR2 (10000);

 v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (32000);
      tab_cnt            integer;

   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;
      
      select case when today > trunc(sysdate) then prev_working_day else today end into v_date
      from src_sttm_dates where branch_code = '099';

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'CLTB ACCOUNT APPS DERIVE',
                   'CLTB_ACCOUNT_APPS_MASTER',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

--      EXECUTE IMMEDIATE 'truncate table src_cltb_account_apps_master';
--
--      INSERT /*+ append parallel */ INTO stglive.src_cltb_account_apps_master (
--                     account_number,
--                     branch_code,
--                     application_num,
--                     customer_id,
--                     product_code,
--                     product_category,
--                     book_date,
--                     value_date,
--                     maturity_date,
--                     amount_financed,
--                     downpayment_amount,
--                     currency,
--                     original_st_date,
--                     primary_applicant_id,
--                     primary_applicant_name,
--                     user_defined_status,
--                     calc_reqd,
--                     back_val_eff_dt,
--                     auto_man_rollover,
--                     schedule_basis,
--                     ude_rollover_basis,
--                     rollover_type,
--                     special_amount,
--                     rate_code_pref,
--                     passbook_facility,
--                     atm_facility,
--                     allow_back_period_entry,
--                     int_stmt,
--                     track_receivable_aliq,
--                     track_receivable_mliq,
--                     liquidation_mode,
--                     amend_past_paid_schedule,
--                     cheque_book_facility,
--                     liq_back_valued_schedules,
--                     liq_comp_dates_flag,
--                     retries_auto_liq,
--                     residual_amount,
--                     account_status,
--                     auth_stat,
--                     version_no,
--                     latest_esn,
--                     next_accr_date,
--                     has_problems,
--                     process_no,
--                     amount_disbursed,
--                     stop_accruals,
--                     funded_status,
--                     amortized,
--                     recalc_action_code,
--                     maker_id,
--                     maker_dt_stamp,
--                     checker_id,
--                     checker_dt_stamp,
--                     arvn_applied,
--                     alt_acc_no,
--                     partial_liquidation,
--                     aliq_reversed_pmt,
--                     no_of_installments,
--                     frequency,
--                     frequency_unit,
--                     first_ins_date,
--                     linked_reference,
--                     linkage_type,
--                     field_char_1,
--                     field_char_2,
--                     field_char_3,
--                     field_char_4,
--                     field_char_5,
--                     field_char_6,
--                     field_char_7,
--                     field_char_8,
--                     field_char_9,
--                     field_char_10,
--                     field_char_11,
--                     field_char_12,
--                     field_char_13,
--                     field_char_14,
--                     field_char_15,
--                     field_char_16,
--                     field_char_17,
--                     field_char_18,
--                     field_char_19,
--                     field_char_20,
--                     field_number_1,
--                     field_number_2,
--                     field_number_3,
--                     field_number_4,
--                     field_number_5,
--                     field_number_6,
--                     field_number_7,
--                     field_number_8,
--                     field_number_9,
--                     field_number_10,
--                     field_number_11,
--                     field_number_12,
--                     field_number_13,
--                     field_number_14,
--                     field_number_15,
--                     field_number_16,
--                     field_number_17,
--                     field_number_18,
--                     field_number_19,
--                     field_number_20,
--                     field_date_1,
--                     field_date_2,
--                     field_date_3,
--                     field_date_4,
--                     field_date_5,
--                     field_date_6,
--                     field_date_7,
--                     field_date_8,
--                     field_date_9,
--                     field_date_10,
--                     roll_by,
--                     maturity_type,
--                     net_principal,
--                     index_xrate,
--                     dr_payment_mode,
--                     cr_payment_mode,
--                     dr_prod_ac,
--                     cr_prod_ac,
--                     dr_acc_brn,
--                     cr_acc_brn,
--                     ext_acc_no_cr,
--                     ext_acc_name_cr,
--                     clg_bank_code_cr,
--                     clg_brn_code_cr,
--                     pc_cat_cr,
--                     ext_acc_no_dr,
--                     ext_acc_name_dr,
--                     clg_bank_code_dr,
--                     clg_brn_code_dr,
--                     pc_cat_dr,
--                     card_no,
--                     instrument_no_cr,
--                     routing_no_cr,
--                     end_point_cr,
--                     clg_prod_code_cr,
--                     sector_code_cr,
--                     instrument_no_dr,
--                     routing_no_dr,
--                     end_point_dr,
--                     clg_prod_code_dr,
--                     sector_code_dr,
--                     upload_source_dr,
--                     upload_source_cr,
--                     emi_amount,
--                     cutoff_transaction,
--                     delinquency_status,
--                     execution_date,
--                     migration_date,
--                     usgt_status,
--                     last_intraday_accr_dt,
--                     giro_mode_dr,
--                     giro_service_dr,
--                     giro_number_dr,
--                     payer_acc_no_dr,
--                     payer_bank_code_dr,
--                     payer_branch_dr,
--                     payer_address1_dr,
--                     payer_address2_dr,
--                     payer_address3_dr,
--                     payer_address4_dr,
--                     giro_mode_cr,
--                     giro_service_cr,
--                     giro_number_cr,
--                     payer_acc_no_cr,
--                     payer_bank_code_cr,
--                     payer_branch_cr,
--                     payer_address1_cr,
--                     payer_address2_cr,
--                     payer_address3_cr,
--                     payer_address4_cr,
--                     due_dates_on,
--                     user_ref_no,
--                     bill_ref_no,
--                     rollover_allowed,
--                     amt_available,
--                     commitment_type,
--                     loan_type,
--                     module_code,
--                     line_id,
--                     packing_credit,
--                     residual_value_basis,
--                     residual_value,
--                     residual_auto_liqd,
--                     lease_type,
--                     lease_payment_mode,
--                     subsidy_customer_id,
--                     interest_subsidy_allowed,
--                     residual_subsidy_allowed,
--                     residual_subsidy_value,
--                     supplier_id,
--                     fa_asset_ref_no,
--                     insurance_comp_code,
--                     derived_status,
--                     allow_bulk_paymnet,
--                     loan_to_value,
--                     stop_dsbr,
--                     mortgage_group,
--                     lease_extend_by,
--                     intermediary_initiated,
--                     intermediary_code,
--                     notary_auto_confirmed,
--                     recalc_annuity,
--                     loan_stmt_reqd,
--                     subsystemstat,
--                     emi_freq,
--                     min_emi,
--                     max_emi,
--                     emi_freq_unit,
--                     end_date,
--                     use_guarantor,
--                     loan_against_sal,
--                     amount_utilized,
--                     min_amt_due_rule,
--                     first_pay_by_date,
--                     creditdays,
--                     open_line_loan,
--                     revolving_type,
--                     book_unearned_interest,
--                     upfront_profit_booked,
--                     asset_cost,
--                     liqd_residual_value,
--                     dealer,
--                     princ_prev_accrual,
--                     fund_id,
--                     amort_reschedule_on_dsbr,
--                     amount_block_flag,
--                     amount_blocked,
--                     amount_block_remarks,
--                     insurance_flag,
--                     total_sale_value,
--                     uidb_calc_reqd,
--                     bank_share_percent,
--                     cust_share_percent,
--                     wakala_acc_no,
--                     staff_finance,
--                     future_dp_receivable,
--                     end_construct_dt,
--                     total_amount,
--                     allow_multiple_dp,
--                     uidb_nominal_amt,
--                     days_for_cif_ac,
--                     days_for_gua_ac,
--                     supp_grace_period,
--                     supp_frequency_unit,
--                     cust_grace_period,
--                     cust_frequency_unit,
--                     maturity_tenor,
--                     maturity_unit,
--                     allow_multi_party,
--                     post_const_uidb,
--                     balloon_amount,
--                     project_account,
--                     prop_handover,
--                     handover_date,
--                     handover_conf,
--                     insurance_financed,
--                     applicant_income,
--                     retries_advice_days,
--                     loan_stlmnt_noticeflg,
--                     notice_date,
--                     expected_closure_date,
--                     auto_close_collateral,
--                     arrahnu_extension,
--                     downpayment_percen,
--                     max_rnog,
--                     rnog_no,
--                     status_change_mode,
--                     secr_status,
--                     taken_over,
--                     asset_type,
--                     mur_cont_status,
--                     rate_chg_action,
--                     mfi_loan_type,
--                     sanctioning_officer,
--                     loan_disbursement_category)
--         SELECT account_number,
--                branch_code,
--                application_num,
--                customer_id,
--                product_code,
--                product_category,
--                book_date,
--                value_date,
--                maturity_date,
--                amount_financed,
--                downpayment_amount,
--                currency,
--                original_st_date,
--                primary_applicant_id,
--                primary_applicant_name,
--                user_defined_status,
--                calc_reqd,
--                back_val_eff_dt,
--                auto_man_rollover,
--                schedule_basis,
--                ude_rollover_basis,
--                rollover_type,
--                special_amount,
--                rate_code_pref,
--                passbook_facility,
--                atm_facility,
--                allow_back_period_entry,
--                int_stmt,
--                track_receivable_aliq,
--                track_receivable_mliq,
--                liquidation_mode,
--                amend_past_paid_schedule,
--                cheque_book_facility,
--                liq_back_valued_schedules,
--                liq_comp_dates_flag,
--                retries_auto_liq,
--                residual_amount,
--                account_status,
--                auth_stat,
--                version_no,
--                latest_esn,
--                next_accr_date,
--                has_problems,
--                process_no,
--                amount_disbursed,
--                stop_accruals,
--                funded_status,
--                amortized,
--                recalc_action_code,
--                maker_id,
--                maker_dt_stamp,
--                checker_id,
--                checker_dt_stamp,
--                arvn_applied,
--                alt_acc_no,
--                partial_liquidation,
--                aliq_reversed_pmt,
--                no_of_installments,
--                frequency,
--                frequency_unit,
--                first_ins_date,
--                linked_reference,
--                linkage_type,
--                field_char_1,
--                field_char_2,
--                field_char_3,
--                field_char_4,
--                field_char_5,
--                field_char_6,
--                field_char_7,
--                field_char_8,
--                field_char_9,
--                field_char_10,
--                field_char_11,
--                field_char_12,
--                field_char_13,
--                field_char_14,
--                field_char_15,
--                field_char_16,
--                field_char_17,
--                field_char_18,
--                field_char_19,
--                field_char_20,
--                field_number_1,
--                field_number_2,
--                field_number_3,
--                field_number_4,
--                field_number_5,
--                field_number_6,
--                field_number_7,
--                field_number_8,
--                field_number_9,
--                field_number_10,
--                field_number_11,
--                field_number_12,
--                field_number_13,
--                field_number_14,
--                field_number_15,
--                field_number_16,
--                field_number_17,
--                field_number_18,
--                field_number_19,
--                field_number_20,
--                field_date_1,
--                field_date_2,
--                field_date_3,
--                field_date_4,
--                field_date_5,
--                field_date_6,
--                field_date_7,
--                field_date_8,
--                field_date_9,
--                field_date_10,
--                roll_by,
--                maturity_type,
--                net_principal,
--                index_xrate,
--                dr_payment_mode,
--                cr_payment_mode,
--                dr_prod_ac,
--                cr_prod_ac,
--                dr_acc_brn,
--                cr_acc_brn,
--                ext_acc_no_cr,
--                ext_acc_name_cr,
--                clg_bank_code_cr,
--                clg_brn_code_cr,
--                pc_cat_cr,
--                ext_acc_no_dr,
--                ext_acc_name_dr,
--                clg_bank_code_dr,
--                clg_brn_code_dr,
--                pc_cat_dr,
--                card_no,
--                instrument_no_cr,
--                routing_no_cr,
--                end_point_cr,
--                clg_prod_code_cr,
--                sector_code_cr,
--                instrument_no_dr,
--                routing_no_dr,
--                end_point_dr,
--                clg_prod_code_dr,
--                sector_code_dr,
--                upload_source_dr,
--                upload_source_cr,
--                emi_amount,
--                cutoff_transaction,
--                delinquency_status,
--                execution_date,
--                migration_date,
--                usgt_status,
--                last_intraday_accr_dt,
--                giro_mode_dr,
--                giro_service_dr,
--                giro_number_dr,
--                payer_acc_no_dr,
--                payer_bank_code_dr,
--                payer_branch_dr,
--                payer_address1_dr,
--                payer_address2_dr,
--                payer_address3_dr,
--                payer_address4_dr,
--                giro_mode_cr,
--                giro_service_cr,
--                giro_number_cr,
--                payer_acc_no_cr,
--                payer_bank_code_cr,
--                payer_branch_cr,
--                payer_address1_cr,
--                payer_address2_cr,
--                payer_address3_cr,
--                payer_address4_cr,
--                due_dates_on,
--                user_ref_no,
--                bill_ref_no,
--                rollover_allowed,
--                amt_available,
--                commitment_type,
--                loan_type,
--                module_code,
--                line_id,
--                packing_credit,
--                residual_value_basis,
--                residual_value,
--                residual_auto_liqd,
--                lease_type,
--                lease_payment_mode,
--                subsidy_customer_id,
--                interest_subsidy_allowed,
--                residual_subsidy_allowed,
--                residual_subsidy_value,
--                supplier_id,
--                fa_asset_ref_no,
--                insurance_comp_code,
--                derived_status,
--                allow_bulk_paymnet,
--                loan_to_value,
--                stop_dsbr,
--                mortgage_group,
--                lease_extend_by,
--                intermediary_initiated,
--                intermediary_code,
--                notary_auto_confirmed,
--                recalc_annuity,
--                loan_stmt_reqd,
--                subsystemstat,
--                emi_freq,
--                min_emi,
--                max_emi,
--                emi_freq_unit,
--                end_date,
--                use_guarantor,
--                loan_against_sal,
--                amount_utilized,
--                min_amt_due_rule,
--                first_pay_by_date,
--                creditdays,
--                open_line_loan,
--                revolving_type,
--                book_unearned_interest,
--                upfront_profit_booked,
--                asset_cost,
--                liqd_residual_value,
--                dealer,
--                princ_prev_accrual,
--                fund_id,
--                amort_reschedule_on_dsbr,
--                amount_block_flag,
--                amount_blocked,
--                amount_block_remarks,
--                insurance_flag,
--                total_sale_value,
--                uidb_calc_reqd,
--                bank_share_percent,
--                cust_share_percent,
--                wakala_acc_no,
--                staff_finance,
--                future_dp_receivable,
--                end_construct_dt,
--                total_amount,
--                allow_multiple_dp,
--                uidb_nominal_amt,
--                days_for_cif_ac,
--                days_for_gua_ac,
--                supp_grace_period,
--                supp_frequency_unit,
--                cust_grace_period,
--                cust_frequency_unit,
--                maturity_tenor,
--                maturity_unit,
--                allow_multi_party,
--                post_const_uidb,
--                balloon_amount,
--                project_account,
--                prop_handover,
--                handover_date,
--                handover_conf,
--                insurance_financed,
--                applicant_income,
--                retries_advice_days,
--                loan_stlmnt_noticeflg,
--                notice_date,
--                expected_closure_date,
--                auto_close_collateral,
--                arrahnu_extension,
--                downpayment_percen,
--                max_rnog,
--                rnog_no,
--                status_change_mode,
--                secr_status,
--                taken_over,
--                asset_type,
--                mur_cont_status,
--                rate_chg_action,
--                mfi_loan_type,
--                sanctioning_officer,
--                loan_disbursement_category
--           FROM cltb_account_apps_master@loc_fcubslive;
--
--      v_rows_processed := SQL%ROWCOUNT;

 begin
        select count(*) into tab_cnt from sys.all_tables where lower(table_name)='tmp_cltb_app_master' and owner = 'STGLIVE';
        EXCEPTION
        WHEN NO_DATA_FOUND THEN
            tab_cnt:=0;
      end;
      if(tab_cnt)=1 Then
        execute immediate 'drop table tmp_cltb_app_master';
      v_sql := 'create table tmp_cltb_app_master as  select /*+ PARALLEL(auto) */ account_number,
                branch_code,
                application_num,
                customer_id,
                product_code,
                product_category,
                book_date,
                value_date,
                maturity_date,
                amount_financed,
                downpayment_amount,
                currency,
                original_st_date,
                primary_applicant_id,
                primary_applicant_name,
                user_defined_status,
                calc_reqd,
                back_val_eff_dt,
                auto_man_rollover,
                schedule_basis,
                ude_rollover_basis,
                rollover_type,
                special_amount,
                rate_code_pref,
                passbook_facility,
                atm_facility,
                allow_back_period_entry,
                int_stmt,
                track_receivable_aliq,
                track_receivable_mliq,
                liquidation_mode,
                amend_past_paid_schedule,
                cheque_book_facility,
                liq_back_valued_schedules,
                liq_comp_dates_flag,
                retries_auto_liq,
                residual_amount,
                account_status,
                auth_stat,
                version_no,
                latest_esn,
                next_accr_date,
                has_problems,
                process_no,
                amount_disbursed,
                stop_accruals,
                funded_status,
                amortized,
                recalc_action_code,
                maker_id,
                maker_dt_stamp,
                checker_id,
                checker_dt_stamp,
                arvn_applied,
                alt_acc_no,
                partial_liquidation,
                aliq_reversed_pmt,
                no_of_installments,
                frequency,
                frequency_unit,
                first_ins_date,
                linked_reference,
                linkage_type,
                field_char_1,
                field_char_2,
                field_char_3,
                field_char_4,
                field_char_5,
                field_char_6,
                field_char_7,
                field_char_8,
                field_char_9,
                field_char_10,
                field_char_11,
                field_char_12,
                field_char_13,
                field_char_14,
                field_char_15,
                field_char_16,
                field_char_17,
                field_char_18,
                field_char_19,
                field_char_20,
                field_number_1,
                field_number_2,
                field_number_3,
                field_number_4,
                field_number_5,
                field_number_6,
                field_number_7,
                field_number_8,
                field_number_9,
                field_number_10,
                field_number_11,
                field_number_12,
                field_number_13,
                field_number_14,
                field_number_15,
                field_number_16,
                field_number_17,
                field_number_18,
                field_number_19,
                field_number_20,
                field_date_1,
                field_date_2,
                field_date_3,
                field_date_4,
                field_date_5,
                field_date_6,
                field_date_7,
                field_date_8,
                field_date_9,
                field_date_10,
                roll_by,
                maturity_type,
                net_principal,
                index_xrate,
                dr_payment_mode,
                cr_payment_mode,
                dr_prod_ac,
                cr_prod_ac,
                dr_acc_brn,
                cr_acc_brn,
                ext_acc_no_cr,
                ext_acc_name_cr,
                clg_bank_code_cr,
                clg_brn_code_cr,
                pc_cat_cr,
                ext_acc_no_dr,
                ext_acc_name_dr,
                clg_bank_code_dr,
                clg_brn_code_dr,
                pc_cat_dr,
                card_no,
                instrument_no_cr,
                routing_no_cr,
                end_point_cr,
                clg_prod_code_cr,
                sector_code_cr,
                instrument_no_dr,
                routing_no_dr,
                end_point_dr,
                clg_prod_code_dr,
                sector_code_dr,
                upload_source_dr,
                upload_source_cr,
                emi_amount,
                cutoff_transaction,
                delinquency_status,
                execution_date,
                migration_date,
                usgt_status,
                last_intraday_accr_dt,
                giro_mode_dr,
                giro_service_dr,
                giro_number_dr,
                payer_acc_no_dr,
                payer_bank_code_dr,
                payer_branch_dr,
                payer_address1_dr,
                payer_address2_dr,
                payer_address3_dr,
                payer_address4_dr,
                giro_mode_cr,
                giro_service_cr,
                giro_number_cr,
                payer_acc_no_cr,
                payer_bank_code_cr,
                payer_branch_cr,
                payer_address1_cr,
                payer_address2_cr,
                payer_address3_cr,
                payer_address4_cr,
                due_dates_on,
                user_ref_no,
                bill_ref_no,
                rollover_allowed,
                amt_available,
                commitment_type,
                loan_type,
                module_code,
                line_id,
                packing_credit,
                residual_value_basis,
                residual_value,
                residual_auto_liqd,
                lease_type,
                lease_payment_mode,
                subsidy_customer_id,
                interest_subsidy_allowed,
                residual_subsidy_allowed,
                residual_subsidy_value,
                supplier_id,
                fa_asset_ref_no,
                insurance_comp_code,
                derived_status,
                allow_bulk_paymnet,
                loan_to_value,
                stop_dsbr,
                mortgage_group,
                lease_extend_by,
                intermediary_initiated,
                intermediary_code,
                notary_auto_confirmed,
                recalc_annuity,
                loan_stmt_reqd,
                subsystemstat,
                emi_freq,
                min_emi,
                max_emi,
                emi_freq_unit,
                end_date,
                use_guarantor,
                loan_against_sal,
                amount_utilized,
                min_amt_due_rule,
                first_pay_by_date,
                creditdays,
                open_line_loan,
                revolving_type,
                book_unearned_interest,
                upfront_profit_booked,
                asset_cost,
                liqd_residual_value,
                dealer,
                princ_prev_accrual,
                fund_id,
                amort_reschedule_on_dsbr,
                amount_block_flag,
                amount_blocked,
                amount_block_remarks,
                insurance_flag,
                total_sale_value,
                uidb_calc_reqd,
                bank_share_percent,
                cust_share_percent,
                wakala_acc_no,
                staff_finance,
                future_dp_receivable,
                end_construct_dt,
                total_amount,
                allow_multiple_dp,
                uidb_nominal_amt,
                days_for_cif_ac,
                days_for_gua_ac,
                supp_grace_period,
                supp_frequency_unit,
                cust_grace_period,
                cust_frequency_unit,
                maturity_tenor,
                maturity_unit,
                allow_multi_party,
                post_const_uidb,
                balloon_amount,
                project_account,
                prop_handover,
                handover_date,
                handover_conf,
                insurance_financed,
                applicant_income,
                retries_advice_days,
                loan_stlmnt_noticeflg,
                notice_date,
                expected_closure_date,
                auto_close_collateral,
                arrahnu_extension,
                downpayment_percen,
                max_rnog,
                rnog_no,
                status_change_mode,
                secr_status,
                taken_over,
                asset_type,
                mur_cont_status,
                rate_chg_action,
                mfi_loan_type,
                sanctioning_officer,
                loan_disbursement_category,
                '||1||' qset
           FROM cltb_account_apps_master@loc_fcubslive';
           EXECUTE IMMEDIATE v_sql;
           v_rows_processed := SQL%ROWCOUNT;
      else 
      v_sql := 'create table tmp_cltb_app_master as  select /*+ PARALLEL(auto) */ account_number,
                branch_code,
                application_num,
                customer_id,
                product_code,
                product_category,
                book_date,
                value_date,
                maturity_date,
                amount_financed,
                downpayment_amount,
                currency,
                original_st_date,
                primary_applicant_id,
                primary_applicant_name,
                user_defined_status,
                calc_reqd,
                back_val_eff_dt,
                auto_man_rollover,
                schedule_basis,
                ude_rollover_basis,
                rollover_type,
                special_amount,
                rate_code_pref,
                passbook_facility,
                atm_facility,
                allow_back_period_entry,
                int_stmt,
                track_receivable_aliq,
                track_receivable_mliq,
                liquidation_mode,
                amend_past_paid_schedule,
                cheque_book_facility,
                liq_back_valued_schedules,
                liq_comp_dates_flag,
                retries_auto_liq,
                residual_amount,
                account_status,
                auth_stat,
                version_no,
                latest_esn,
                next_accr_date,
                has_problems,
                process_no,
                amount_disbursed,
                stop_accruals,
                funded_status,
                amortized,
                recalc_action_code,
                maker_id,
                maker_dt_stamp,
                checker_id,
                checker_dt_stamp,
                arvn_applied,
                alt_acc_no,
                partial_liquidation,
                aliq_reversed_pmt,
                no_of_installments,
                frequency,
                frequency_unit,
                first_ins_date,
                linked_reference,
                linkage_type,
                field_char_1,
                field_char_2,
                field_char_3,
                field_char_4,
                field_char_5,
                field_char_6,
                field_char_7,
                field_char_8,
                field_char_9,
                field_char_10,
                field_char_11,
                field_char_12,
                field_char_13,
                field_char_14,
                field_char_15,
                field_char_16,
                field_char_17,
                field_char_18,
                field_char_19,
                field_char_20,
                field_number_1,
                field_number_2,
                field_number_3,
                field_number_4,
                field_number_5,
                field_number_6,
                field_number_7,
                field_number_8,
                field_number_9,
                field_number_10,
                field_number_11,
                field_number_12,
                field_number_13,
                field_number_14,
                field_number_15,
                field_number_16,
                field_number_17,
                field_number_18,
                field_number_19,
                field_number_20,
                field_date_1,
                field_date_2,
                field_date_3,
                field_date_4,
                field_date_5,
                field_date_6,
                field_date_7,
                field_date_8,
                field_date_9,
                field_date_10,
                roll_by,
                maturity_type,
                net_principal,
                index_xrate,
                dr_payment_mode,
                cr_payment_mode,
                dr_prod_ac,
                cr_prod_ac,
                dr_acc_brn,
                cr_acc_brn,
                ext_acc_no_cr,
                ext_acc_name_cr,
                clg_bank_code_cr,
                clg_brn_code_cr,
                pc_cat_cr,
                ext_acc_no_dr,
                ext_acc_name_dr,
                clg_bank_code_dr,
                clg_brn_code_dr,
                pc_cat_dr,
                card_no,
                instrument_no_cr,
                routing_no_cr,
                end_point_cr,
                clg_prod_code_cr,
                sector_code_cr,
                instrument_no_dr,
                routing_no_dr,
                end_point_dr,
                clg_prod_code_dr,
                sector_code_dr,
                upload_source_dr,
                upload_source_cr,
                emi_amount,
                cutoff_transaction,
                delinquency_status,
                execution_date,
                migration_date,
                usgt_status,
                last_intraday_accr_dt,
                giro_mode_dr,
                giro_service_dr,
                giro_number_dr,
                payer_acc_no_dr,
                payer_bank_code_dr,
                payer_branch_dr,
                payer_address1_dr,
                payer_address2_dr,
                payer_address3_dr,
                payer_address4_dr,
                giro_mode_cr,
                giro_service_cr,
                giro_number_cr,
                payer_acc_no_cr,
                payer_bank_code_cr,
                payer_branch_cr,
                payer_address1_cr,
                payer_address2_cr,
                payer_address3_cr,
                payer_address4_cr,
                due_dates_on,
                user_ref_no,
                bill_ref_no,
                rollover_allowed,
                amt_available,
                commitment_type,
                loan_type,
                module_code,
                line_id,
                packing_credit,
                residual_value_basis,
                residual_value,
                residual_auto_liqd,
                lease_type,
                lease_payment_mode,
                subsidy_customer_id,
                interest_subsidy_allowed,
                residual_subsidy_allowed,
                residual_subsidy_value,
                supplier_id,
                fa_asset_ref_no,
                insurance_comp_code,
                derived_status,
                allow_bulk_paymnet,
                loan_to_value,
                stop_dsbr,
                mortgage_group,
                lease_extend_by,
                intermediary_initiated,
                intermediary_code,
                notary_auto_confirmed,
                recalc_annuity,
                loan_stmt_reqd,
                subsystemstat,
                emi_freq,
                min_emi,
                max_emi,
                emi_freq_unit,
                end_date,
                use_guarantor,
                loan_against_sal,
                amount_utilized,
                min_amt_due_rule,
                first_pay_by_date,
                creditdays,
                open_line_loan,
                revolving_type,
                book_unearned_interest,
                upfront_profit_booked,
                asset_cost,
                liqd_residual_value,
                dealer,
                princ_prev_accrual,
                fund_id,
                amort_reschedule_on_dsbr,
                amount_block_flag,
                amount_blocked,
                amount_block_remarks,
                insurance_flag,
                total_sale_value,
                uidb_calc_reqd,
                bank_share_percent,
                cust_share_percent,
                wakala_acc_no,
                staff_finance,
                future_dp_receivable,
                end_construct_dt,
                total_amount,
                allow_multiple_dp,
                uidb_nominal_amt,
                days_for_cif_ac,
                days_for_gua_ac,
                supp_grace_period,
                supp_frequency_unit,
                cust_grace_period,
                cust_frequency_unit,
                maturity_tenor,
                maturity_unit,
                allow_multi_party,
                post_const_uidb,
                balloon_amount,
                project_account,
                prop_handover,
                handover_date,
                handover_conf,
                insurance_financed,
                applicant_income,
                retries_advice_days,
                loan_stlmnt_noticeflg,
                notice_date,
                expected_closure_date,
                auto_close_collateral,
                arrahnu_extension,
                downpayment_percen,
                max_rnog,
                rnog_no,
                status_change_mode,
                secr_status,
                taken_over,
                asset_type,
                mur_cont_status,
                rate_chg_action,
                mfi_loan_type,
                sanctioning_officer,
                loan_disbursement_category,
                '||1||' qset
           FROM cltb_account_apps_master@loc_fcubslive';
           EXECUTE IMMEDIATE v_sql;
           v_rows_processed := SQL%ROWCOUNT;
           end if;
           --REV_CLTB_ACCOUNT_APP_MASTER
           
           
           
           /**CODE BELOW FIXED --- ORA-14130 UNIQUE constraints mismatch in ALTER TABLE EXCHANGE PARTITION**/
           
           execute immediate 'ALTER TABLE tmp_cltb_app_master ADD (
  CONSTRAINT PK_CL_ACNT_APP_MASTER11
  PRIMARY KEY
  (ACCOUNT_NUMBER, BRANCH_CODE))';
  
  
           
           execute immediate 'alter table stglive.src_cltb_account_apps_master 
                    exchange partition P' ||to_number(10)|| ' with table tmp_cltb_app_master';
                    
                    prc_index_rebuild('IDX_ACC_BATCH1');
                    prc_index_rebuild('IDX_APPNUM1');
                    prc_index_rebuild('PK_CL_ACNT_APP_MASTER1');
                    prc_index_rebuild('IDX_CUSTID1');
                    prc_index_rebuild('IDX_CLALTACC1');
                    commit;


      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_cytm_rates
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE;
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;
      
      select case when today > trunc(sysdate) then prev_working_day else today end into v_date
      from src_sttm_dates where branch_code = '099';

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'CYTM RATES DERIVE',
                   'CYTM_RATES',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_cytm_rates';

      INSERT INTO stglive.src_cytm_rates (branch_code,
                                          ccy1,
                                          ccy2,
                                          rate_type,
                                          mid_rate,
                                          buy_spread,
                                          sale_spread,
                                          buy_rate,
                                          sale_rate,
                                          unauth_mid_rate,
                                          unauth_buy_spread,
                                          unauth_sale_spread,
                                          unauth_buy_rate,
                                          unauth_sale_rate,
                                          int_auth_stat,
                                          rate_date,
                                          rate_serial)
         SELECT branch_code,
                ccy1,
                ccy2,
                rate_type,
                mid_rate,
                buy_spread,
                sale_spread,
                buy_rate,
                sale_rate,
                unauth_mid_rate,
                unauth_buy_spread,
                unauth_sale_spread,
                unauth_buy_rate,
                unauth_sale_rate,
                int_auth_stat,
                rate_date,
                rate_serial
           FROM cytm_rates@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_cltb_acct_comp_bal_brkup
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE;
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;
      
      select case when today > trunc(sysdate) then prev_working_day else today end into v_date
      from src_sttm_dates where branch_code = '099';

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'CLTB ACCT COMP BAL BRKUP DERIVE',
                   'CLTB_ACCT_COMP_BAL_BRKUP',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_cltb_acct_comp_bal_brkup';

      INSERT INTO stglive.src_cltb_acct_comp_bal_brkup (account_number,
                                                        branch_code,
                                                        component,
                                                        gl_code,
                                                        gl_type,
                                                        balance,
                                                        lcy_balance,
                                                        creation_date,
                                                        status_code,
                                                        severity_level,
                                                        cont_offset_gl,
                                                        balance_flag,
                                                        gaap_indicator)
         SELECT account_number,
                branch_code,
                component,
                gl_code,
                gl_type,
                balance,
                lcy_balance,
                creation_date,
                status_code,
                severity_level,
                cont_offset_gl,
                balance_flag,
                gaap_indicator
           FROM cltb_account_comp_bal_breakup@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_cltb_account_ude_values
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE;
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;
      
      select case when today > trunc(sysdate) then prev_working_day else today end into v_date
      from src_sttm_dates where branch_code = '099';

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'CLTB ACCOUNT UDE VALUES DERIVE',
                   'CLTB_ACCOUNT_UDE_VALUES',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_cltb_account_ude_values';

      INSERT INTO stglive.src_cltb_account_ude_values (account_number,
                                                       branch_code,
                                                       effective_date,
                                                       ude_id,
                                                       ude_value,
                                                       rate_code,
                                                       code_usage,
                                                       maint_rslv_flag,
                                                       resolved_value)
         SELECT account_number,
                branch_code,
                effective_date,
                ude_id,
                ude_value,
                rate_code,
                code_usage,
                maint_rslv_flag,
                resolved_value
           FROM cltb_account_ude_values@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_cltm_product_rth
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE;
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;
      
      select case when today > trunc(sysdate) then prev_working_day else today end into v_date
      from src_sttm_dates where branch_code = '099';

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'CLTM PRODUCT RTH DERIVE',
                   'CLTM_PRODUCT_RTH',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_cltm_product_rth';

      INSERT INTO stglive.src_cltm_product_rth (product_code,
                                                map_type,
                                                accounting_role,
                                                role_type,
                                                account_head,
                                                role_desc,
                                                head_desc)
         SELECT product_code,
                map_type,
                accounting_role,
                role_type,
                account_head,
                role_desc,
                head_desc
           FROM cltm_product_rth@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_ictb_entries_history
   AS
   --
   --v_message           varchar2(4000);
   --v_rows_processed    number;
   --v_date              date := trunc(sysdate);
   --v_seq               number;
   --v_rows_count        integer;
   --v_sql               varchar2(10000);
   --
   --
   BEGIN
      NULL;
   --
   --  select process_seq.nextval into v_seq from dual;
   --
   --  insert into fcubs_process_log(process_sequence, process_type, process_name, reference_date, status, message, row_count, start_date, end_date, duration)
   --   values (v_seq, 'ICTB ENTRIES HISTORY DERIVE','ICTB_ENTRIES_HISTORY', v_date, 'STARTED', null, 0, sysdate, null, null);
   --
   --  commit;
   --
   --
   --  execute immediate 'truncate table src_ictb_entries_history';
   --
   --  insert /*+ append parallel */into stglive.src_ictb_entries_history(brn, acc, prod, frm_no, ent_dt, amt, accrued_amt, amt_to_accrue, cur_run_accr, run_date, accr, liqn, entry_type,
   --                                       ccy, lcy_amt, last_cur_run_accr, cur_run_accr_lcy, drcr, entry_passed, process)
   --  select   brn, acc, prod, frm_no, ent_dt, amt, accrued_amt, amt_to_accrue, cur_run_accr, run_date, accr, liqn, entry_type,
   --           ccy, lcy_amt, last_cur_run_accr, cur_run_accr_lcy, drcr, entry_passed, process
   --    from ictb_entries_history@loc_fcubslive;
   --
   --      v_rows_processed := sql%rowcount;
   --
   --  update fcubs_process_log
   --     set status     = 'COMPLETED',
   --         message    = 'SUCCESS',
   --         row_count  = v_rows_processed,
   --         end_date   = sysdate,
   --         duration   = (sysdate - start_date)  * 24 * 3600
   --   where process_sequence = v_seq;
   --
   --  commit;
   --
   --  exception when others then
   --  v_message := substr(sqlerrm,1,200);
   --
   --  update fcubs_process_log
   --    set status     = 'FAILED',
   --        message    = v_message,
   --        row_count  = 0,
   --        end_date   = sysdate,
   --        duration   = (sysdate - start_date)  * 24 * 3600
   --    where process_sequence = v_seq;
   --  commit;
   --
   END;

   --
   PROCEDURE prc_tdvw_td_details
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'TDVW TD DETAILS DERIVE',
                   'TDVW_TD_DETAILS',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_tdvw_td_details';

      INSERT INTO stglive.src_tdvw_td_details (branch_code,
                                               account_no,
                                               customer_no,
                                               customer_name,
                                               short_name,
                                               date_of_open,
                                               value_date,
                                               interest_start_date,
                                               deposit_amount,
                                               deposit_term,
                                               td_maturity_date,
                                               maturity_amount,
                                               interest_rate,
                                               branch_name,
                                               total_interest_payable,
                                               projected_interest,
                                               close_on_maturity,
                                               product_code,
                                               product_title,
                                               deposit_currency,
                                               stock_catlog_cd,
                                               certificate_no,
                                               duplicate_issue,
                                               currency_total,
                                               auto_rollover,
                                               record_stat,
                                               checker_dt,
                                               intrate_cumamt_reqd,
                                               mudarabah_accounts)
         SELECT branch_code,
                account_no,
                customer_no,
                customer_name,
                short_name,
                date_of_open,
                value_date,
                interest_start_date,
                deposit_amount,
                deposit_term,
                td_maturity_date,
                maturity_amount,
                interest_rate,
                branch_name,
                total_interest_payable,
                projected_interest,
                close_on_maturity,
                product_code,
                product_title,
                deposit_currency,
                stock_catlog_cd,
                certificate_no,
                duplicate_issue,
                currency_total,
                auto_rollover,
                record_stat,
                checker_dt,
                intrate_cumamt_reqd,
                mudarabah_accounts
           FROM tdvw_td_details@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   /*procedure prc_istm_instr_txn as

   v_message           varchar2(4000);
   v_rows_processed    number;
   v_date              date := trunc(sysdate);
   v_seq               number;
   v_rows_count        integer;
   v_sql               varchar2(10000);


   begin

     select process_seq.nextval into v_seq from dual;

     insert into fcubs_process_log(process_sequence, process_type, process_name, reference_date, status, message, row_count, start_date, end_date, duration)
      values (v_seq, 'ISTMS INSTR TXN DERIVE','ISTMS_INSTR_TXN', v_date, 'STARTED', null, 0, sysdate, null, null);

     commit;


     execute immediate 'truncate table src_istms_instr_txn';

     insert into stglive.src_istm_instr_txn(contract_ref_no, version_no, event_seq_no, issuing_branch, payable_branch, product_code, instr_type, instr_stat,
                                     instr_ccy, instr_amount, instr_date, instr_no, dd_micr_no, ac_branch, ac_no, ac_ccy, exch_rate, acy_amount, lcy_amount,
                                     rel_customer, benef_name, benef_addr_1, benef_addr_2, benef_addr_3, benef_addr_4, benef_addr_5, identifier_name_1,
                                     identifier_value_1, identifier_name_2, identifier_value_2, identifier_name_3, identifier_value_3, identifier_name_4,
                                     identifier_value_4, identifier_name_5, identifier_value_5, identifier_name_6, identifier_value_6, narrative, maker_id,
                                     maker_dt_stamp, checker_id, checker_dt_stamp, record_stat, auth_stat, once_auth, mod_no, charge_account, chg_gl, chg_ccy,
                                     chg_amt, chg_in_acy, chg_in_lcy, chg_ccy_acy_rate, acy_lcy_rate, netting_ind, txn_code, mis_head_1, chg_gl_1, chg_ccy_1,
                                     chg_amt_1, chg_in_acy_1, chg_in_lcy_1, chg_ccy_acy_rate_1, acy_lcy_rate_1, netting_ind_1, txn_code_1, mis_head_2,
                                     chg_gl_2, chg_ccy_2, chg_amt_2, chg_in_acy_2, chg_in_lcy_2, chg_ccy_acy_rate_2, acy_lcy_rate_2, netting_ind_2,
                                     txn_code_2, mis_head_3, chg_gl_3, chg_ccy_3, chg_amt_3, chg_in_acy_3, chg_in_lcy_3, chg_ccy_acy_rate_3, acy_lcy_rate_3,
                                     netting_ind_3, txn_code_3, mis_head_4, chg_gl_4, chg_ccy_4, chg_amt_4, chg_in_acy_4, chg_in_lcy_4, chg_ccy_acy_rate_4,
                                     acy_lcy_rate_4, netting_ind_4, txn_code_4, mis_head_5, print_stat, expiry_date, print_copy, payable_bank, ofs_acc,
                                     ofs_ccy, ofs_amount, ofs_branch, ssn, reissued, org_draft_no, reissue_remarks, reissued_draft_no, scode, xref, trn_dt,
                                     ben_account, ben_cust, ben_ccy, discount_days, their_acc, their_acc1, their_acc2, their_acc3, their_acc4, chg_type,
                                     chg_type1, chg_type2, chg_type3, chg_type4, waiver, waiver1, waiver2, waiver3, waiver4, lcy_chg_exch_rate,
                                     lcy_chg_exch_rate1, lcy_chg_exch_rate2, lcy_chg_exch_rate3, lcy_chg_exch_rate4, chg_desc, chg_desc1, chg_desc2,
                                     chg_desc3, chg_desc4, txn_tanked, issuer_code, country_code, delivery_mode, delivery_add1, delivery_add2, delivery_add3,
                                     delivery_add4, cheque_no, payout_chg, payment_mode, old_dd_micr_no, remarks, reval_freq_days, reval_freq_months,
                                     reval_freq_years, old_instr_no, batch_no, charge_ccy, revalidated, duplicate, manual_input)
     select  contract_ref_no, version_no, event_seq_no, issuing_branch, payable_branch, product_code, instr_type, instr_stat,
             instr_ccy, instr_amount, instr_date, instr_no, dd_micr_no, ac_branch, ac_no, ac_ccy, exch_rate, acy_amount, lcy_amount,
             rel_customer, benef_name, benef_addr_1, benef_addr_2, benef_addr_3, benef_addr_4, benef_addr_5, identifier_name_1,
             identifier_value_1, identifier_name_2, identifier_value_2, identifier_name_3, identifier_value_3, identifier_name_4,
             identifier_value_4, identifier_name_5, identifier_value_5, identifier_name_6, identifier_value_6, narrative, maker_id,
             maker_dt_stamp, checker_id, checker_dt_stamp, record_stat, auth_stat, once_auth, mod_no, charge_account, chg_gl, chg_ccy,
             chg_amt, chg_in_acy, chg_in_lcy, chg_ccy_acy_rate, acy_lcy_rate, netting_ind, txn_code, mis_head_1, chg_gl_1, chg_ccy_1,
             chg_amt_1, chg_in_acy_1, chg_in_lcy_1, chg_ccy_acy_rate_1, acy_lcy_rate_1, netting_ind_1, txn_code_1, mis_head_2,
             chg_gl_2, chg_ccy_2, chg_amt_2, chg_in_acy_2, chg_in_lcy_2, chg_ccy_acy_rate_2, acy_lcy_rate_2, netting_ind_2,
             txn_code_2, mis_head_3, chg_gl_3, chg_ccy_3, chg_amt_3, chg_in_acy_3, chg_in_lcy_3, chg_ccy_acy_rate_3, acy_lcy_rate_3,
             netting_ind_3, txn_code_3, mis_head_4, chg_gl_4, chg_ccy_4, chg_amt_4, chg_in_acy_4, chg_in_lcy_4, chg_ccy_acy_rate_4,
             acy_lcy_rate_4, netting_ind_4, txn_code_4, mis_head_5, print_stat, expiry_date, print_copy, payable_bank, ofs_acc,
             ofs_ccy, ofs_amount, ofs_branch, ssn, reissued, org_draft_no, reissue_remarks, reissued_draft_no, scode, xref, trn_dt,
             ben_account, ben_cust, ben_ccy, discount_days, their_acc, their_acc1, their_acc2, their_acc3, their_acc4, chg_type,
             chg_type1, chg_type2, chg_type3, chg_type4, waiver, waiver1, waiver2, waiver3, waiver4, lcy_chg_exch_rate,
             lcy_chg_exch_rate1, lcy_chg_exch_rate2, lcy_chg_exch_rate3, lcy_chg_exch_rate4, chg_desc, chg_desc1, chg_desc2,
             chg_desc3, chg_desc4, txn_tanked, issuer_code, country_code, delivery_mode, delivery_add1, delivery_add2, delivery_add3,
             delivery_add4, cheque_no, payout_chg, payment_mode, old_dd_micr_no, remarks, reval_freq_days, reval_freq_months,
             reval_freq_years, old_instr_no, batch_no, charge_ccy, revalidated, duplicate, manual_input
       from    istm_instr_txn@loc_fcubslive;

         v_rows_processed := sql%rowcount;

     update fcubs_process_log
        set status     = 'COMPLETED',
            message    = 'SUCCESS',
            row_count  = v_rows_processed,
            end_date   = sysdate,
            duration   = (sysdate - start_date)  * 24 * 3600
      where process_sequence = v_seq;

     commit;

     exception when others then
     v_message := substr(sqlerrm,1,200);

     update fcubs_process_log
       set status     = 'FAILED',
           message    = v_message,
           row_count  = 0,
           end_date   = sysdate,
           duration   = (sysdate - start_date)  * 24 * 3600
       where process_sequence = v_seq;
     commit;

     end;*/

   PROCEDURE prc_actb_funcol
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE;
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;
      
      select case when today > trunc(sysdate) then prev_working_day else today end into v_date
      from src_sttm_dates where branch_code = '099';

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'ACTB FUNCOL DERIVE',
                   'ACTB_FUNCOL',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_actb_funcol';

      INSERT INTO stglive.src_actb_funcol (branch,
                                           account,
                                           availabledate,
                                           trnrefno,
                                           trncode,
                                           event_seq_no,
                                           amount,
                                           bankcode,
                                           COLLECT,
                                           trn_dt,
                                           consider_for_reg_cc,
                                           amount_made_available_regcc1,
                                           amount_made_available_regcc2,
                                           checker_dt_stamp,
                                           checker_id,
                                           maker_dt_stamp,
                                           maker_id,
                                           auth_stat,
                                           record_stat,
                                           once_auth,
                                           mod_no,
                                           pkey)
         SELECT branch,
                account,
                availabledate,
                trnrefno,
                trncode,
                event_seq_no,
                amount,
                bankcode,
                COLLECT,
                trn_dt,
                consider_for_reg_cc,
                amount_made_available_regcc1,
                amount_made_available_regcc2,
                checker_dt_stamp,
                checker_id,
                maker_dt_stamp,
                maker_id,
                auth_stat,
                record_stat,
                once_auth,
                mod_no,
                pkey
           FROM actb_funcol@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;


   PROCEDURE prc_actb_vd_bal
   AS
--      v_message          VARCHAR2 (4000);
--      v_rows_processed   NUMBER;
--      v_date             DATE;
--      v_seq              NUMBER;
--      v_rows_count       INTEGER;
--      v_sql              VARCHAR2 (10000);

v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE;-- := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_sql              VARCHAR2 (10000);
      vv_date           VARCHAR2 (100);
      v_partition       VARCHAR2 (100);
      tab_cnt            integer; 
       mindate           date;
      maxdate           date; 
      v_mindate           VARCHAR2 (100);

   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;
      
      select case when today > trunc(sysdate) then prev_working_day else today end into v_date
      from src_sttm_dates where branch_code = '099';

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'ACTB VD BAL DERIVE',
                   'ACTB_VD_BAL',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


--      DELETE /*+parallel(50)*/ src_actb_vd_bal
--       WHERE VAL_DT BETWEEN v_date - 4 AND v_date - 1;
--
--      COMMIT;
--
--      --execute immediate 'truncate table src_actb_vd_bal';
--
--      INSERT /*+ append parallel */
--            INTO  stglive.src_actb_vd_bal (brn,
--                                           acc,
--                                           val_dt,
--                                           bal,
--                                           dr_tur,
--                                           cr_tur,
--                                           ccy,
--                                           lcy_bal,
--                                           has_tov,
--                                           ic_bal,
--                                           ic_lcy_bal)
--         SELECT brn,
--                acc,
--                val_dt,
--                bal,
--                dr_tur,
--                cr_tur,
--                ccy,
--                lcy_bal,
--                has_tov,
--                ic_bal,
--                ic_lcy_bal
--           FROM actb_vd_bal@loc_fcubslive
--          WHERE VAL_DT BETWEEN v_date - 4 AND v_date - 1;
--
--      v_rows_processed := SQL%ROWCOUNT;

mindate := v_date-3;
       maxdate := v_date-1;
       
       while mindate <= maxdate
       loop
        
        v_mindate := to_char(mindate,'dd-MON-yyyy');
        execute immediate 'truncate table tmp_actb_vd_bal';
        v_sql := 'insert into/*+ parallel(10)*/ tmp_actb_vd_bal
        SELECT /*+ PARALLEL(10)*/ brn,
           acc,
           val_dt,
           bal,
           dr_tur,
           cr_tur,
           ccy,
           lcy_bal,
           has_tov,
           ic_bal,
           ic_lcy_bal
      FROM actb_vd_bal@loc_fcubs where val_dt='''|| v_mindate ||'''';
      execute immediate v_sql;
      v_rows_processed := SQL%ROWCOUNT;
      commit;
      v_partition:= 'P'|| to_char(mindate,'yyyymmdd');
    /* Call a truncate table partition procedure */
    prc_truncate_partition('src_actb_vd_bal',v_partition);
    
 
    execute immediate 'alter table src_actb_vd_bal 
    exchange partition P'||to_char(mindate,'yyyymmdd')||' with table tmp_actb_vd_bal';
    
    mindate := mindate + 1;
    
    end loop;


      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;


   PROCEDURE prc_lctb_contract_master
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE;
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;
      
      select case when today > trunc(sysdate) then prev_working_day else today end into v_date
      from src_sttm_dates where branch_code = '099';

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'LCTB CONTR MASTER DERIVE',
                   'LCTB_CONTRACT_MASTER',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_lctb_contract_master';

      INSERT INTO stglive.src_lctb_contract_master (
                     contract_ref_no,
                     version_no,
                     event_seq_no,
                     event_code,
                     operation_code,
                     deal_source,
                     ext_ref_no,
                     related_lc_ref_no,
                     product_code,
                     transferable,
                     settlement_type,
                     settlement_method,
                     guarantee_type,
                     contract_ccy,
                     contract_amt,
                     max_contract_amt,
                     tolerance_text,
                     negative_tolerance,
                     positive_tolerance,
                     liab_tolerance,
                     max_liability_amt,
                     expiry_date,
                     expiry_place,
                     issue_date,
                     closure_date,
                     closure_type,
                     cif_id,
                     cust_type,
                     cust_name,
                     cust_ref_no,
                     cust_ref_date,
                     track_limit,
                     credit_line,
                     line_party_type,
                     line_cif_id,
                     additional_amts_covered,
                     reimbursement_type,
                     period_for_presentation,
                     remarks,
                     payment_details,
                     charges_from_ben,
                     reinstatement_type,
                     revolves_in,
                     cumulative,
                     frequency,
                     next_reinstatement_date,
                     credit_avl_with,
                     charges_from_isb,
                     account_for_isb,
                     lc_lang_code,
                     amendment_no,
                     charge_amt_isb,
                     charge_ccy_isb,
                     effective_date,
                     isb_date,
                     issue_request,
                     inco_term,
                     may_confirm,
                     stop_date,
                     os_lc_amount,
                     tenor,
                     limits_tracking_tenor_type,
                     allow_prepay,
                     units,
                     include_to_date,
                     rule_narrative,
                     applicable_rule,
                     subsystemstat,
                     back_to_back_lc,
                     ackn_recvd,
                     ackn_date,
                     amendment_date,
                     fin_flag,
                     fin_amnd_no,
                     urr_preference,
                     partial_confirmation_allow,
                     confirm_percent,
                     confirm_amount,
                     chg_clm_swift,
                     chgclm_template_id,
                     collat_loan_allowed,
                     undertaking_expiry_date,
                     undertaking_amount,
                     availed_undertaking_amount,
                     user_lc_ref_no,
                     partial_closure,
                     status_control_flag,
                     contract_derived_status,
                     user_defined_status,
                     unconfirm_amount,
                     beneficiary_conf_reqd,
                     pre_adv_date,
                     fund_id)
         SELECT contract_ref_no,
                version_no,
                event_seq_no,
                event_code,
                operation_code,
                deal_source,
                ext_ref_no,
                related_lc_ref_no,
                product_code,
                transferable,
                settlement_type,
                settlement_method,
                guarantee_type,
                contract_ccy,
                contract_amt,
                max_contract_amt,
                tolerance_text,
                negative_tolerance,
                positive_tolerance,
                liab_tolerance,
                max_liability_amt,
                expiry_date,
                expiry_place,
                issue_date,
                closure_date,
                closure_type,
                cif_id,
                cust_type,
                cust_name,
                cust_ref_no,
                cust_ref_date,
                track_limit,
                credit_line,
                line_party_type,
                line_cif_id,
                additional_amts_covered,
                reimbursement_type,
                period_for_presentation,
                remarks,
                payment_details,
                charges_from_ben,
                reinstatement_type,
                revolves_in,
                cumulative,
                frequency,
                next_reinstatement_date,
                credit_avl_with,
                charges_from_isb,
                account_for_isb,
                lc_lang_code,
                amendment_no,
                charge_amt_isb,
                charge_ccy_isb,
                effective_date,
                isb_date,
                issue_request,
                inco_term,
                may_confirm,
                stop_date,
                os_lc_amount,
                tenor,
                limits_tracking_tenor_type,
                allow_prepay,
                units,
                include_to_date,
                rule_narrative,
                applicable_rule,
                subsystemstat,
                back_to_back_lc,
                ackn_recvd,
                ackn_date,
                amendment_date,
                fin_flag,
                fin_amnd_no,
                urr_preference,
                partial_confirmation_allow,
                confirm_percent,
                confirm_amount,
                chg_clm_swift,
                chgclm_template_id,
                collat_loan_allowed,
                undertaking_expiry_date,
                undertaking_amount,
                availed_undertaking_amount,
                user_lc_ref_no,
                partial_closure,
                status_control_flag,
                contract_derived_status,
                user_defined_status,
                unconfirm_amount,
                beneficiary_conf_reqd,
                pre_adv_date,
                fund_id
           FROM lctb_contract_master@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_ldtb_contract_master
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'LDTB CONTR MASTER DERIVE',
                   'LDTB_CONTRACT_MASTER',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_ldtb_contract_master';

      INSERT INTO stglive.src_ldtb_contract_master (
                     contract_ref_no,
                     version_no,
                     event_seq_no,
                     branch,
                     product,
                     product_type,
                     module,
                     payment_method,
                     rollover_allowed,
                     user_ref_no,
                     counterparty,
                     currency,
                     amount,
                     lcy_amount,
                     original_start_date,
                     uncovered_amount,
                     CLUSTER_ID,
                     notice_date,
                     cluster_size,
                     dealer,
                     booking_date,
                     value_date,
                     maturity_type,
                     maturity_date,
                     notice_days,
                     remarks,
                     main_comp,
                     dflt_settle_ac,
                     dflt_settle_ac_branch,
                     iccf_status,
                     settlement_status,
                     tax_status,
                     brokerage_status,
                     rel_reference,
                     tenor,
                     credit_line,
                     broker_code,
                     tax_scheme,
                     rollover_count,
                     user_defined_status,
                     contract_status,
                     broker_confirm_status,
                     cparty_confirm_status,
                     original_face_value,
                     job_picked_up,
                     base_index_rate,
                     lcy_eqvt_for_index_loans,
                     main_comp_rate,
                     main_comp_amount,
                     main_comp_rate_code,
                     main_comp_spread,
                     charge_status,
                     interface_ref_no,
                     rb_penalty_applicable,
                     dflt_settle_ccy,
                     dr_setl_ac,
                     dr_setl_ac_br,
                     dr_setl_ccy,
                     loan_stmt_cycle,
                     loan_stmt_type,
                     statement_day,
                     cust_margin,
                     both_days,
                     parent_ext_contract_ref_no,
                     assigned_contract,
                     syndication_ref_no,
                     borrower_leg,
                     drawdown_no,
                     int_rolled_amt,
                     tranche_ref_no,
                     max_drawdown_amount,
                     subsidy_percentage,
                     apy,
                     multiple_cif,
                     risk_free_exp_amount,
                     exposure_category,
                     auto_prov_reqd,
                     annuity_loan,
                     int_period_basis,
                     allow_prepay,
                     contract_derived_status,
                     prov_ccy_type,
                     bill_ref_no,
                     user_input_maturity_date,
                     internal_swap_ref_no,
                     ba_reference,
                     billing_notice_days,
                     dealing_method,
                     purpose_of_syndication,
                     last_available_date,
                     admin_id,
                     cascade_participation,
                     settlement_seq_no,
                     rollover_mechanism,
                     rollover_method,
                     parent_contract_ref_no,
                     rollover_indicator,
                     subsystem_stat,
                     asset_tracking,
                     commodity_status,
                     no_of_days_from_shipment,
                     trade_date,
                     rej_reason)
         SELECT contract_ref_no,
                version_no,
                event_seq_no,
                branch,
                product,
                product_type,
                module,
                payment_method,
                rollover_allowed,
                user_ref_no,
                counterparty,
                currency,
                amount,
                lcy_amount,
                original_start_date,
                uncovered_amount,
                CLUSTER_ID,
                notice_date,
                cluster_size,
                dealer,
                booking_date,
                value_date,
                maturity_type,
                maturity_date,
                notice_days,
                remarks,
                main_comp,
                dflt_settle_ac,
                dflt_settle_ac_branch,
                iccf_status,
                settlement_status,
                tax_status,
                brokerage_status,
                rel_reference,
                tenor,
                credit_line,
                broker_code,
                tax_scheme,
                rollover_count,
                user_defined_status,
                contract_status,
                broker_confirm_status,
                cparty_confirm_status,
                original_face_value,
                job_picked_up,
                base_index_rate,
                lcy_eqvt_for_index_loans,
                main_comp_rate,
                main_comp_amount,
                main_comp_rate_code,
                main_comp_spread,
                charge_status,
                interface_ref_no,
                rb_penalty_applicable,
                dflt_settle_ccy,
                dr_setl_ac,
                dr_setl_ac_br,
                dr_setl_ccy,
                loan_stmt_cycle,
                loan_stmt_type,
                statement_day,
                cust_margin,
                both_days,
                parent_ext_contract_ref_no,
                assigned_contract,
                syndication_ref_no,
                borrower_leg,
                drawdown_no,
                int_rolled_amt,
                tranche_ref_no,
                max_drawdown_amount,
                subsidy_percentage,
                apy,
                multiple_cif,
                risk_free_exp_amount,
                exposure_category,
                auto_prov_reqd,
                annuity_loan,
                int_period_basis,
                allow_prepay,
                contract_derived_status,
                prov_ccy_type,
                bill_ref_no,
                user_input_maturity_date,
                internal_swap_ref_no,
                ba_reference,
                billing_notice_days,
                dealing_method,
                purpose_of_syndication,
                last_available_date,
                admin_id,
                cascade_participation,
                settlement_seq_no,
                rollover_mechanism,
                rollover_method,
                parent_contract_ref_no,
                rollover_indicator,
                subsystem_stat,
                asset_tracking,
                commodity_status,
                no_of_days_from_shipment,
                trade_date,
                rej_reason
           FROM ldtb_contract_master@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_ldtb_contract_balance
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'LDTB CONTR BAL DERIVE',
                   'LDTB_CONTRACT_BALANCE',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_ldtb_contract_balance';

      INSERT INTO stglive.src_ldtb_contract_balance (
                     contract_ref_no,
                     principal_outstanding_bal,
                     current_face_value)
         SELECT contract_ref_no,
                principal_outstanding_bal,
                current_face_value
           FROM ldtb_contract_balance@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_lmtm_limits
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'LMTM LIMITS DERIVE',
                   'LMTM_LIMITS',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_lmtm_limits';

      INSERT INTO stglive.src_lmtm_limits (liab_id,
                                           line_cd,
                                           line_serial,
                                           lm_temple,
                                           main_line,
                                           ccy_restriction,
                                           line_currency,
                                           revolving_line,
                                           line_start_date,
                                           line_expiry_date,
                                           last_new_util_date,
                                           availability_flag,
                                           internal_remarks,
                                           limit_amount,
                                           collateral_contribution,
                                           uncollected_funds_limit,
                                           reporting_amount,
                                           available_amount,
                                           date_of_first_od,
                                           date_of_last_od,
                                           amount_utilised_today,
                                           amount_reinstated_today,
                                           uncollected_amount,
                                           excess_tenor,
                                           maker_id,
                                           checker_id,
                                           maker_dt_stamp,
                                           checker_dt_stamp,
                                           matured_util,
                                           record_stat,
                                           auth_stat,
                                           mod_no,
                                           once_auth,
                                           utilisation,
                                           liab_br,
                                           collateral_pct,
                                           netting_required,
                                           brn,
                                           lmt_amt_basis,
                                           unadvised,
                                           transfer_amount,
                                           interest_reqd,
                                           interest_calc_acc,
                                           dsp_eff_line_amount,
                                           daylight_od_limit,
                                           commitment_product,
                                           commitment_ref_no,
                                           commitment_settl_brn,
                                           commitment_settl_acc)
         SELECT liab_id,
                line_cd,
                line_serial,
                lm_temple,
                main_line,
                ccy_restriction,
                line_currency,
                revolving_line,
                line_start_date,
                line_expiry_date,
                last_new_util_date,
                availability_flag,
                internal_remarks,
                limit_amount,
                collateral_contribution,
                uncollected_funds_limit,
                reporting_amount,
                available_amount,
                date_of_first_od,
                date_of_last_od,
                amount_utilised_today,
                amount_reinstated_today,
                uncollected_amount,
                excess_tenor,
                maker_id,
                checker_id,
                maker_dt_stamp,
                checker_dt_stamp,
                matured_util,
                record_stat,
                auth_stat,
                mod_no,
                once_auth,
                utilisation,
                liab_br,
                collateral_pct,
                netting_required,
                brn,
                lmt_amt_basis,
                unadvised,
                transfer_amount,
                interest_reqd,
                interest_calc_acc,
                dsp_eff_line_amount,
                daylight_od_limit,
                commitment_product,
                commitment_ref_no,
                commitment_settl_brn,
                commitment_settl_acc
           FROM lmtm_limits@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_cltb_account_events_diary
   AS
--      v_message          VARCHAR2 (4000);
--      v_rows_processed   NUMBER;
--      v_date             DATE;
--      v_seq              NUMBER;
--      v_rows_count       INTEGER;
--      v_sql              VARCHAR2 (10000);


 v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE;
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (32000);
      tab_cnt            integer;

   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;
      
      select case when today > trunc(sysdate) then prev_working_day else today end into v_date
      from src_sttm_dates where branch_code = '099';

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'ACCT EVENTS DIARY DERIVE',
                   'CLTB_ACCOUNT_EVENTS_DIARY',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


--      EXECUTE IMMEDIATE 'truncate table src_cltb_account_events_diary';
--
--      INSERT /*+ append parallel */ INTO stglive.src_cltb_account_events_diary (account_number,
--                                                         branch_code,
--                                                         component_name,
--                                                         event_code,
--                                                         execution_date,
--                                                         execution_status,
--                                                         maker_id,
--                                                         maker_dt_stamp,
--                                                         checker_id,
--                                                         checker_dt_stamp,
--                                                         event_seq_no,
--                                                         event_date,
--                                                         contract_status,
--                                                         auth_status,
--                                                         process_no,
--                                                         version_no,
--                                                         interface_id,
--                                                         cutoff_status,
--                                                         cutoff_esn,
--                                                         last_accr_dt,
--                                                         event_branch)
--         SELECT account_number,
--                branch_code,
--                component_name,
--                event_code,
--                execution_date,
--                execution_status,
--                maker_id,
--                maker_dt_stamp,
--                checker_id,
--                checker_dt_stamp,
--                event_seq_no,
--                event_date,
--                contract_status,
--                auth_status,
--                process_no,
--                version_no,
--                interface_id,
--                cutoff_status,
--                cutoff_esn,
--                last_accr_dt,
--                event_branch
--           FROM cltb_account_events_diary@loc_fcubslive;
--
--      v_rows_processed := SQL%ROWCOUNT;

 begin
        select count(*) into tab_cnt from sys.all_tables where lower(table_name)='tmp_src_cltb_acct_ev_diary' and owner = 'STGLIVE';
        EXCEPTION
        WHEN NO_DATA_FOUND THEN
            tab_cnt:=0;
      end;
      
      if(tab_cnt)=1 Then
        execute immediate 'drop table tmp_src_cltb_acct_ev_diary';
        v_sql := 'create table tmp_src_cltb_acct_ev_diary as
        SELECT /*+ PARALLEL(auto) */ account_number,
             branch_code,
             component_name,
             event_code,
             execution_date,
             execution_status,
             maker_id,
             maker_dt_stamp,
             checker_id,
             checker_dt_stamp,
             event_seq_no,
             event_date,
             contract_status,
             auth_status,
             process_no,
             version_no,
             interface_id,
             cutoff_status,
             cutoff_esn,
             last_accr_dt,
             event_branch,
             '||1||' qset
        FROM cltb_account_events_diary@loc_fcubs';
        execute immediate v_sql;
        v_rows_processed := SQL%ROWCOUNT;
       else
        v_sql := 'create table tmp_src_cltb_acct_ev_diary as
        SELECT /*+ PARALLEL(auto) */ account_number,
             branch_code,
             component_name,
             event_code,
             execution_date,
             execution_status,
             maker_id,
             maker_dt_stamp,
             checker_id,
             checker_dt_stamp,
             event_seq_no,
             event_date,
             contract_status,
             auth_status,
             process_no,
             version_no,
             interface_id,
             cutoff_status,
             cutoff_esn,
             last_accr_dt,
             event_branch,
             '||1||' qset
        FROM cltb_account_events_diary@loc_fcubs';
        execute immediate v_sql;
        v_rows_processed := SQL%ROWCOUNT;
       end if;
       
       execute immediate 'alter table stglive.src_cltb_account_events_diary 
                    exchange partition P' ||to_number(10)|| ' with table tmp_src_cltb_acct_ev_diary';
                    
                    
            prc_index_rebuild('IDX_CL_ACNT_EVNTS_LOG1');
            prc_index_rebuild('IND_INCOMPLETE_EVENTS1');
            prc_index_rebuild('IX01_CLTB_ACCNT_EVNTS_DIRY1');
            commit;


      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;


   PROCEDURE prc_sttm_dates
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'STTM DATES DERIVE',
                   'STTM_DATES',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_sttm_dates';

      INSERT INTO stglive.src_sttm_dates (branch_code,
                                          today,
                                          prev_working_day,
                                          next_working_day,
                                          record_stat,
                                          auth_stat,
                                          mod_no,
                                          maker_id,
                                          maker_dt_stamp,
                                          checker_id,
                                          checker_dt_stamp,
                                          once_auth)
         SELECT branch_code,
                today,
                prev_working_day,
                next_working_day,
                record_stat,
                auth_stat,
                mod_no,
                maker_id,
                maker_dt_stamp,
                checker_id,
                checker_dt_stamp,
                once_auth
           FROM sttm_dates@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;


   PROCEDURE prc_sttm_cust_account_linkages
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'STTM CUST ACCT LINK DERIVE',
                   'STTM_CUST_ACCOUNT_LINKAGES',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_sttm_cust_account_linkages';

      INSERT INTO stglive.src_sttm_cust_account_linkages (branch_code,
                                                          cust_ac_no,
                                                          customer_no,
                                                          linkage_type,
                                                          linked_ref_no,
                                                          linkage_percentage,
                                                          linkage_seq_no,
                                                          linkage_branch,
                                                          linked_ccy,
                                                          effective_date)
         SELECT branch_code,
                cust_ac_no,
                customer_no,
                linkage_type,
                linked_ref_no,
                linkage_percentage,
                linkage_seq_no,
                linkage_branch,
                linked_ccy,
                effective_date
           FROM sttm_cust_account_linkages@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_ifst_country
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'IFST COUNTRY DERIVE',
                   'IFST_COUNTRY',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_ifst_country';

      INSERT INTO stglive.src_ifst_country (country_code, description)
         SELECT country_code, description FROM ifst_country@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;


   PROCEDURE prc_cstm_product_accrole
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE;
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;
      
      select case when today > trunc(sysdate) then prev_working_day else today end into v_date
      from src_sttm_dates where branch_code = '099';

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'CSTM PROD ACCROLE DERIVE',
                   'CSTM_PRODUCT_ACCROLE',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_cstm_product_accrole';

      INSERT INTO stglive.src_cstm_product_accrole (accounting_role,
                                                    product_code,
                                                    role_type,
                                                    status,
                                                    account_head)
         SELECT accounting_role,
                product_code,
                role_type,
                status,
                account_head
           FROM cstm_product_accrole@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;


   PROCEDURE prc_cstb_amount_paid
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'CSTB AMT PAID DERIVE',
                   'CSTB_AMOUNT_PAID',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_cstb_amount_paid';

      INSERT INTO stglive.src_cstb_amount_paid (contract_ref_no,
                                                component,
                                                due_date,
                                                paid_date,
                                                event_seq_no,
                                                currency_settled,
                                                account_settled,
                                                branch_account_settled,
                                                lcy_equivalent_settled,
                                                counterparty,
                                                accounting_passed,
                                                message_sent,
                                                amount_settled,
                                                inflow_outflow,
                                                basis_amount,
                                                part_amount_due_settled,
                                                prepayment_with_penalty,
                                                payment_status,
                                                exchange_rate,
                                                prepmt_amt,
                                                prepaid_amt)
         SELECT contract_ref_no,
                component,
                due_date,
                paid_date,
                event_seq_no,
                currency_settled,
                account_settled,
                branch_account_settled,
                lcy_equivalent_settled,
                counterparty,
                accounting_passed,
                message_sent,
                amount_settled,
                inflow_outflow,
                basis_amount,
                part_amount_due_settled,
                prepayment_with_penalty,
                payment_status,
                exchange_rate,
                prepmt_amt,
                prepaid_amt
           FROM cstb_amount_paid@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;


   PROCEDURE prc_swtb_txn_log
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'SWTB TXN LOG DERIVE',
                   'SWTB_TXN_LOG',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_swtb_txn_log';

      INSERT INTO stglive.src_swtb_txn_log (p_key,
                                            msg_type,
                                            pan,
                                            proc_code,
                                            txn_amt,
                                            setl_amt,
                                            bill_amt,
                                            trans_dt_time,
                                            stan,
                                            acq_ins_id,
                                            fwd_ins_id,
                                            rrn,
                                            resp_code,
                                            term_id,
                                            txn_ccy_code,
                                            setl_ccy_code,
                                            bill_ccy_code,
                                            from_acc,
                                            to_acc,
                                            txn_desc,
                                            exp_date,
                                            setl_date,
                                            conv_date,
                                            capt_date,
                                            msg_flow,
                                            work_progress,
                                            err_param,
                                            trn_ref_no,
                                            amount_block_no,
                                            purge_date,
                                            ERROR_CODE,
                                            pre_auth_seq_no,
                                            reconsiled,
                                            xref,
                                            dcn,
                                            add_amt,
                                            mini_stmt_data,
                                            offus_onus,
                                            db_in_time,
                                            db_out_time)
         SELECT p_key,
                msg_type,
                pan,
                proc_code,
                txn_amt,
                setl_amt,
                bill_amt,
                trans_dt_time,
                stan,
                acq_ins_id,
                fwd_ins_id,
                rrn,
                resp_code,
                term_id,
                txn_ccy_code,
                setl_ccy_code,
                bill_ccy_code,
                from_acc,
                to_acc,
                txn_desc,
                exp_date,
                setl_date,
                conv_date,
                capt_date,
                msg_flow,
                work_progress,
                err_param,
                trn_ref_no,
                amount_block_no,
                purge_date,
                ERROR_CODE,
                pre_auth_seq_no,
                reconsiled,
                xref,
                dcn,
                add_amt,
                mini_stmt_data,
                offus_onus,
                db_in_time,
                db_out_time
           FROM swtb_txn_log@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_swtb_txn_log_hist
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
      v_p_date           DATE;
      p_app_pdate        DATE;
      p_app_tdate        DATE;
   BEGIN
      SELECT TRUNC (MAX (purge_date - 30))
        INTO v_p_date
        FROM tmp_src_swtb_txn_log_hist;

      SELECT TRUNC (MAX (prev_working_day))
        INTO p_app_pdate
        FROM sttm_dates@loc_fcubslive;

      SELECT TRUNC (MAX (today))
        INTO p_app_tdate
        FROM sttm_dates@loc_fcubslive;


      IF v_p_date = p_app_pdate
      THEN
         v_date := p_app_tdate;
      ELSE
         v_date := p_app_pdate;
      END IF;

      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'SWTB TXN LOG HIST DERIVE',
                   'SWTB_TXN_LOG_HIST',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table tmp_src_swtb_txn_log_hist';

      INSERT INTO stglive.tmp_src_swtb_txn_log_hist (purge_run_ref,
                                                     seq_no,
                                                     p_key,
                                                     msg_type,
                                                     pan,
                                                     proc_code,
                                                     txn_amt,
                                                     setl_amt,
                                                     bill_amt,
                                                     trans_dt_time,
                                                     stan,
                                                     acq_ins_id,
                                                     fwd_ins_id,
                                                     rrn,
                                                     resp_code,
                                                     term_id,
                                                     txn_ccy_code,
                                                     setl_ccy_code,
                                                     bill_ccy_code,
                                                     from_acc,
                                                     to_acc,
                                                     txn_desc,
                                                     exp_date,
                                                     setl_date,
                                                     conv_date,
                                                     capt_date,
                                                     msg_flow,
                                                     work_progress,
                                                     err_param,
                                                     trn_ref_no,
                                                     amount_block_no,
                                                     purge_date,
                                                     ERROR_CODE,
                                                     pre_auth_seq_no,
                                                     reconsiled,
                                                     xref,
                                                     dcn,
                                                     add_amt,
                                                     mini_stmt_data,
                                                     offus_onus,
                                                     yyyymm)
         SELECT purge_run_ref,
                seq_no,
                p_key,
                msg_type,
                pan,
                proc_code,
                txn_amt,
                setl_amt,
                bill_amt,
                trans_dt_time,
                stan,
                acq_ins_id,
                fwd_ins_id,
                rrn,
                resp_code,
                term_id,
                txn_ccy_code,
                setl_ccy_code,
                bill_ccy_code,
                from_acc,
                to_acc,
                txn_desc,
                exp_date,
                setl_date,
                conv_date,
                capt_date,
                msg_flow,
                work_progress,
                err_param,
                trn_ref_no,
                amount_block_no,
                purge_date,
                ERROR_CODE,
                pre_auth_seq_no,
                reconsiled,
                xref,
                dcn,
                add_amt,
                mini_stmt_data,
                offus_onus,
                TO_CHAR (TO_DATE (trans_dt_time, 'mmddhh24miss'), 'yyyymm')
                   yyyymm
           FROM swtb_txn_log_hist@loc_fcubslive
          WHERE TRUNC (purge_date - 30) = TRUNC (v_date);

      ---to_char(to_date(trans_dt_time, 'mmddhh24miss'),'yyyymm') between to_char(trunc(sysdate, 'mm')-1, 'yyyymm') and to_char(sysdate, 'yyyymm');
      --  ;
      v_rows_processed := SQL%ROWCOUNT;

      COMMIT;

      EXECUTE IMMEDIATE
            'alter table src_swtb_txn_log_hist truncate partition P'
         || TO_CHAR (TRUNC (SYSDATE, 'mm') - 1, 'yyyymm');

      EXECUTE IMMEDIATE
            'alter table src_swtb_txn_log_hist truncate partition P'
         || TO_CHAR (SYSDATE, 'yyyymm');

      INSERT INTO src_swtb_txn_log_hist (purge_run_ref,
                                         seq_no,
                                         p_key,
                                         msg_type,
                                         pan,
                                         proc_code,
                                         txn_amt,
                                         setl_amt,
                                         bill_amt,
                                         trans_dt_time,
                                         stan,
                                         acq_ins_id,
                                         fwd_ins_id,
                                         rrn,
                                         resp_code,
                                         term_id,
                                         txn_ccy_code,
                                         setl_ccy_code,
                                         bill_ccy_code,
                                         from_acc,
                                         to_acc,
                                         txn_desc,
                                         exp_date,
                                         setl_date,
                                         conv_date,
                                         capt_date,
                                         msg_flow,
                                         work_progress,
                                         err_param,
                                         trn_ref_no,
                                         amount_block_no,
                                         purge_date,
                                         ERROR_CODE,
                                         pre_auth_seq_no,
                                         reconsiled,
                                         xref,
                                         dcn,
                                         add_amt,
                                         mini_stmt_data,
                                         offus_onus,
                                         yyyymm)
         SELECT purge_run_ref,
                seq_no,
                p_key,
                msg_type,
                pan,
                proc_code,
                txn_amt,
                setl_amt,
                bill_amt,
                trans_dt_time,
                stan,
                acq_ins_id,
                fwd_ins_id,
                rrn,
                resp_code,
                term_id,
                txn_ccy_code,
                setl_ccy_code,
                bill_ccy_code,
                from_acc,
                to_acc,
                txn_desc,
                exp_date,
                setl_date,
                conv_date,
                capt_date,
                msg_flow,
                work_progress,
                err_param,
                trn_ref_no,
                amount_block_no,
                purge_date,
                ERROR_CODE,
                pre_auth_seq_no,
                reconsiled,
                xref,
                dcn,
                add_amt,
                mini_stmt_data,
                offus_onus,
                yyyymm
           FROM tmp_src_swtb_txn_log_hist;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_ictm_td_details
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'ICTM TD DETAILS DERIVE',
                   'ICTM_TD_DETAILS',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_ictm_td_details';

      INSERT INTO stglive.src_ictm_td_details (brn,
                                               acc,
                                               ccy,
                                               payin_option,
                                               td_amount,
                                               offset_brn,
                                               td_offset_acc,
                                               reference_no,
                                               redem_amt,
                                               liq_amt,
                                               projected_int_till_mat,
                                               stock_catlog_cd,
                                               certificate_no,
                                               duplicate_issue,
                                               topup_amt)
         SELECT brn,
                acc,
                ccy,
                payin_option,
                td_amount,
                offset_brn,
                td_offset_acc,
                reference_no,
                redem_amt,
                liq_amt,
                projected_int_till_mat,
                stock_catlog_cd,
                certificate_no,
                duplicate_issue,
                topup_amt
           FROM ictm_td_details@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_sttm_ac_stat_change
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'STTM AC STAT CHANGE DERIVE',
                   'STTM_AC_STAT_CHANGE',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_sttm_ac_stat_change';

      INSERT INTO stglive.src_sttm_ac_stat_change (cust_ac_no,
                                                   branch_code,
                                                   status_change_date,
                                                   seq_no,
                                                   status,
                                                   ac_stat_no_dr,
                                                   ac_stat_no_cr,
                                                   ac_stat_frozen,
                                                   ac_stat_de_post,
                                                   ac_stat_chg_auto,
                                                   maker_id,
                                                   checker_id,
                                                   maker_dt_stamp,
                                                   checker_dt_stamp,
                                                   auth_stat,
                                                   record_stat,
                                                   once_auth,
                                                   mod_no,
                                                   dormant,
                                                   sttm_ac_status_change,
                                                   from_status,
                                                   from_ac_stat_no_dr,
                                                   from_ac_stat_no_cr,
                                                   from_ac_stat_frozen,
                                                   from_ac_stat_de_post,
                                                   from_ac_stat_chg_auto,
                                                   from_dormant)
         SELECT cust_ac_no,
                branch_code,
                status_change_date,
                seq_no,
                status,
                ac_stat_no_dr,
                ac_stat_no_cr,
                ac_stat_frozen,
                ac_stat_de_post,
                ac_stat_chg_auto,
                maker_id,
                checker_id,
                maker_dt_stamp,
                checker_dt_stamp,
                auth_stat,
                record_stat,
                once_auth,
                mod_no,
                dormant,
                sttm_ac_status_change,
                from_status,
                from_ac_stat_no_dr,
                from_ac_stat_no_cr,
                from_ac_stat_frozen,
                from_ac_stat_de_post,
                from_ac_stat_chg_auto,
                from_dormant
           FROM sttm_ac_stat_change@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_getm_facility
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'GETM FACILITY DERIVE',
                   'GETM_FACILITY',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_getm_pool';

      INSERT INTO src_getm_pool
         SELECT * FROM getm_pool@loc_fcubslive;

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_getm_facility';

      INSERT INTO stglive.src_getm_facility (id,
                                             liab_id,
                                             line_code,
                                             line_serial,
                                             main_line_id,
                                             ccy_restriction,
                                             line_currency,
                                             revolving_line,
                                             line_start_date,
                                             line_expiry_date,
                                             last_new_util_date,
                                             availability_flag,
                                             limit_amount,
                                             collateral_contribution,
                                             uncollected_funds_limit,
                                             reporting_amount,
                                             available_amount,
                                             date_of_first_od,
                                             date_of_last_od,
                                             amount_utilised_today,
                                             amount_reinstated_today,
                                             uncollected_amount,
                                             excess_tenor,
                                             utilisation,
                                             liab_br,
                                             collateral_pct,
                                             netting_required,
                                             brn,
                                             lmt_amt_basis,
                                             unadvised,
                                             transfer_amount,
                                             dsp_eff_line_amount,
                                             funded,
                                             block_amount,
                                             tanked_util,
                                             netting_amount,
                                             availment_date,
                                             excep_txn_amt,
                                             excep_breach,
                                             user_define_status,
                                             category,
                                             external_refno,
                                             process_no,
                                             user_refno,
                                             conversion_date,
                                             record_stat,
                                             auth_stat,
                                             mod_no,
                                             maker_id,
                                             maker_dt_stamp,
                                             checker_id,
                                             checker_dt_stamp,
                                             once_auth,
                                             matured_util,
                                             source,
                                             udf_value_1,
                                             udf_value_2,
                                             udf_value_3,
                                             udf_value_4,
                                             udf_value_5,
                                             udf_value_6,
                                             udf_value_7,
                                             udf_value_8,
                                             udf_value_9,
                                             udf_value_10,
                                             udf_value_11,
                                             udf_value_12,
                                             udf_value_13,
                                             udf_value_14,
                                             udf_value_15,
                                             udf_value_16,
                                             udf_value_17,
                                             udf_value_18,
                                             udf_value_19,
                                             udf_value_20,
                                             udf_value_21,
                                             udf_value_22,
                                             udf_value_23,
                                             udf_value_24,
                                             udf_value_25,
                                             udf_value_26,
                                             udf_value_27,
                                             udf_value_28,
                                             udf_value_29,
                                             udf_value_30,
                                             udf_value_31,
                                             udf_value_32,
                                             udf_value_33,
                                             udf_value_34,
                                             udf_value_35,
                                             udf_value_36,
                                             udf_value_37,
                                             udf_value_38,
                                             udf_value_39,
                                             udf_value_40,
                                             udf_value_41,
                                             udf_value_42,
                                             udf_value_43,
                                             udf_value_44,
                                             udf_value_45,
                                             udf_value_46,
                                             udf_value_47,
                                             udf_value_48,
                                             udf_value_49,
                                             udf_value_50,
                                             tenor_rest_type,
                                             customer_rest_type,
                                             product_rest_type,
                                             branch_rest_type,
                                             ccy_rest_type,
                                             ext_system_rest_type,
                                             description,
                                             shadow_limit,
                                             exp_rest_type,
                                             revolving_amt,
                                             approved_amt,
                                             schedule_process_date,
                                             day_light_limit,
                                             user_def_stat_changed_dt,
                                             day_light_st_dt,
                                             day_light_ed_dt,
                                             daylight_od_limit,
                                             commitment_product,
                                             commitment_ref_no,
                                             commitment_settl_brn,
                                             commitment_settl_acc,
                                             lending_category_code,
                                             product_type,
                                             bulk_pmt_reqd,
                                             interest_reqd,
                                             interest_calc_acc,
                                             ppc_ref_no,
                                             ppc_project_id,
                                             commitment_branch,
                                             booking_date,
                                             last_reval_date,
                                             last_reval_xrate)
         SELECT id,
                liab_id,
                line_code,
                line_serial,
                main_line_id,
                ccy_restriction,
                line_currency,
                revolving_line,
                line_start_date,
                line_expiry_date,
                last_new_util_date,
                availability_flag,
                limit_amount,
                collateral_contribution,
                uncollected_funds_limit,
                reporting_amount,
                available_amount,
                date_of_first_od,
                date_of_last_od,
                amount_utilised_today,
                amount_reinstated_today,
                uncollected_amount,
                excess_tenor,
                utilisation,
                liab_br,
                collateral_pct,
                netting_required,
                brn,
                lmt_amt_basis,
                unadvised,
                transfer_amount,
                dsp_eff_line_amount,
                funded,
                block_amount,
                tanked_util,
                netting_amount,
                availment_date,
                excep_txn_amt,
                excep_breach,
                user_define_status,
                category,
                external_refno,
                process_no,
                user_refno,
                conversion_date,
                record_stat,
                auth_stat,
                mod_no,
                maker_id,
                maker_dt_stamp,
                checker_id,
                checker_dt_stamp,
                once_auth,
                matured_util,
                source,
                udf_value_1,
                udf_value_2,
                udf_value_3,
                udf_value_4,
                udf_value_5,
                udf_value_6,
                udf_value_7,
                udf_value_8,
                udf_value_9,
                udf_value_10,
                udf_value_11,
                udf_value_12,
                udf_value_13,
                udf_value_14,
                udf_value_15,
                udf_value_16,
                udf_value_17,
                udf_value_18,
                udf_value_19,
                udf_value_20,
                udf_value_21,
                udf_value_22,
                udf_value_23,
                udf_value_24,
                udf_value_25,
                udf_value_26,
                udf_value_27,
                udf_value_28,
                udf_value_29,
                udf_value_30,
                udf_value_31,
                udf_value_32,
                udf_value_33,
                udf_value_34,
                udf_value_35,
                udf_value_36,
                udf_value_37,
                udf_value_38,
                udf_value_39,
                udf_value_40,
                udf_value_41,
                udf_value_42,
                udf_value_43,
                udf_value_44,
                udf_value_45,
                udf_value_46,
                udf_value_47,
                udf_value_48,
                udf_value_49,
                udf_value_50,
                tenor_rest_type,
                customer_rest_type,
                product_rest_type,
                branch_rest_type,
                ccy_rest_type,
                ext_system_rest_type,
                description,
                shadow_limit,
                exp_rest_type,
                revolving_amt,
                approved_amt,
                schedule_process_date,
                day_light_limit,
                user_def_stat_changed_dt,
                day_light_st_dt,
                day_light_ed_dt,
                daylight_od_limit,
                commitment_product,
                commitment_ref_no,
                commitment_settl_brn,
                commitment_settl_acc,
                lending_category_code,
                product_type,
                bulk_pmt_reqd,
                interest_reqd,
                interest_calc_acc,
                ppc_ref_no,
                ppc_project_id,
                commitment_branch,
                booking_date,
                last_reval_date,
                last_reval_xrate
           FROM getm_facility@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_sttm_cust_account_dormancy
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'STTM CUST ACC DORM DERIVE',
                   'STTM_CUST_ACCOUNT_DORMANCY',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_sttm_cust_account_dormancy';

      INSERT INTO stglive.src_sttm_cust_account_dormancy (branch_code,
                                                          cust_ac_no,
                                                          dormancy_end_dt,
                                                          dormancy_start_dt,
                                                          ref_no)
         SELECT branch_code,
                cust_ac_no,
                dormancy_end_dt,
                dormancy_start_dt,
                ref_no
           FROM sttm_cust_account_dormancy@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_svtm_acc_sig_det
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'SVTM ACC SIG DET DERIVE',
                   'SVTM_ACC_SIG_DET',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_svtm_acc_sig_det';

      INSERT INTO stglive.src_svtm_acc_sig_det (acc_no,
                                                approval_limit,
                                                branch,
                                                cifid,
                                                cif_sig_id,
                                                cif_sig_name,
                                                record_stat,
                                                sig_msg,
                                                sig_type,
                                                solo_sufficient)
         SELECT acc_no,
                approval_limit,
                branch,
                cifid,
                cif_sig_id,
                cif_sig_name,
                record_stat,
                sig_msg,
                sig_type,
                solo_sufficient
           FROM svtm_acc_sig_det@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;

         -------this is to exempt pregenerated accounts-----------
         EXECUTE IMMEDIATE 'TRUNCATE TABLE PREGENERATED_ACCOUNTS';

         INSERT INTO PREGENERATED_ACCOUNTS
            SELECT CUSTOMER_NO
              FROM SRC_STTM_CUSTOMER
             WHERE SHORT_NAME LIKE '%PREGENERATED%';

         COMMIT;
   END;

   PROCEDURE prc_ldtb_contract_schedules
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'LDTB CONTRACT SCHEDULES DERIVE',
                   'LDTB_CONTRACT_SCHEDULES',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_ldtb_contract_schedules';

      INSERT INTO stglive.src_ldtb_contract_schedules (
                     contract_ref_no,
                     version_no,
                     event_seq_no,
                     component,
                     schedule_type,
                     start_date,
                     no_of_schedules,
                     frequency,
                     frequency_unit,
                     amount,
                     base_index_rate,
                     lcy_eqvt_for_index_loans)
         SELECT contract_ref_no,
                version_no,
                event_seq_no,
                component,
                schedule_type,
                start_date,
                no_of_schedules,
                frequency,
                frequency_unit,
                amount,
                base_index_rate,
                lcy_eqvt_for_index_loans
           FROM ldtb_contract_schedules@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;


   PROCEDURE prc_sttm_cust_image
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'STTM CUSTOMER IMAGE DERIVE',
                   'STTM_CUST_IMAGE',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_sttm_cust_image';

      INSERT INTO stglive.src_sttm_cust_image (cif_sig_id,
                                               customer_no,
                                               file_type,
                                               seq_no,
                                               specimen_seq_no,
                                               status)
         SELECT cif_sig_id,
                customer_no,
                file_type,
                seq_no,
                specimen_seq_no,
                status
           FROM sttm_cust_image@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_mitm_account_default
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE;
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;
      
      select case when today > trunc(sysdate) then prev_working_day else today end into v_date
      from src_sttm_dates where branch_code = '099';

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'MITM ACCOUNT DEFAULT DERIVE',
                   'MITM_ACCOUNT_DEFAULT',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_mitm_account_default';

      INSERT INTO stglive.src_mitm_account_default (branch,
                                                    account,
                                                    mis_group,
                                                    pool_code,
                                                    txn_mis_1,
                                                    txn_mis_2,
                                                    txn_mis_3,
                                                    txn_mis_4,
                                                    txn_mis_5,
                                                    txn_mis_6,
                                                    txn_mis_7,
                                                    txn_mis_8,
                                                    txn_mis_9,
                                                    txn_mis_10,
                                                    comp_mis_1,
                                                    comp_mis_2,
                                                    comp_mis_3,
                                                    comp_mis_4,
                                                    comp_mis_5,
                                                    comp_mis_6,
                                                    comp_mis_7,
                                                    comp_mis_8,
                                                    comp_mis_9,
                                                    comp_mis_10,
                                                    cost_code1,
                                                    cost_code2,
                                                    cost_code3,
                                                    cost_code4,
                                                    cost_code5)
         SELECT branch,
                account,
                mis_group,
                pool_code,
                txn_mis_1,
                txn_mis_2,
                txn_mis_3,
                txn_mis_4,
                txn_mis_5,
                txn_mis_6,
                txn_mis_7,
                txn_mis_8,
                txn_mis_9,
                txn_mis_10,
                comp_mis_1,
                comp_mis_2,
                comp_mis_3,
                comp_mis_4,
                comp_mis_5,
                comp_mis_6,
                comp_mis_7,
                comp_mis_8,
                comp_mis_9,
                comp_mis_10,
                cost_code1,
                cost_code2,
                cost_code3,
                cost_code4,
                cost_code5
           FROM mitm_account_default@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;


   PROCEDURE prc_ictm_acc_udevals
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'ACC UDEVALS DEFAULT DERIVE',
                   'ICTM_ACC_UDEVALS',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_ictm_acc_udevals';

      INSERT INTO stglive.src_ictm_acc_udevals (brn,
                                                acc,
                                                prod,
                                                ude_eff_dt,
                                                ude_id,
                                                ude_value,
                                                rate_code,
                                                auth_stat,
                                                record_stat,
                                                base_rate,
                                                base_spread,
                                                td_rate_code,
                                                ude_variance)
         SELECT brn,
                acc,
                prod,
                ude_eff_dt,
                ude_id,
                ude_value,
                rate_code,
                auth_stat,
                record_stat,
                base_rate,
                base_spread,
                td_rate_code,
                ude_variance
           FROM ictm_acc_udevals@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_sttb_record_log
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'STTB RECORD LOG DERIVE',
                   'STTB_RECORD_LOG',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_sttb_record_log';

      INSERT INTO stglive.src_sttb_record_log (action_code,
                                               auth_stat,
                                               branch_code,
                                               char_fld_1,
                                               char_fld_10,
                                               char_fld_11,
                                               char_fld_12,
                                               char_fld_13,
                                               char_fld_14,
                                               char_fld_15,
                                               char_fld_16,
                                               char_fld_17,
                                               char_fld_18,
                                               char_fld_19,
                                               char_fld_2,
                                               char_fld_20,
                                               char_fld_21,
                                               char_fld_22,
                                               char_fld_23,
                                               char_fld_24,
                                               char_fld_25,
                                               char_fld_3,
                                               char_fld_4,
                                               char_fld_5,
                                               char_fld_6,
                                               char_fld_7,
                                               char_fld_8,
                                               char_fld_9,
                                               checker_dt_stamp,
                                               checker_id,
                                               checker_remarks,
                                               date_fld_1,
                                               date_fld_10,
                                               date_fld_2,
                                               date_fld_3,
                                               date_fld_4,
                                               date_fld_5,
                                               date_fld_6,
                                               date_fld_7,
                                               date_fld_8,
                                               date_fld_9,
                                               first_auth_stat,
                                               first_checker_dt_stamp,
                                               first_checker_id,
                                               first_checker_remarks,
                                               function_id,
                                               key_id,
                                               maker_dt_stamp,
                                               maker_id,
                                               maker_remarks,
                                               mod_no,
                                               msg_id,
                                               num_fld_1,
                                               num_fld_10,
                                               num_fld_2,
                                               num_fld_3,
                                               num_fld_4,
                                               num_fld_5,
                                               num_fld_6,
                                               num_fld_7,
                                               num_fld_8,
                                               num_fld_9,
                                               print_stat,
                                               record_stat,
                                               remarks,
                                               req_no,
                                               table_name,
                                               tanking_status)
         SELECT action_code,
                auth_stat,
                branch_code,
                char_fld_1,
                char_fld_10,
                char_fld_11,
                char_fld_12,
                char_fld_13,
                char_fld_14,
                char_fld_15,
                char_fld_16,
                char_fld_17,
                char_fld_18,
                char_fld_19,
                char_fld_2,
                char_fld_20,
                char_fld_21,
                char_fld_22,
                char_fld_23,
                char_fld_24,
                char_fld_25,
                char_fld_3,
                char_fld_4,
                char_fld_5,
                char_fld_6,
                char_fld_7,
                char_fld_8,
                char_fld_9,
                checker_dt_stamp,
                checker_id,
                checker_remarks,
                date_fld_1,
                date_fld_10,
                date_fld_2,
                date_fld_3,
                date_fld_4,
                date_fld_5,
                date_fld_6,
                date_fld_7,
                date_fld_8,
                date_fld_9,
                first_auth_stat,
                first_checker_dt_stamp,
                first_checker_id,
                first_checker_remarks,
                function_id,
                key_id,
                maker_dt_stamp,
                maker_id,
                maker_remarks,
                mod_no,
                msg_id,
                num_fld_1,
                num_fld_10,
                num_fld_2,
                num_fld_3,
                num_fld_4,
                num_fld_5,
                num_fld_6,
                num_fld_7,
                num_fld_8,
                num_fld_9,
                print_stat,
                record_stat,
                remarks,
                req_no,
                table_name,
                tanking_status
           FROM sttb_record_log@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_sttb_record_log_hist
   AS
--      v_message          VARCHAR2 (4000);
--      v_rows_processed   NUMBER;
--      v_date             DATE := TRUNC (SYSDATE);
--      v_seq              NUMBER;
--      v_rows_count       INTEGER;
--      v_sql              VARCHAR2 (10000);

v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_sql              VARCHAR2 (32000);
      v_partition       VARCHAR2 (100);
      tab_cnt            integer;

   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'STTB RECORD LOG HIST DERIVE',
                   'STTB_RECORD_LOG_HIST',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


--      EXECUTE IMMEDIATE 'truncate table src_sttb_record_log_hist';
--
--      INSERT /*+ append parallel */
--            INTO  stglive.src_sttb_record_log_hist (auth_stat,
--                                                    branch_code,
--                                                    checker_dt_stamp,
--                                                    checker_id,
--                                                    function_id,
--                                                    key_id,
--                                                    maker_dt_stamp,
--                                                    maker_id,
--                                                    mod_no,
--                                                    record_stat,
--                                                    table_name)
--         SELECT auth_stat,
--                branch_code,
--                checker_dt_stamp,
--                checker_id,
--                function_id,
--                key_id,
--                maker_dt_stamp,
--                maker_id,
--                mod_no,
--                record_stat,
--                table_name
--           FROM sttb_record_log_hist@loc_fcubslive;
--
--      v_rows_processed := SQL%ROWCOUNT;

begin
                select count(*) into tab_cnt from sys.all_tables where lower(table_name)='tmp_sttb_record_log_hist' and owner = 'STGLIVE';
                EXCEPTION
                WHEN NO_DATA_FOUND THEN
                    tab_cnt:=0;
              end;
              if(tab_cnt)=1 Then
                execute immediate 'drop table tmp_sttb_record_log_hist';
              v_sql := 'create table tmp_sttb_record_log_hist as  SELECT /*+ PARALLEL(auto) */ trunc(maker_dt_stamp) ref_date,auth_stat,
                      branch_code,
                      checker_dt_stamp,
                      checker_id,
                      function_id,
                      key_id,
                      maker_dt_stamp,
                      maker_id,
                      mod_no,
                      record_stat,
                      table_name,
                      '||1||' qset
                 FROM sttb_record_log_hist@loc_fcubs';

              EXECUTE IMMEDIATE v_sql;
              v_rows_processed := SQL%ROWCOUNT;
              else 
              v_sql := 'create table tmp_sttb_record_log_hist as  SELECT /*+ PARALLEL(auto) */ trunc(maker_dt_stamp) ref_date,auth_stat,
                      branch_code,
                      checker_dt_stamp,
                      checker_id,
                      function_id,
                      key_id,
                      maker_dt_stamp,
                      maker_id,
                      mod_no,
                      record_stat,
                      table_name,
                     '||1||' qset
                 FROM sttb_record_log_hist@loc_fcubs';
                 --FROM sttb_record_log_hist@loc_fcubs where ref_date = '''|| v_date ||'''';
                 execute immediate v_sql;
              v_rows_processed := SQL%ROWCOUNT;
              end if;
              
            /* Call a truncate table partition procedure */
            --stglive.prc_stglive_truncate_partition('rev_sttb_record_log_hist',v_partition);
            --tmp_sttb_record_log_hist
            execute immediate 'alter table stglive.src_sttb_record_log_hist 
                exchange partition P' ||to_number(10)|| ' with table tmp_sttb_record_log_hist';
                commit;


      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_sttb_field_log
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'STTB FIELD LOG DERIVE',
                   'STTB_FIELD_LOG',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_sttb_field_log';

      INSERT INTO stglive.src_sttb_field_log (block_name,
                                              detail_key,
                                              field_name,
                                              function_id,
                                              item_no,
                                              key_id,
                                              mod_no,
                                              new_value,
                                              old_value,
                                              record_stat,
                                              table_name)
         SELECT block_name,
                detail_key,
                field_name,
                function_id,
                item_no,
                key_id,
                mod_no,
                new_value,
                old_value,
                record_stat,
                table_name
           FROM sttb_field_log@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_sttb_field_log_hist
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'STTB FIELD LOG HIST DERIVE',
                   'STTB_FIELD_LOG_HIST',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_sttb_field_log_hist';

      INSERT /*+ append parallel */
            INTO  stglive.src_sttb_field_log_hist (block_name,
                                                   detail_key,
                                                   field_name,
                                                   function_id,
                                                   item_no,
                                                   key_id,
                                                   mod_no,
                                                   new_value,
                                                   old_value,
                                                   record_stat,
                                                   table_name)
         SELECT block_name,
                detail_key,
                field_name,
                function_id,
                item_no,
                key_id,
                mod_no,
                new_value,
                old_value,
                record_stat,
                table_name
           FROM sttb_field_log_hist@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_getm_collat
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'GETM_COLLAT',
                   'GETM_COLLAT',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_getm_collat';

      INSERT INTO stglive.src_getm_collat (id,
                                           liab_id,
                                           collateral_code,
                                           collateral_description,
                                           category_id,
                                           collateral_currency,
                                           collateral_value,
                                           haircut,
                                           lendable_margin,
                                           limit_contribution,
                                           start_date,
                                           end_date,
                                           review_date,
                                           collateral_type,
                                           security_id,
                                           number_of_units,
                                           cap_amount,
                                           price_code,
                                           last_reval_price,
                                           next_reval_date,
                                           charge_type,
                                           reval_date,
                                           reval_collat,
                                           limit_ccy_amt,
                                           issuer_name,
                                           issuer_ref_no,
                                           secured,
                                           guarantor_id,
                                           rating,
                                           revokeable,
                                           revokedate,
                                           grace_days,
                                           tangible,
                                           liab_branch,
                                           process_no,
                                           conversion_date,
                                           record_stat,
                                           auth_stat,
                                           mod_no,
                                           maker_id,
                                           maker_dt_stamp,
                                           checker_id,
                                           checker_dt_stamp,
                                           once_auth,
                                           source,
                                           user_refno,
                                           udf_value_1,
                                           udf_value_2,
                                           udf_value_3,
                                           udf_value_4,
                                           udf_value_5,
                                           udf_value_6,
                                           udf_value_7,
                                           udf_value_8,
                                           udf_value_9,
                                           udf_value_10,
                                           udf_value_11,
                                           udf_value_12,
                                           udf_value_13,
                                           udf_value_14,
                                           udf_value_15,
                                           udf_value_16,
                                           udf_value_17,
                                           udf_value_18,
                                           udf_value_19,
                                           udf_value_20,
                                           udf_value_21,
                                           udf_value_22,
                                           udf_value_23,
                                           udf_value_24,
                                           udf_value_25,
                                           udf_value_26,
                                           udf_value_27,
                                           udf_value_28,
                                           udf_value_29,
                                           udf_value_30,
                                           udf_value_31,
                                           udf_value_32,
                                           udf_value_33,
                                           udf_value_34,
                                           udf_value_35,
                                           udf_value_36,
                                           udf_value_37,
                                           udf_value_38,
                                           udf_value_39,
                                           udf_value_40,
                                           udf_value_41,
                                           udf_value_42,
                                           udf_value_43,
                                           udf_value_44,
                                           udf_value_45,
                                           udf_value_46,
                                           udf_value_47,
                                           udf_value_48,
                                           udf_value_49,
                                           udf_value_50,
                                           sharing_req,
                                           auto_pool_create,
                                           contract_ref_no,
                                           branch_code,
                                           available,
                                           contract_source_ref_no,
                                           mortgage_initiated,
                                           interest_rate,
                                           util_amt,
                                           available_amount,
                                           matured_util,
                                           commitment_product,
                                           commitment_ref_no,
                                           commitment_settl_brn,
                                           commitment_settl_acc,
                                           commitment_branch,
                                           ext_rest_type,
                                           take_over,
                                           remarks,
                                           block_amt,
                                           block_amount,
                                           last_reval_date,
                                           last_reval_xrate)
         SELECT id,
                liab_id,
                collateral_code,
                collateral_description,
                category_id,
                collateral_currency,
                collateral_value,
                haircut,
                lendable_margin,
                limit_contribution,
                start_date,
                end_date,
                review_date,
                collateral_type,
                security_id,
                number_of_units,
                cap_amount,
                price_code,
                last_reval_price,
                next_reval_date,
                charge_type,
                reval_date,
                reval_collat,
                limit_ccy_amt,
                issuer_name,
                issuer_ref_no,
                secured,
                guarantor_id,
                rating,
                revokeable,
                revokedate,
                grace_days,
                tangible,
                liab_branch,
                process_no,
                conversion_date,
                record_stat,
                auth_stat,
                mod_no,
                maker_id,
                maker_dt_stamp,
                checker_id,
                checker_dt_stamp,
                once_auth,
                source,
                user_refno,
                udf_value_1,
                udf_value_2,
                udf_value_3,
                udf_value_4,
                udf_value_5,
                udf_value_6,
                udf_value_7,
                udf_value_8,
                udf_value_9,
                udf_value_10,
                udf_value_11,
                udf_value_12,
                udf_value_13,
                udf_value_14,
                udf_value_15,
                udf_value_16,
                udf_value_17,
                udf_value_18,
                udf_value_19,
                udf_value_20,
                udf_value_21,
                udf_value_22,
                udf_value_23,
                udf_value_24,
                udf_value_25,
                udf_value_26,
                udf_value_27,
                udf_value_28,
                udf_value_29,
                udf_value_30,
                udf_value_31,
                udf_value_32,
                udf_value_33,
                udf_value_34,
                udf_value_35,
                udf_value_36,
                udf_value_37,
                udf_value_38,
                udf_value_39,
                udf_value_40,
                udf_value_41,
                udf_value_42,
                udf_value_43,
                udf_value_44,
                udf_value_45,
                udf_value_46,
                udf_value_47,
                udf_value_48,
                udf_value_49,
                udf_value_50,
                sharing_req,
                auto_pool_create,
                contract_ref_no,
                branch_code,
                available,
                contract_source_ref_no,
                mortgage_initiated,
                interest_rate,
                util_amt,
                available_amount,
                matured_util,
                commitment_product,
                commitment_ref_no,
                commitment_settl_brn,
                commitment_settl_acc,
                commitment_branch,
                ext_rest_type,
                take_over,
                remarks,
                block_amt,
                block_amount,
                last_reval_date,
                last_reval_xrate
           FROM getm_collat@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_getm_coll_category
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'GETM COLL CATEGORY',
                   'GETM_COLL_CATEGORY',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_getm_coll_category';

      INSERT INTO stglive.src_getm_coll_category (id,
                                                  category_name,
                                                  description,
                                                  coll_type_id,
                                                  category_type,
                                                  secured,
                                                  review_date,
                                                  tangible,
                                                  reval_frequency,
                                                  reval_due_date,
                                                  reval_start_month,
                                                  remarks,
                                                  record_stat,
                                                  auth_stat,
                                                  mod_no,
                                                  maker_id,
                                                  maker_dt_stamp,
                                                  checker_id,
                                                  checker_dt_stamp,
                                                  once_auth,
                                                  source,
                                                  user_refno,
                                                  udf_value_1,
                                                  udf_value_2,
                                                  udf_value_3,
                                                  udf_value_4,
                                                  udf_value_5,
                                                  udf_value_6,
                                                  udf_value_7,
                                                  udf_value_8,
                                                  udf_value_9,
                                                  udf_value_10,
                                                  udf_value_11,
                                                  udf_value_12,
                                                  udf_value_13,
                                                  udf_value_14,
                                                  udf_value_15,
                                                  udf_value_16,
                                                  udf_value_17,
                                                  udf_value_18,
                                                  udf_value_19,
                                                  udf_value_20,
                                                  udf_value_21,
                                                  udf_value_22,
                                                  udf_value_23,
                                                  udf_value_24,
                                                  udf_value_25,
                                                  udf_value_26,
                                                  udf_value_27,
                                                  udf_value_28,
                                                  udf_value_29,
                                                  udf_value_30,
                                                  udf_value_31,
                                                  udf_value_32,
                                                  udf_value_33,
                                                  udf_value_34,
                                                  udf_value_35,
                                                  udf_value_36,
                                                  udf_value_37,
                                                  udf_value_38,
                                                  udf_value_39,
                                                  udf_value_40,
                                                  udf_value_41,
                                                  udf_value_42,
                                                  udf_value_43,
                                                  udf_value_44,
                                                  udf_value_45,
                                                  udf_value_46,
                                                  udf_value_47,
                                                  udf_value_48,
                                                  udf_value_49,
                                                  udf_value_50)
         SELECT id,
                category_name,
                description,
                coll_type_id,
                category_type,
                secured,
                review_date,
                tangible,
                reval_frequency,
                reval_due_date,
                reval_start_month,
                remarks,
                record_stat,
                auth_stat,
                mod_no,
                maker_id,
                maker_dt_stamp,
                checker_id,
                checker_dt_stamp,
                once_auth,
                source,
                user_refno,
                udf_value_1,
                udf_value_2,
                udf_value_3,
                udf_value_4,
                udf_value_5,
                udf_value_6,
                udf_value_7,
                udf_value_8,
                udf_value_9,
                udf_value_10,
                udf_value_11,
                udf_value_12,
                udf_value_13,
                udf_value_14,
                udf_value_15,
                udf_value_16,
                udf_value_17,
                udf_value_18,
                udf_value_19,
                udf_value_20,
                udf_value_21,
                udf_value_22,
                udf_value_23,
                udf_value_24,
                udf_value_25,
                udf_value_26,
                udf_value_27,
                udf_value_28,
                udf_value_29,
                udf_value_30,
                udf_value_31,
                udf_value_32,
                udf_value_33,
                udf_value_34,
                udf_value_35,
                udf_value_36,
                udf_value_37,
                udf_value_38,
                udf_value_39,
                udf_value_40,
                udf_value_41,
                udf_value_42,
                udf_value_43,
                udf_value_44,
                udf_value_45,
                udf_value_46,
                udf_value_47,
                udf_value_48,
                udf_value_49,
                udf_value_50
           FROM getm_coll_category@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_getm_coll_types
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'GETM COLL TYPES',
                   'GETM_COLL_TYPES',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_getm_coll_types';

      INSERT INTO stglive.src_getm_coll_types (id,
                                               collateral_type,
                                               description,
                                               record_stat,
                                               auth_stat,
                                               mod_no,
                                               maker_id,
                                               maker_dt_stamp,
                                               checker_id,
                                               checker_dt_stamp,
                                               once_auth,
                                               transaction_date,
                                               execution_date,
                                               transaction_status,
                                               source,
                                               user_refno,
                                               udf_value_1,
                                               udf_value_2,
                                               udf_value_3,
                                               udf_value_4,
                                               udf_value_5,
                                               udf_value_6,
                                               udf_value_7,
                                               udf_value_8,
                                               udf_value_9,
                                               udf_value_10,
                                               udf_value_11,
                                               udf_value_12,
                                               udf_value_13,
                                               udf_value_14,
                                               udf_value_15,
                                               udf_value_16,
                                               udf_value_17,
                                               udf_value_18,
                                               udf_value_19,
                                               udf_value_20,
                                               udf_value_21,
                                               udf_value_22,
                                               udf_value_23,
                                               udf_value_24,
                                               udf_value_25,
                                               udf_value_26,
                                               udf_value_27,
                                               udf_value_28,
                                               udf_value_29,
                                               udf_value_30,
                                               udf_value_31,
                                               udf_value_32,
                                               udf_value_33,
                                               udf_value_34,
                                               udf_value_35,
                                               udf_value_36,
                                               udf_value_37,
                                               udf_value_38,
                                               udf_value_39,
                                               udf_value_40,
                                               udf_value_41,
                                               udf_value_42,
                                               udf_value_43,
                                               udf_value_44,
                                               udf_value_45,
                                               udf_value_46,
                                               udf_value_47,
                                               udf_value_48,
                                               udf_value_49,
                                               udf_value_50,
                                               interest_rate)
         SELECT id,
                collateral_type,
                description,
                record_stat,
                auth_stat,
                mod_no,
                maker_id,
                maker_dt_stamp,
                checker_id,
                checker_dt_stamp,
                once_auth,
                transaction_date,
                execution_date,
                transaction_status,
                source,
                user_refno,
                udf_value_1,
                udf_value_2,
                udf_value_3,
                udf_value_4,
                udf_value_5,
                udf_value_6,
                udf_value_7,
                udf_value_8,
                udf_value_9,
                udf_value_10,
                udf_value_11,
                udf_value_12,
                udf_value_13,
                udf_value_14,
                udf_value_15,
                udf_value_16,
                udf_value_17,
                udf_value_18,
                udf_value_19,
                udf_value_20,
                udf_value_21,
                udf_value_22,
                udf_value_23,
                udf_value_24,
                udf_value_25,
                udf_value_26,
                udf_value_27,
                udf_value_28,
                udf_value_29,
                udf_value_30,
                udf_value_31,
                udf_value_32,
                udf_value_33,
                udf_value_34,
                udf_value_35,
                udf_value_36,
                udf_value_37,
                udf_value_38,
                udf_value_39,
                udf_value_40,
                udf_value_41,
                udf_value_42,
                udf_value_43,
                udf_value_44,
                udf_value_45,
                udf_value_46,
                udf_value_47,
                udf_value_48,
                udf_value_49,
                udf_value_50,
                interest_rate
           FROM getm_coll_types@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_getb_pool_link
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'GETB POOL LINK',
                   'GETB_POOL_LINK',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_getb_pool_link';

      INSERT INTO stglive.src_getb_pool_link (liab_id,
                                              pool_id,
                                              TYPE,
                                              facility_branch_code,
                                              facility_id,
                                              facility_currency,
                                              facility_amount,
                                              facility_amount_pool_ccy,
                                              percentage_of_pool,
                                              percentage_of_contract,
                                              id,
                                              mod_no,
                                              last_reval_rate,
                                              reference_no)
         SELECT liab_id,
                pool_id,
                TYPE,
                facility_branch_code,
                facility_id,
                facility_currency,
                facility_amount,
                facility_amount_pool_ccy,
                percentage_of_pool,
                percentage_of_contract,
                id,
                mod_no,
                last_reval_rate,
                reference_no
           FROM getb_pool_link@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;


   PROCEDURE prc_getm_pool_coll_linkages
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'GETM POOL COLL LINKAGES',
                   'GETM_POOL_COLL_LINKAGES',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_getm_pool_coll_linkages';

      INSERT INTO stglive.src_getm_pool_coll_linkages (
                     id,
                     liab_id,
                     pool_id,
                     order_no,
                     TYPE,
                     branch_code,
                     function_type,
                     collateral_id,
                     collateral_currency,
                     collateral_amount,
                     linked_amount,
                     linked_amount_pool_ccy,
                     auto_delink,
                     utilization,
                     lien_number,
                     co_native,
                     linked_percent_number,
                     diff_amount,
                     auth_stat,
                     mod_no,
                     user_refno,
                     last_reval_date,
                     last_reval_xrate,
                     available_interest_rate,
                     interest_spread,
                     rate_of_interest,
                     expiry_date)
         SELECT id,
                liab_id,
                pool_id,
                order_no,
                TYPE,
                branch_code,
                function_type,
                collateral_id,
                collateral_currency,
                collateral_amount,
                linked_amount,
                linked_amount_pool_ccy,
                auto_delink,
                utilization,
                lien_number,
                co_native,
                linked_percent_number,
                diff_amount,
                auth_stat,
                mod_no,
                user_refno,
                last_reval_date,
                last_reval_xrate,
                available_interest_rate,
                interest_spread,
                rate_of_interest,
                expiry_date
           FROM getm_pool_coll_linkages@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_actb_daily_log
   AS
--      v_message          VARCHAR2 (4000);
--      v_rows_processed   NUMBER;
--      v_date             DATE := TRUNC (SYSDATE);
--      v_seq              NUMBER;
--      v_rows_count       INTEGER;
--      v_sql              VARCHAR2 (10000);
v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (32000);
      tab_cnt            integer; 
      
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'ACTB DAILY LOG DERIVE',
                   'ACTB_DAILY_LOG',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


--      EXECUTE IMMEDIATE 'truncate table src_actb_daily_log';
--
--      INSERT /*+ append parallel */ 
--      INTO stglive.src_actb_daily_log (ac_branch,
--                                              ac_ccy,
--                                              ac_entry_sr_no,
--                                              ac_no,
--                                              aml_exception,
--                                              amount_tag,
--                                              auth_id,
--                                              auth_stat,
--                                              avldays,
--                                              balance_upd,
--                                              bank_code,
--                                              batch_no,
--                                              category,
--                                              curr_no,
--                                              cust_gl,
--                                              cust_gl_update,
--                                              delete_stat,
--                                              distributed,
--                                              dont_showin_stmt,
--                                              drcr_ind,
--                                              entry_seq_no,
--                                              event,
--                                              event_sr_no,
--                                              exch_rate,
--                                              external_ref_no,
--                                              fcy_amount,
--                                              financial_cycle,
--                                              flg_position_status,
--                                              glmis_update_flag,
--                                              glmis_update_status,
--                                              glmis_val_upd_flag,
--                                              ib,
--                                              ic_bal_inclusion,
--                                              il_bvt_processed,
--                                              instrument_code,
--                                              lcy_amount,
--                                              mis_flag,
--                                              mis_head,
--                                              mis_spread,
--                                              module,
--                                              netting_ind,
--                                              node,
--                                              node_sr_no,
--                                              on_line,
--                                              orig_pnl_gl,
--                                              period_code,
--                                              print_stat,
--                                              processed_flag,
--                                              product,
--                                              product_accrual,
--                                              related_account,
--                                              related_customer,
--                                              related_reference,
--                                              stmt_dt,
--                                              trn_code,
--                                              trn_dt,
--                                              trn_ref_no,
--                                              txn_init_date,
--                                              TYPE,
--                                              updact,
--                                              user_id,
--                                              value_dt,
--                                              vdbal_update_flag)
--         SELECT ac_branch,
--                ac_ccy,
--                ac_entry_sr_no,
--                ac_no,
--                aml_exception,
--                amount_tag,
--                auth_id,
--                auth_stat,
--                avldays,
--                balance_upd,
--                bank_code,
--                batch_no,
--                category,
--                curr_no,
--                cust_gl,
--                cust_gl_update,
--                delete_stat,
--                distributed,
--                dont_showin_stmt,
--                drcr_ind,
--                entry_seq_no,
--                event,
--                event_sr_no,
--                exch_rate,
--                external_ref_no,
--                fcy_amount,
--                financial_cycle,
--                flg_position_status,
--                glmis_update_flag,
--                glmis_update_status,
--                glmis_val_upd_flag,
--                ib,
--                ic_bal_inclusion,
--                il_bvt_processed,
--                instrument_code,
--                lcy_amount,
--                mis_flag,
--                mis_head,
--                mis_spread,
--                module,
--                netting_ind,
--                node,
--                node_sr_no,
--                on_line,
--                orig_pnl_gl,
--                period_code,
--                print_stat,
--                processed_flag,
--                product,
--                product_accrual,
--                related_account,
--                related_customer,
--                related_reference,
--                stmt_dt,
--                trn_code,
--                trn_dt,
--                trn_ref_no,
--                txn_init_date,
--                TYPE,
--                updact,
--                user_id,
--                value_dt,
--                vdbal_update_flag
--           FROM actb_daily_log@loc_fcubslive;
--
--      v_rows_processed := SQL%ROWCOUNT;


 begin
        select count(*) into tab_cnt from sys.all_tables where lower(table_name)='tmp_actb_daily_log' and owner = 'STGLIVE';
        EXCEPTION
        WHEN NO_DATA_FOUND THEN
            tab_cnt:=0;
      end;
  
      if(tab_cnt)=1 Then
        execute immediate 'drop table tmp_actb_daily_log';
        v_sql := 'CREATE TABLE tmp_actb_daily_log AS SELECT /*+ PARALLEL(auto) */
      MODULE,
       TRN_REF_NO,
       EVENT_SR_NO,
       EVENT,
       AC_ENTRY_SR_NO,
       AC_BRANCH,
       AC_NO,
       AC_CCY,
       DRCR_IND,
       TRN_CODE,
       AMOUNT_TAG,
       FCY_AMOUNT,
       EXCH_RATE,
       LCY_AMOUNT,
       RELATED_CUSTOMER,
       RELATED_ACCOUNT,
       RELATED_REFERENCE,
       MIS_FLAG,
       MIS_HEAD,
       TRN_DT,
       VALUE_DT,
       TXN_INIT_DATE,
       FINANCIAL_CYCLE,
       PERIOD_CODE,
       INSTRUMENT_CODE,
       BATCH_NO,
       CURR_NO,
       USER_ID,
       BANK_CODE,
       AVLDAYS,
       BALANCE_UPD,
       TYPE,
       AUTH_ID,
       PRINT_STAT,
       AUTH_STAT,
       CATEGORY,
       CUST_GL,
       DISTRIBUTED,
       NODE,
       DELETE_STAT,
       ON_LINE,
       UPDACT,
       NODE_SR_NO,
       NETTING_IND,
       IB,
       FLG_POSITION_STATUS,
       GLMIS_UPDATE_FLAG,
       PRODUCT_ACCRUAL,
       GLMIS_UPDATE_STATUS,
       VDBAL_UPDATE_FLAG,
       PRODUCT,
       GLMIS_VAL_UPD_FLAG,
       EXTERNAL_REF_NO,
       PROCESSED_FLAG,
       MIS_SPREAD,
       CUST_GL_UPDATE,
       DONT_SHOWIN_STMT,
       IC_BAL_INCLUSION,
       AML_EXCEPTION,
       ORIG_PNL_GL,
       STMT_DT,
       ENTRY_SEQ_NO,
       IL_BVT_PROCESSED,
       '||1||' QSET
        FROM actb_daily_log@loc_fcubs';
        execute immediate v_sql;
        v_rows_processed := sql%rowcount;
        else
        v_sql := 'CREATE TABLE tmp_actb_daily_log AS SELECT /*+ PARALLEL(auto) */
      MODULE,
       TRN_REF_NO,
       EVENT_SR_NO,
       EVENT,
       AC_ENTRY_SR_NO,
       AC_BRANCH,
       AC_NO,
       AC_CCY,
       DRCR_IND,
       TRN_CODE,
       AMOUNT_TAG,
       FCY_AMOUNT,
       EXCH_RATE,
       LCY_AMOUNT,
       RELATED_CUSTOMER,
       RELATED_ACCOUNT,
       RELATED_REFERENCE,
       MIS_FLAG,
       MIS_HEAD,
       TRN_DT,
       VALUE_DT,
       TXN_INIT_DATE,
       FINANCIAL_CYCLE,
       PERIOD_CODE,
       INSTRUMENT_CODE,
       BATCH_NO,
       CURR_NO,
       USER_ID,
       BANK_CODE,
       AVLDAYS,
       BALANCE_UPD,
       TYPE,
       AUTH_ID,
       PRINT_STAT,
       AUTH_STAT,
       CATEGORY,
       CUST_GL,
       DISTRIBUTED,
       NODE,
       DELETE_STAT,
       ON_LINE,
       UPDACT,
       NODE_SR_NO,
       NETTING_IND,
       IB,
       FLG_POSITION_STATUS,
       GLMIS_UPDATE_FLAG,
       PRODUCT_ACCRUAL,
       GLMIS_UPDATE_STATUS,
       VDBAL_UPDATE_FLAG,
       PRODUCT,
       GLMIS_VAL_UPD_FLAG,
       EXTERNAL_REF_NO,
       PROCESSED_FLAG,
       MIS_SPREAD,
       CUST_GL_UPDATE,
       DONT_SHOWIN_STMT,
       IC_BAL_INCLUSION,
       AML_EXCEPTION,
       ORIG_PNL_GL,
       STMT_DT,
       ENTRY_SEQ_NO,
       IL_BVT_PROCESSED,
       '||1||' QSET
        FROM actb_daily_log@loc_fcubs';
        execute immediate v_sql;
        v_rows_processed := sql%rowcount;
        end if;
        
        execute immediate 'alter table stglive.src_actb_daily_log 
                    exchange partition P' ||to_number(10)|| ' with table tmp_actb_daily_log';
                    
                    prc_index_rebuild('DAILYLOGACCTS1');
                    prc_index_rebuild('IDX_DAILYLOG_TRNREF1'); 
                    commit;


      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_ictm_acc
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'ICTM ACC DERIVE',
                   'ICTM_ACC',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_ictm_acc';

      INSERT INTO stglive.src_ictm_acc (acc,
                                        acc_type,
                                        allow_prepayment,
                                        auto_extension,
                                        auto_rollover,
                                        book_acc,
                                        book_brn,
                                        book_ccy,
                                        brn,
                                        bvt_date,
                                        calc_acc,
                                        charge_book_acc,
                                        charge_book_brn,
                                        charge_book_ccy,
                                        chg_start_date,
                                        close_on_maturity,
                                        combvt_date,
                                        dep_tenor_pref,
                                        has_drcr_adv,
                                        has_is,
                                        interest_rate,
                                        intrate_cumamt_reqd,
                                        intrate_cumamt_roll_reqd,
                                        int_start_date,
                                        last_is_date,
                                        last_rollover_date,
                                        liquidation_amt,
                                        maturity_amount,
                                        maturity_date,
                                        move_int_to_unclaimed,
                                        move_pric_to_unclaimed,
                                        next_maturity_date,
                                        orig_tenor_days,
                                        orig_tenor_months,
                                        orig_tenor_years,
                                        override_amt_block,
                                        princ_liq_ac,
                                        princ_liq_branch,
                                        rd_auto_pmnt_takedown,
                                        rd_flag,
                                        rd_installment_amt,
                                        rd_move_funds_on_ovd,
                                        rd_move_mat_to_unclaimed,
                                        rd_payment_acc,
                                        rd_payment_brn,
                                        rd_payment_ccy,
                                        rd_pay_schdt,
                                        rd_takedown_days,
                                        rd_takedown_months,
                                        rd_takedown_years,
                                        redm_int_payout,
                                        rollover_amt,
                                        rollover_type,
                                        roll_tenor_days,
                                        roll_tenor_months,
                                        roll_tenor_pref,
                                        roll_tenor_years,
                                        tenor_code)
         SELECT acc,
                acc_type,
                allow_prepayment,
                auto_extension,
                auto_rollover,
                book_acc,
                book_brn,
                book_ccy,
                brn,
                bvt_date,
                calc_acc,
                charge_book_acc,
                charge_book_brn,
                charge_book_ccy,
                chg_start_date,
                close_on_maturity,
                combvt_date,
                dep_tenor_pref,
                has_drcr_adv,
                has_is,
                interest_rate,
                intrate_cumamt_reqd,
                intrate_cumamt_roll_reqd,
                int_start_date,
                last_is_date,
                last_rollover_date,
                liquidation_amt,
                maturity_amount,
                maturity_date,
                move_int_to_unclaimed,
                move_pric_to_unclaimed,
                next_maturity_date,
                orig_tenor_days,
                orig_tenor_months,
                orig_tenor_years,
                override_amt_block,
                princ_liq_ac,
                princ_liq_branch,
                rd_auto_pmnt_takedown,
                rd_flag,
                rd_installment_amt,
                rd_move_funds_on_ovd,
                rd_move_mat_to_unclaimed,
                rd_payment_acc,
                rd_payment_brn,
                rd_payment_ccy,
                rd_pay_schdt,
                rd_takedown_days,
                rd_takedown_months,
                rd_takedown_years,
                redm_int_payout,
                rollover_amt,
                rollover_type,
                roll_tenor_days,
                roll_tenor_months,
                roll_tenor_pref,
                roll_tenor_years,
                tenor_code
           FROM ictm_acc@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_elv_pol_col_link_odint_new
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'ELV LINK ODINT NEW DERIVE',
                   'ELV_POL_COL_LINK_ODINT_NEW',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_elv_pol_col_link_odint_new';

      INSERT INTO stglive.src_elv_pol_col_link_odint_new (
                     available_interest_rate,
                     branch_code,
                     collateral_amount,
                     collateral_code,
                     collateral_currency,
                     collateral_id,
                     eff_end_date,
                     eff_start_date,
                     expiry_date,
                     interest_spread,
                     liab_id,
                     liab_no,
                     linked_amount,
                     linked_amount_pool_ccy,
                     linked_percent_number,
                     order_no,
                     pool_code,
                     pool_id,
                     rate_of_interest,
                     start_date,
                     TYPE,
                     utilization)
         SELECT available_interest_rate,
                branch_code,
                collateral_amount,
                collateral_code,
                collateral_currency,
                collateral_id,
                eff_end_date,
                eff_start_date,
                expiry_date,
                interest_spread,
                liab_id,
                liab_no,
                linked_amount,
                linked_amount_pool_ccy,
                linked_percent_number,
                order_no,
                pool_code,
                pool_id,
                rate_of_interest,
                start_date,
                TYPE,
                utilization
           FROM elvw_pool_coll_link_odint_new@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_svtm_acc_sig_master
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'SVTM ACC SIG MASTER DERIVE',
                   'SVTM_ACC_SIG_MASTER',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_svtm_acc_sig_master';

      INSERT INTO stglive.src_svtm_acc_sig_master (branch,
                                                   acc_no,
                                                   acc_msg,
                                                   min_no_of_sig)
         SELECT branch,
                acc_no,
                acc_msg,
                min_no_of_sig
           FROM svtm_acc_sig_master@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_getm_liab_cust
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'GETM LIAB CUST DERIVE',
                   'GETM_LIAB_CUST',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_getm_liab_cust';

      INSERT /*+ append parallel */
            INTO  stglive.src_getm_liab_cust (id,
                                              branch_code,
                                              customer_no,
                                              liab_id,
                                              record_stat,
                                              auth_stat,
                                              mod_no,
                                              maker_id,
                                              maker_dt_stamp,
                                              checker_id,
                                              checker_dt_stamp,
                                              once_auth,
                                              source,
                                              user_refno,
                                              udf_value_1,
                                              udf_value_2,
                                              udf_value_3,
                                              udf_value_4,
                                              udf_value_5,
                                              udf_value_6,
                                              udf_value_7,
                                              udf_value_8,
                                              udf_value_9,
                                              udf_value_10,
                                              udf_value_11,
                                              udf_value_12,
                                              udf_value_13,
                                              udf_value_14,
                                              udf_value_15,
                                              udf_value_16,
                                              udf_value_17,
                                              udf_value_18,
                                              udf_value_19,
                                              udf_value_20,
                                              udf_value_21,
                                              udf_value_22,
                                              udf_value_23,
                                              udf_value_24,
                                              udf_value_25,
                                              udf_value_26,
                                              udf_value_27,
                                              udf_value_28,
                                              udf_value_29,
                                              udf_value_30,
                                              udf_value_31,
                                              udf_value_32,
                                              udf_value_33,
                                              udf_value_34,
                                              udf_value_35,
                                              udf_value_36,
                                              udf_value_37,
                                              udf_value_38,
                                              udf_value_39,
                                              udf_value_40,
                                              udf_value_41,
                                              udf_value_42,
                                              udf_value_43,
                                              udf_value_44,
                                              udf_value_45,
                                              udf_value_46,
                                              udf_value_47,
                                              udf_value_48,
                                              udf_value_49,
                                              udf_value_50,
                                              fx_cust_clean_risk_limit)
         SELECT id,
                branch_code,
                customer_no,
                liab_id,
                record_stat,
                auth_stat,
                mod_no,
                maker_id,
                maker_dt_stamp,
                checker_id,
                checker_dt_stamp,
                once_auth,
                source,
                user_refno,
                udf_value_1,
                udf_value_2,
                udf_value_3,
                udf_value_4,
                udf_value_5,
                udf_value_6,
                udf_value_7,
                udf_value_8,
                udf_value_9,
                udf_value_10,
                udf_value_11,
                udf_value_12,
                udf_value_13,
                udf_value_14,
                udf_value_15,
                udf_value_16,
                udf_value_17,
                udf_value_18,
                udf_value_19,
                udf_value_20,
                udf_value_21,
                udf_value_22,
                udf_value_23,
                udf_value_24,
                udf_value_25,
                udf_value_26,
                udf_value_27,
                udf_value_28,
                udf_value_29,
                udf_value_30,
                udf_value_31,
                udf_value_32,
                udf_value_33,
                udf_value_34,
                udf_value_35,
                udf_value_36,
                udf_value_37,
                udf_value_38,
                udf_value_39,
                udf_value_40,
                udf_value_41,
                udf_value_42,
                udf_value_43,
                udf_value_44,
                udf_value_45,
                udf_value_46,
                udf_value_47,
                udf_value_48,
                udf_value_49,
                udf_value_50,
                fx_cust_clean_risk_limit
           FROM getm_liab_cust@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_sttm_bank
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'STTM BANK DERIVE',
                   'STTM_BANK',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_sttm_bank';

      INSERT INTO stglive.src_sttm_bank (auto_gen_cif,
                                         interface_id,
                                         spl_files_prg_days,
                                         cif_mask,
                                         bank_code,
                                         bank_name,
                                         ho_branch,
                                         discount_ccy,
                                         reporting_currency,
                                         ho_currency,
                                         ib_account_scheme,
                                         customer_acc_mask,
                                         gl_mask,
                                         ex_rate_copy,
                                         record_stat,
                                         auth_stat,
                                         mod_no,
                                         maker_id,
                                         maker_dt_stamp,
                                         checker_id,
                                         checker_dt_stamp,
                                         once_auth,
                                         online_gl_update,
                                         year_end_pnl_trncode,
                                         year_end_pnl_gl,
                                         dw_ac_no,
                                         dw_ac_no_width,
                                         flg_position_ac,
                                         gl_tab_prg_days,
                                         bank_lcy,
                                         checksum_algorithm,
                                         chq_no_chk_dgt,
                                         chq_numbering,
                                         unique_cheque_no,
                                         spread_application,
                                         daily_mis_refinance,
                                         auto_generate_batch,
                                         fl_br_rate_prop,
                                         interbranch_entity,
                                         routing_mask,
                                         clg_bank_cd,
                                         auto_gen_ccy_mismatch_entries,
                                         auto_gen_vd_mismatch_entries,
                                         ccy_mismatch_acc,
                                         vdate_mismatch_acc,
                                         ccy_mismatch_cont_acc,
                                         vdate_mismatch_cont_acc,
                                         lead_days,
                                         unique_lodgment_no,
                                         trs_sort_code,
                                         trs_acc_no,
                                         trs_suspence_acc,
                                         trs_pc_prod_category,
                                         limits_history_required,
                                         user_batch_restriction,
                                         branch_wise_limits,
                                         propagate_cif,
                                         propagate_cust_addr,
                                         propagate_bic,
                                         cif_mask_maint,
                                         pairwise_pos_handoff,
                                         sso_installed,
                                         alw_inv_track,
                                         external_bank_code,
                                         tl_exp_day,
                                         ac_restr_apply,
                                         mudarabah_gl_balance_type,
                                         fund_ib_acc_scheme,
                                         fund_ib_entity,
                                         auto_account_closure,
                                         limit_track_cif_corp,
                                         limit_track_cif_bank,
                                         limit_track_cif_indl,
                                         drawer_check_ret_count,
                                         reuse_cif_no,
                                         reuse_acc_no,
                                         min_pb_digits,
                                         rm_hierarchy_setup,
                                         fatca_applicable,
                                         fatca_bank_clasifcn,
                                         fatca_ein,
                                         fatca_irs_issue_date,
                                         fatca_irs_expiry_date,
                                         fatca_remarks,
                                         fatca_giin,
                                         chqno_mask)
         SELECT auto_gen_cif,
                interface_id,
                spl_files_prg_days,
                cif_mask,
                bank_code,
                bank_name,
                ho_branch,
                discount_ccy,
                reporting_currency,
                ho_currency,
                ib_account_scheme,
                customer_acc_mask,
                gl_mask,
                ex_rate_copy,
                record_stat,
                auth_stat,
                mod_no,
                maker_id,
                maker_dt_stamp,
                checker_id,
                checker_dt_stamp,
                once_auth,
                online_gl_update,
                year_end_pnl_trncode,
                year_end_pnl_gl,
                dw_ac_no,
                dw_ac_no_width,
                flg_position_ac,
                gl_tab_prg_days,
                bank_lcy,
                checksum_algorithm,
                chq_no_chk_dgt,
                chq_numbering,
                unique_cheque_no,
                spread_application,
                daily_mis_refinance,
                auto_generate_batch,
                fl_br_rate_prop,
                interbranch_entity,
                routing_mask,
                clg_bank_cd,
                auto_gen_ccy_mismatch_entries,
                auto_gen_vd_mismatch_entries,
                ccy_mismatch_acc,
                vdate_mismatch_acc,
                ccy_mismatch_cont_acc,
                vdate_mismatch_cont_acc,
                lead_days,
                unique_lodgment_no,
                trs_sort_code,
                trs_acc_no,
                trs_suspence_acc,
                trs_pc_prod_category,
                limits_history_required,
                user_batch_restriction,
                branch_wise_limits,
                propagate_cif,
                propagate_cust_addr,
                propagate_bic,
                cif_mask_maint,
                pairwise_pos_handoff,
                sso_installed,
                alw_inv_track,
                external_bank_code,
                tl_exp_day,
                ac_restr_apply,
                mudarabah_gl_balance_type,
                fund_ib_acc_scheme,
                fund_ib_entity,
                auto_account_closure,
                limit_track_cif_corp,
                limit_track_cif_bank,
                limit_track_cif_indl,
                drawer_check_ret_count,
                reuse_cif_no,
                reuse_acc_no,
                min_pb_digits,
                rm_hierarchy_setup,
                fatca_applicable,
                fatca_bank_clasifcn,
                fatca_ein,
                fatca_irs_issue_date,
                fatca_irs_expiry_date,
                fatca_remarks,
                fatca_giin,
                chqno_mask
           FROM sttm_bank@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_swtb_txn_hist
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE;
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;
      
      select case when today > trunc(sysdate) then prev_working_day else today end into v_date
      from src_sttm_dates where branch_code = '099';

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'SWTB_TXN_HIST DERIVE',
                   'SWTB_TXN_HIST',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table tmp_src_swtb_txn_hist';

      INSERT INTO stglive.tmp_src_swtb_txn_hist (p_key,
                                                 msg_type,
                                                 yyyymm,
                                                 pan,
                                                 proc_code,
                                                 txn_amt,
                                                 setl_amt,
                                                 bill_amt,
                                                 trans_dt_time,
                                                 stan,
                                                 acq_ins_id,
                                                 fwd_ins_id,
                                                 rrn,
                                                 resp_code,
                                                 term_id,
                                                 txn_ccy_code,
                                                 setl_ccy_code,
                                                 bill_ccy_code,
                                                 from_acc,
                                                 to_acc,
                                                 txn_desc,
                                                 exp_date,
                                                 setl_date,
                                                 conv_date,
                                                 capt_date,
                                                 msg_flow,
                                                 work_progress,
                                                 err_param,
                                                 trn_ref_no,
                                                 amount_block_no,
                                                 purge_date,
                                                 xref,
                                                 add_amt,
                                                 mini_stmt_data,
                                                 ERROR_CODE,
                                                 pre_auth_seq_no,
                                                 reconsiled,
                                                 dcn,
                                                 offus_onus)
         SELECT p_key,
                msg_type,
                TO_CHAR (TO_DATE (trans_dt_time, 'mmddhh24miss'), 'yyyymm')
                   yyyymm,
                pan,
                proc_code,
                txn_amt,
                setl_amt,
                bill_amt,
                trans_dt_time,
                stan,
                acq_ins_id,
                fwd_ins_id,
                rrn,
                resp_code,
                term_id,
                txn_ccy_code,
                setl_ccy_code,
                bill_ccy_code,
                from_acc,
                to_acc,
                txn_desc,
                exp_date,
                setl_date,
                conv_date,
                capt_date,
                msg_flow,
                work_progress,
                err_param,
                trn_ref_no,
                amount_block_no,
                purge_date,
                xref,
                add_amt,
                mini_stmt_data,
                ERROR_CODE,
                pre_auth_seq_no,
                reconsiled,
                dcn,
                offus_onus
           FROM swtb_txn_hist@loc_fcubslive
          WHERE TRUNC (purge_date - 30) = TRUNC (v_date - 1);

      ---to_char(to_date(trans_dt_time, 'mmddhh24miss'),'yyyymm') between to_char(trunc(sysdate, 'mm')-1, 'yyyymm') and to_char(sysdate, 'yyyymm');

      v_rows_processed := SQL%ROWCOUNT;

      COMMIT;

      EXECUTE IMMEDIATE
            'alter table src_swtb_txn_hist truncate partition P'
         || TO_CHAR (TRUNC (SYSDATE, 'mm') - 1, 'yyyymm');

      EXECUTE IMMEDIATE
            'alter table src_swtb_txn_hist truncate partition P'
         || TO_CHAR (SYSDATE, 'yyyymm');

      INSERT INTO src_swtb_txn_hist (p_key,
                                     yyyymm,
                                     msg_type,
                                     pan,
                                     proc_code,
                                     txn_amt,
                                     setl_amt,
                                     bill_amt,
                                     trans_dt_time,
                                     stan,
                                     acq_ins_id,
                                     fwd_ins_id,
                                     rrn,
                                     resp_code,
                                     term_id,
                                     txn_ccy_code,
                                     setl_ccy_code,
                                     bill_ccy_code,
                                     from_acc,
                                     to_acc,
                                     txn_desc,
                                     exp_date,
                                     setl_date,
                                     conv_date,
                                     capt_date,
                                     msg_flow,
                                     work_progress,
                                     err_param,
                                     trn_ref_no,
                                     amount_block_no,
                                     purge_date,
                                     xref,
                                     add_amt,
                                     mini_stmt_data,
                                     ERROR_CODE,
                                     pre_auth_seq_no,
                                     reconsiled,
                                     dcn,
                                     offus_onus)
         SELECT p_key,
                yyyymm,
                msg_type,
                pan,
                proc_code,
                txn_amt,
                setl_amt,
                bill_amt,
                trans_dt_time,
                stan,
                acq_ins_id,
                fwd_ins_id,
                rrn,
                resp_code,
                term_id,
                txn_ccy_code,
                setl_ccy_code,
                bill_ccy_code,
                from_acc,
                to_acc,
                txn_desc,
                exp_date,
                setl_date,
                conv_date,
                capt_date,
                msg_flow,
                work_progress,
                err_param,
                trn_ref_no,
                amount_block_no,
                purge_date,
                xref,
                add_amt,
                mini_stmt_data,
                ERROR_CODE,
                pre_auth_seq_no,
                reconsiled,
                dcn,
                offus_onus
           FROM tmp_src_swtb_txn_hist;

      COMMIT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_sttm_cusacc_aclass
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'STTM CUSACC ACLASS DERIVE',
                   'STTM_CUSACC_ACLASS',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_sttm_cusacc_aclass';

      INSERT INTO stglive.src_sttm_cusacc_aclass (
                     cust_ac_no,
                     account_class,
                     old_ac_class,
                     effective_date,
                     cr_gl,
                     dr_gl,
                     cr_cb_line,
                     dr_cb_line,
                     cr_ho_line,
                     dr_ho_line,
                     acc_stmt_type,
                     statement_day,
                     acc_stmt_cycle,
                     cheque_book_facility,
                     passbook_facility,
                     atm_facility,
                     offline_limit,
                     acc_stmt_type2,
                     statement_day2,
                     acc_stmt_cycle2,
                     acc_stmt_type3,
                     statement_day3,
                     acc_stmt_cycle3,
                     track_receivable,
                     reg_d_applicable,
                     regd_periodicity,
                     referral_required,
                     lodgement_book,
                     auto_reorder_check_required,
                     auto_reorder_check_level,
                     auto_reorder_check_leaves,
                     status_change_automatic,
                     allow_back_period_entry,
                     excl_sameday_rvrtrns_fm_stmt,
                     auto_prov_reqd,
                     exposure_category,
                     prov_ccy_type,
                     dormant_param,
                     sweep_mode,
                     min_bal_reqd,
                     consolidation_reqd,
                     processed_status,
                     branch_code,
                     remarks,
                     mod_no,
                     record_stat,
                     once_auth,
                     auth_stat,
                     maker_id,
                     maker_dt_stamp,
                     checker_id,
                     checker_dt_stamp,
                     next_liqd_cycle,
                     ccy,
                     atm_cust_ac_no,
                     atm_dly_amt_limit,
                     atm_dly_count_limit,
                     checkbook_name_1,
                     checkbook_name_2,
                     statement_account,
                     processed_date,
                     acc_status,
                     dormancy_days)
         SELECT cust_ac_no,
                account_class,
                old_ac_class,
                effective_date,
                cr_gl,
                dr_gl,
                cr_cb_line,
                dr_cb_line,
                cr_ho_line,
                dr_ho_line,
                acc_stmt_type,
                statement_day,
                acc_stmt_cycle,
                cheque_book_facility,
                passbook_facility,
                atm_facility,
                offline_limit,
                acc_stmt_type2,
                statement_day2,
                acc_stmt_cycle2,
                acc_stmt_type3,
                statement_day3,
                acc_stmt_cycle3,
                track_receivable,
                reg_d_applicable,
                regd_periodicity,
                referral_required,
                lodgement_book,
                auto_reorder_check_required,
                auto_reorder_check_level,
                auto_reorder_check_leaves,
                status_change_automatic,
                allow_back_period_entry,
                excl_sameday_rvrtrns_fm_stmt,
                auto_prov_reqd,
                exposure_category,
                prov_ccy_type,
                dormant_param,
                sweep_mode,
                min_bal_reqd,
                consolidation_reqd,
                processed_status,
                branch_code,
                remarks,
                mod_no,
                record_stat,
                once_auth,
                auth_stat,
                maker_id,
                maker_dt_stamp,
                checker_id,
                checker_dt_stamp,
                next_liqd_cycle,
                ccy,
                atm_cust_ac_no,
                atm_dly_amt_limit,
                atm_dly_count_limit,
                checkbook_name_1,
                checkbook_name_2,
                statement_account,
                processed_date,
                acc_status,
                dormancy_days
           FROM sttm_cusacc_aclass@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_cftb_charge_liqd_master
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'CFTB CHARGE LIQD MASTER DERIVE',
                   'CFTB_CHARGE_LIQD_MASTER',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_cftb_charge_liqd_master';

      INSERT INTO stglive.src_cftb_charge_liqd_master (
                     contract_ref_no,
                     event_seq_no,
                     component,
                     event,
                     transaction_date,
                     value_date,
                     association_contract_ref_no,
                     association_event_seq_no,
                     association_product,
                     counterparty,
                     charge_ccy,
                     charge_amount,
                     liquidation_status,
                     reversal_event_seq_no,
                     reversal_event,
                     reversal_transaction_date,
                     reversal_value_date,
                     amt_in_cont_ccy,
                     contract_ccy,
                     ac_or_gl)
         SELECT contract_ref_no,
                event_seq_no,
                component,
                event,
                transaction_date,
                value_date,
                association_contract_ref_no,
                association_event_seq_no,
                association_product,
                counterparty,
                charge_ccy,
                charge_amount,
                liquidation_status,
                reversal_event_seq_no,
                reversal_event,
                reversal_transaction_date,
                reversal_value_date,
                amt_in_cont_ccy,
                contract_ccy,
                ac_or_gl
           FROM cftb_charge_liqd_master@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;


   PROCEDURE prc_fbtb_function_description
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'FBTB FUNCTION DESCRIPTION DERIVE',
                   'FBTB_FUNCTION_DESCRIPTION',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_fbtb_function_description';

      INSERT INTO stglive.src_fbtb_function_description (lang_code,
                                                         function_id,
                                                         main_menu,
                                                         sub_menu_1,
                                                         sub_menu_2,
                                                         baloon_help,
                                                         branch_module,
                                                         branch_parent_task,
                                                         description,
                                                         rad_function_id)
         SELECT lang_code,
                function_id,
                main_menu,
                sub_menu_1,
                sub_menu_2,
                baloon_help,
                branch_module,
                branch_parent_task,
                description,
                rad_function_id
           FROM fbtb_function_description@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_fbtb_txnlog_master
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'FBTB TXNLOG MASTER DERIVE',
                   'FBTB_TXNLOG_MASTER',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_fbtb_txnlog_master';

      INSERT INTO stglive.src_fbtb_txnlog_master (branchcode,
                                                  postingdate,
                                                  functionid,
                                                  xrefid,
                                                  txnstageid,
                                                  locked,
                                                  lockedby,
                                                  lockedtime,
                                                  txnstatus,
                                                  stagestatus,
                                                  reconciled,
                                                  onlinestatus,
                                                  eligible,
                                                  assignedto,
                                                  wfinitdate,
                                                  wfenddate,
                                                  stagestartdate,
                                                  makerid,
                                                  checkerid,
                                                  checkerdatestamp,
                                                  txnactdet,
                                                  txnamtdet,
                                                  txnbrndet,
                                                  txnccydet,
                                                  txnseqno,
                                                  reversal,
                                                  checkerremarks,
                                                  makerremarks,
                                                  firststepdone,
                                                  firststepmaker,
                                                  tokenno)
         SELECT branchcode,
                postingdate,
                functionid,
                xrefid,
                txnstageid,
                locked,
                lockedby,
                lockedtime,
                txnstatus,
                stagestatus,
                reconciled,
                onlinestatus,
                eligible,
                assignedto,
                wfinitdate,
                wfenddate,
                stagestartdate,
                makerid,
                checkerid,
                checkerdatestamp,
                txnactdet,
                txnamtdet,
                txnbrndet,
                txnccydet,
                txnseqno,
                reversal,
                checkerremarks,
                makerremarks,
                firststepdone,
                firststepmaker,
                tokenno
           FROM fbtb_txnlog_master@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_cltb_acc_coll_link_dtls
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'CLTB ACC COLL LINK DTLS DERIVE',
                   'CLTB_ACC_COLL_LINK_DTLS',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_cltb_acc_coll_link_dtls';

      INSERT INTO stglive.src_cltb_acc_coll_link_dtls (account_number,
                                                       branch_code,
                                                       linkage_type,
                                                       linked_reference_no,
                                                       description,
                                                       linkage_branch,
                                                       linkage_currency,
                                                       overall_amount,
                                                       collateral_category,
                                                       haircut,
                                                       limit_amount,
                                                       linked_amount,
                                                       linked_percent_number,
                                                       util_order,
                                                       reinstate_order,
                                                       util_amount,
                                                       commitment_product,
                                                       status,
                                                       taken_over)
         SELECT account_number,
                branch_code,
                linkage_type,
                linked_reference_no,
                description,
                linkage_branch,
                linkage_currency,
                overall_amount,
                collateral_category,
                haircut,
                limit_amount,
                linked_amount,
                linked_percent_number,
                util_order,
                reinstate_order,
                util_amount,
                commitment_product,
                status,
                taken_over
           FROM cltb_acc_coll_link_dtls@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_ldtb_contract_master_ld
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'LDTB CONTRACT MASTER LD DERIVE',
                   'LDTB_CONTRACT_MASTER_LD',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_ldtb_contract_master_ld';

      INSERT INTO stglive.src_ldtb_contract_master_ld (
                     contract_ref_no,
                     version_no,
                     event_seq_no,
                     branch,
                     product,
                     product_type,
                     module,
                     payment_method,
                     rollover_allowed,
                     user_ref_no,
                     counterparty,
                     currency,
                     amount,
                     lcy_amount,
                     original_start_date,
                     uncovered_amount,
                     CLUSTER_ID,
                     notice_date,
                     cluster_size,
                     dealer,
                     booking_date,
                     value_date,
                     maturity_type,
                     maturity_date,
                     notice_days,
                     remarks,
                     main_comp,
                     dflt_settle_ac,
                     dflt_settle_ac_branch,
                     iccf_status,
                     settlement_status,
                     tax_status,
                     brokerage_status,
                     rel_reference,
                     tenor,
                     credit_line,
                     broker_code,
                     tax_scheme,
                     rollover_count,
                     user_defined_status,
                     contract_status,
                     broker_confirm_status,
                     cparty_confirm_status,
                     original_face_value,
                     job_picked_up,
                     charge_status,
                     interface_ref_no,
                     rb_penalty_applicable,
                     dflt_settle_ccy,
                     dr_setl_ac,
                     dr_setl_ac_br,
                     dr_setl_ccy,
                     loan_stmt_cycle,
                     loan_stmt_type,
                     statement_day,
                     cust_margin,
                     both_days,
                     parent_ext_contract_ref_no,
                     assigned_contract,
                     syndication_ref_no,
                     borrower_leg,
                     drawdown_no,
                     main_comp_rate,
                     main_comp_spread,
                     base_index_rate,
                     int_rolled_amt,
                     tranche_ref_no,
                     max_drawdown_amount,
                     apy,
                     subsidy_percentage,
                     multiple_cif,
                     risk_free_exp_amount,
                     exposure_category,
                     auto_prov_reqd,
                     annuity_loan,
                     int_period_basis,
                     allow_prepay,
                     contract_derived_status,
                     prov_ccy_type,
                     bill_ref_no,
                     billing_notice_days,
                     dealing_method,
                     purpose_of_syndication,
                     last_available_date,
                     admin_id,
                     cascade_participation,
                     settlement_seq_no,
                     rollover_mechanism,
                     rollover_method,
                     user_input_maturity_date,
                     lcy_eqvt_for_index_loans,
                     main_comp_amount,
                     main_comp_rate_code,
                     ba_reference,
                     internal_swap_ref_no,
                     tenor_new)
         SELECT contract_ref_no,
                version_no,
                event_seq_no,
                branch,
                product,
                product_type,
                module,
                payment_method,
                rollover_allowed,
                user_ref_no,
                counterparty,
                currency,
                amount,
                lcy_amount,
                original_start_date,
                uncovered_amount,
                CLUSTER_ID,
                notice_date,
                cluster_size,
                dealer,
                booking_date,
                value_date,
                maturity_type,
                maturity_date,
                notice_days,
                remarks,
                main_comp,
                dflt_settle_ac,
                dflt_settle_ac_branch,
                iccf_status,
                settlement_status,
                tax_status,
                brokerage_status,
                rel_reference,
                tenor,
                credit_line,
                broker_code,
                tax_scheme,
                rollover_count,
                user_defined_status,
                contract_status,
                broker_confirm_status,
                cparty_confirm_status,
                original_face_value,
                job_picked_up,
                charge_status,
                interface_ref_no,
                rb_penalty_applicable,
                dflt_settle_ccy,
                dr_setl_ac,
                dr_setl_ac_br,
                dr_setl_ccy,
                loan_stmt_cycle,
                loan_stmt_type,
                statement_day,
                cust_margin,
                both_days,
                parent_ext_contract_ref_no,
                assigned_contract,
                syndication_ref_no,
                borrower_leg,
                drawdown_no,
                main_comp_rate,
                main_comp_spread,
                base_index_rate,
                int_rolled_amt,
                tranche_ref_no,
                max_drawdown_amount,
                apy,
                subsidy_percentage,
                multiple_cif,
                risk_free_exp_amount,
                exposure_category,
                auto_prov_reqd,
                annuity_loan,
                int_period_basis,
                allow_prepay,
                contract_derived_status,
                prov_ccy_type,
                bill_ref_no,
                billing_notice_days,
                dealing_method,
                purpose_of_syndication,
                last_available_date,
                admin_id,
                cascade_participation,
                settlement_seq_no,
                rollover_mechanism,
                rollover_method,
                user_input_maturity_date,
                lcy_eqvt_for_index_loans,
                main_comp_amount,
                main_comp_rate_code,
                ba_reference,
                internal_swap_ref_no,
                tenor_new
           FROM ldtb_contract_master_ld@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_sttm_exposure_details
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'STTM EXPOSURE DETAILS DERIVE',
                   'STTM_EXPOSURE_DETAILS',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_sttm_exposure_details';

      INSERT INTO stglive.src_sttm_exposure_details (customer_no,
                                                     sector_code,
                                                     sub_sector_code,
                                                     risk_code,
                                                     region_code)
         SELECT customer_no,
                sector_code,
                sub_sector_code,
                risk_code,
                region_code
           FROM sttm_exposure_details@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_ictb_udevals
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'ICTB UDEVALS DERIVE',
                   'ICTB_UDEVALS',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_ictb_udevals';

      INSERT INTO stglive.src_ictb_udevals (prod,
                                            cond_type,
                                            cond_key,
                                            ude_id,
                                            ude_eff_dt,
                                            amt,
                                            rate,
                                            rate_code,
                                            rate_ccy,
                                            ude_dt,
                                            rate_dt,
                                            ude_variance)
         SELECT prod,
                cond_type,
                cond_key,
                ude_id,
                ude_eff_dt,
                amt,
                rate,
                rate_code,
                rate_ccy,
                ude_dt,
                rate_dt,
                ude_variance
           FROM ictb_udevals@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_lctb_availments
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'LCTB AVAILMENTS DERIVE',
                   'LCTB_AVAILMENTS',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_lctb_availments';

      INSERT INTO stglive.src_lctb_availments (contract_ref_no,
                                               version_no,
                                               event_seq_no,
                                               event_code,
                                               availment_amt,
                                               availment_type,
                                               current_availability,
                                               os_liability,
                                               related_ref_no,
                                               remarks,
                                               reversal_event_seq_no,
                                               value_date,
                                               liability_amt,
                                               subsystemstat,
                                               released_liability,
                                               available_confirmed_amt,
                                               uncnfirm_availed_amt,
                                               available_undertaking_amount,
                                               availed_notundertaking_amount,
                                               available_unconfirmed_amt)
         SELECT contract_ref_no,
                version_no,
                event_seq_no,
                event_code,
                availment_amt,
                availment_type,
                current_availability,
                os_liability,
                related_ref_no,
                remarks,
                reversal_event_seq_no,
                value_date,
                liability_amt,
                subsystemstat,
                released_liability,
                available_confirmed_amt,
                uncnfirm_availed_amt,
                available_undertaking_amount,
                availed_notundertaking_amount,
                available_unconfirmed_amt
           FROM lctb_availments@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_catm_stop_payments
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'CATM STOP PAYMENTS DERIVE',
                   'CATM_STOP_PAYMENTS',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_catm_stop_payments';

      INSERT INTO stglive.src_catm_stop_payments (branch,
                                                  account,
                                                  stop_payment_no,
                                                  stop_payment_type,
                                                  start_check_no,
                                                  end_check_no,
                                                  amount,
                                                  effective_date,
                                                  expiry_date,
                                                  confirmed,
                                                  maker_id,
                                                  maker_dt_stamp,
                                                  checker_id,
                                                  checker_dt_stamp,
                                                  mod_no,
                                                  once_auth,
                                                  auth_stat,
                                                  record_stat,
                                                  remarks,
                                                  scode,
                                                  xref,
                                                  advice_required_ind,
                                                  trn_ref_no,
                                                  apply_charge)
         SELECT branch,
                account,
                stop_payment_no,
                stop_payment_type,
                start_check_no,
                end_check_no,
                amount,
                effective_date,
                expiry_date,
                confirmed,
                maker_id,
                maker_dt_stamp,
                checker_id,
                checker_dt_stamp,
                mod_no,
                once_auth,
                auth_stat,
                record_stat,
                remarks,
                scode,
                xref,
                advice_required_ind,
                trn_ref_no,
                apply_charge
           FROM catm_stop_payments@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_sttms_cust_account_dormant
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'STTMS CUST ACCOUNT DORMANT DERIVE',
                   'STTMS_CUST_ACCOUNT_DORMANT',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_sttms_cust_account_dormant';

      INSERT INTO stglive.src_sttms_cust_account_dormant (branch_code,
                                                          cust_ac_no,
                                                          dormancy_start_dt,
                                                          dormancy_end_dt,
                                                          ref_no)
         SELECT branch_code,
                cust_ac_no,
                dormancy_start_dt,
                dormancy_end_dt,
                ref_no
           FROM sttms_cust_account_dormancy@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_ldtm_product_master
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'LDTM PRODUCT MASTER DERIVE',
                   'LDTM_PRODUCT_MASTER',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;


      EXECUTE IMMEDIATE 'truncate table src_ldtm_product_master';

      INSERT INTO stglive.src_ldtm_product_master (
                     product,
                     tax_applicable,
                     brokerage_applicable,
                     rekey_ccy,
                     rekey_rate_amount,
                     rekey_value_date,
                     rekey_contract_amount,
                     rekey_cparty,
                     liq_back_valued_schedules,
                     rekey_maturity_date,
                     prepayment_penalty,
                     recompute_schedules,
                     track_accrued_interest,
                     forward_dating_allowed,
                     product_type,
                     payment_method,
                     certificate_of_deposit,
                     negotiable,
                     rollover_allowed,
                     default_tax_scheme,
                     accrual_frequency,
                     accrual_start_month,
                     accrual_start_date,
                     capitalise,
                     min_tenor,
                     std_tenor,
                     max_tenor,
                     tenor_unit,
                     liquidation_mode,
                     default_cluster,
                     billing_notice_days,
                     grace_days,
                     prod_sch_type,
                     normal_rate_variance,
                     maximum_rate_variance,
                     block_product,
                     min_amt_partial_liq,
                     min_amt_ccy,
                     cascade_schedules,
                     holiday_ccy,
                     ignore_holidays,
                     move_across_month,
                     schedule_movement,
                     settlement_reqd,
                     intra_day_deal,
                     loan_stmt_cycle,
                     loan_stmt_type,
                     statement_day,
                     borrower_leg,
                     lead_agent,
                     multi_penal_components,
                     assignment_allowed,
                     asgn_suspence_gl,
                     verify_funds_for_principal,
                     verify_funds_for_interest,
                     verify_funds_for_penaltyamt,
                     rekey_acf_ccy,
                     rekey_acf_fee_amount,
                     rekey_acf_refund_amount,
                     rekey_acf_value_date,
                     rekey_acf_start_date,
                     rekey_acf_end_date,
                     apportion_princ_at_vami_yn,
                     participant_leg,
                     track_receivable_mliq,
                     track_receivable_aliq,
                     partial_payment_mliq,
                     allow_partial_redn_on_cmnt,
                     verify_drawdown_amount,
                     max_no_of_loans,
                     loan_product,
                     subsidy_allowed,
                     apy_calculation,
                     days_for_apy_calculation,
                     user_defined_sched,
                     multiple_cif,
                     annuity_loan,
                     auto_prov_required,
                     prov_frequency,
                     trs_applicable,
                     trs_rate,
                     trs_min_amt,
                     trs_min_ccy,
                     trs_linked_to,
                     auto_account,
                     account_class,
                     currency_type,
                     auto_ccy,
                     reverse_ld_pmnt,
                     sgen_reqd,
                     notc_reqd,
                     allow_sched_amend_after_sgen,
                     demand_basis,
                     holiday_months_flag,
                     holiday_months,
                     int_period_basis,
                     allow_prepay_int,
                     min_amt_prepmnt_penalty,
                     prov_ccy_type,
                     move_payment_sch,
                     move_revision_sch,
                     move_comm_redn_sch,
                     move_disburse_sch,
                     collect_during_amendment,
                     prepmt_basis,
                     prepmt_effective_from,
                     amend_past_paid_sch,
                     revaluation_rate_code,
                     revaluation_rate_type,
                     reval_start_month,
                     reval_start_date,
                     notice_day_basis,
                     holiday_default_basis,
                     dealing_method,
                     m_sch_schedule_movement,
                     participant_product,
                     cascade_participation,
                     utilization_reval_reqd,
                     revaluation_frequency,
                     consider_branch_holiday,
                     apply_facility_hol_ccy,
                     apply_contract_hol_ccy,
                     apply_local_hol_ccy,
                     tranche_type,
                     m_sch_ignore_holidays,
                     m_sch_move_across_month,
                     override_future_vd_rates,
                     prepmt_with_od_schedules,
                     disc_accr_applicable,
                     asset_tracking,
                     book_unearned_interest,
                     loan_against_bill)
         SELECT product,
                tax_applicable,
                brokerage_applicable,
                rekey_ccy,
                rekey_rate_amount,
                rekey_value_date,
                rekey_contract_amount,
                rekey_cparty,
                liq_back_valued_schedules,
                rekey_maturity_date,
                prepayment_penalty,
                recompute_schedules,
                track_accrued_interest,
                forward_dating_allowed,
                product_type,
                payment_method,
                certificate_of_deposit,
                negotiable,
                rollover_allowed,
                default_tax_scheme,
                accrual_frequency,
                accrual_start_month,
                accrual_start_date,
                capitalise,
                min_tenor,
                std_tenor,
                max_tenor,
                tenor_unit,
                liquidation_mode,
                default_cluster,
                billing_notice_days,
                grace_days,
                prod_sch_type,
                normal_rate_variance,
                maximum_rate_variance,
                block_product,
                min_amt_partial_liq,
                min_amt_ccy,
                cascade_schedules,
                holiday_ccy,
                ignore_holidays,
                move_across_month,
                schedule_movement,
                settlement_reqd,
                intra_day_deal,
                loan_stmt_cycle,
                loan_stmt_type,
                statement_day,
                borrower_leg,
                lead_agent,
                multi_penal_components,
                assignment_allowed,
                asgn_suspence_gl,
                verify_funds_for_principal,
                verify_funds_for_interest,
                verify_funds_for_penaltyamt,
                rekey_acf_ccy,
                rekey_acf_fee_amount,
                rekey_acf_refund_amount,
                rekey_acf_value_date,
                rekey_acf_start_date,
                rekey_acf_end_date,
                apportion_princ_at_vami_yn,
                participant_leg,
                track_receivable_mliq,
                track_receivable_aliq,
                partial_payment_mliq,
                allow_partial_redn_on_cmnt,
                verify_drawdown_amount,
                max_no_of_loans,
                loan_product,
                subsidy_allowed,
                apy_calculation,
                days_for_apy_calculation,
                user_defined_sched,
                multiple_cif,
                annuity_loan,
                auto_prov_required,
                prov_frequency,
                trs_applicable,
                trs_rate,
                trs_min_amt,
                trs_min_ccy,
                trs_linked_to,
                auto_account,
                account_class,
                currency_type,
                auto_ccy,
                reverse_ld_pmnt,
                sgen_reqd,
                notc_reqd,
                allow_sched_amend_after_sgen,
                demand_basis,
                holiday_months_flag,
                holiday_months,
                int_period_basis,
                allow_prepay_int,
                min_amt_prepmnt_penalty,
                prov_ccy_type,
                move_payment_sch,
                move_revision_sch,
                move_comm_redn_sch,
                move_disburse_sch,
                collect_during_amendment,
                prepmt_basis,
                prepmt_effective_from,
                amend_past_paid_sch,
                revaluation_rate_code,
                revaluation_rate_type,
                reval_start_month,
                reval_start_date,
                notice_day_basis,
                holiday_default_basis,
                dealing_method,
                m_sch_schedule_movement,
                participant_product,
                cascade_participation,
                utilization_reval_reqd,
                revaluation_frequency,
                consider_branch_holiday,
                apply_facility_hol_ccy,
                apply_contract_hol_ccy,
                apply_local_hol_ccy,
                tranche_type,
                m_sch_ignore_holidays,
                m_sch_move_across_month,
                override_future_vd_rates,
                prepmt_with_od_schedules,
                disc_accr_applicable,
                asset_tracking,
                book_unearned_interest,
                loan_against_bill
           FROM ldtm_product_master@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_ictm_pr_int_udevals
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'ICTM PR INT UDEVALS DERIVE',
                   'ICTM_PR_INT_UDEVALS',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_ictm_pr_int_udevals';

      INSERT INTO stglive.src_ictm_pr_int_udevals (product_code,
                                                   aclass,
                                                   ccy_code,
                                                   ude_eff_dt,
                                                   ude_id,
                                                   ude_value,
                                                   rate_code,
                                                   branch_code,
                                                   td_rate_code)
         SELECT product_code,
                aclass,
                ccy_code,
                ude_eff_dt,
                ude_id,
                ude_value,
                rate_code,
                branch_code,
                td_rate_code
           FROM ictm_pr_int_udevals@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_sttm_sub_sector_details
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'STTM SUB SECTOR DETAILS DERIVE',
                   'STTM_SUB_SECTOR_DETAILS',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_sttm_sub_sector_details';

      INSERT INTO stglive.src_sttm_sub_sector_details (SECTOR_CODE,
                                                       SUB_SECTOR_CODE,
                                                       SUB_SECTOR_DESC,
                                                       PERCENTAGE,
                                                       LIMIT_AMOUNT,
                                                       UTILIZATION,
                                                       BANK_CODE)
         SELECT SECTOR_CODE,
                SUB_SECTOR_CODE,
                SUB_SECTOR_DESC,
                PERCENTAGE,
                LIMIT_AMOUNT,
                UTILIZATION,
                BANK_CODE
           FROM fcubslive.sttm_sub_sector_details@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   ----------------------

   PROCEDURE prc_sttm_sector_details
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'STTM SECTOR DETAILS DERIVE',
                   'STTM_SECTOR_DETAILS',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_sttm_sector_details';

      INSERT INTO stglive.src_sttm_sector_details (SECTOR_CODE,
                                                   SECTOR_DESC,
                                                   PERCENTAGE,
                                                   LIMIT_AMOUNT,
                                                   UTILIZATION,
                                                   BANK_CODE)
         SELECT SECTOR_CODE,
                SECTOR_DESC,
                PERCENTAGE,
                LIMIT_AMOUNT,
                UTILIZATION,
                BANK_CODE
           FROM fcubslive.sttm_sector_details@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   -----

   PROCEDURE prc_sttm_risk_details
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'STTM RISK DETAILS DERIVE',
                   'STTM_RISK_DETAILS',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_sttm_risk_details';

      INSERT INTO stglive.src_sttm_risk_details (RISK_CODE,
                                                 RISK_DESC,
                                                 PERCENTAGE,
                                                 LIMIT_AMOUNT,
                                                 UTILIZATION,
                                                 BANK_CODE)
         SELECT RISK_CODE,
                RISK_DESC,
                PERCENTAGE,
                LIMIT_AMOUNT,
                UTILIZATION,
                BANK_CODE
           FROM fcubslive.sttm_risk_details@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_STTM_region_DETAILS
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'STTM REGION DETAILS DERIVE',
                   'STTM_REGION_DETAILS',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_STTM_region_DETAILS';

      INSERT INTO stglive.src_STTM_region_DETAILS (REGION_CODE,
                                                   REGION_DESC,
                                                   PERCENTAGE,
                                                   LIMIT_AMOUNT,
                                                   UTILIZATION,
                                                   BANK_CODE)
         SELECT REGION_CODE,
                REGION_DESC,
                PERCENTAGE,
                LIMIT_AMOUNT,
                UTILIZATION,
                BANK_CODE
           FROM fcubslive.STTM_region_DETAILS@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;

   PROCEDURE prc_CS_ACCOUNT_CARDLIMITS
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   ' CARD LIMITS DERIVE ',
                   'CS_ACCOUNT_CARDLIMITS',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_CS_ACCOUNT_CARDLIMITS';

      INSERT INTO stglive.src_CS_ACCOUNT_CARDLIMITS (ACCOUNT_NUMBER,
                                                     ACCOUNT_NAME,
                                                     SIGN_STAT,
                                                     CARD_STAT,
                                                     CREATION,
                                                     EXPIRY_DATE,
                                                     NEW_CREDIT_LIMIT,
                                                     UTILIZATION,
                                                     PRIMARY_STATUS,
                                                     CARD_TYPE,
                                                     CURRENCY)
         SELECT ACCOUNT_NUMBER,
                ACCOUNT_NAME,
                SIGN_STAT,
                CARD_STAT,
                CREATION,
                EXPIRY_DATE,
                NEW_CREDIT_LIMIT,
                UTILIZATION,
                PRIMARY_STATUS,
                CARD_TYPE,
                CURRENCY
           FROM cardsys.CS_ACCOUNT_CARDLIMITS@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;
-- /* INcluded by Ayomide based on CBN Information Sharing Systems Project 18-feb-2019 */
--  procedure prc_STTM_TIER_ACCCLS_CUSTOM as
--
--v_message           varchar2(4000);
--v_rows_processed    number;
--v_date              date := trunc(sysdate);
--v_seq               number;
--v_rows_count        integer;
--v_sql               varchar2(10000);
--
--
--begin
--
--  select process_seq.nextval into v_seq from dual;
--
--  insert into fcubs_process_log(process_sequence, process_type, process_name, reference_date, status, message, row_count, start_date, end_date, duration)
--   values (v_seq, 'STTM TIER ACCCLS CUSTOM','STTM_TIER_ACCCLS_CUSTOM', v_date, 'STARTED', null, 0, sysdate, null, null);
--
--  commit;
--
-- execute immediate 'truncate table SRC_STTM_TIER_ACCCLS_CUSTOM';
--
--  insert into stglive.SRC_STTM_TIER_ACCCLS_CUSTOM(TIER,ACCOUNT_CLASS )
--  select TIER, ACCOUNT_CLASS
--    from FCUBSLIVE.STTM_TIER_ACCCLS_CUSTOM@loc_fcubslive;
--
--      v_rows_processed := sql%rowcount;
--
--  update fcubs_process_log
--     set status     = 'COMPLETED',
--         message    = 'SUCCESS',
--         row_count  = v_rows_processed,
--         end_date   = sysdate,
--         duration   = (sysdate - start_date)  * 24 * 3600
--   where process_sequence = v_seq;
--
--  commit;
--
--  exception when others then
--  v_message := substr(sqlerrm,1,200);
--
--  update fcubs_process_log
--    set status     = 'FAILED',
--        message    = v_message,
--        row_count  = 0,
--        end_date   = sysdate,
--        duration   = (sysdate - start_date)  * 24 * 3600
--    where process_sequence = v_seq;
--  commit;
--
--  end;
--
--  /* INcluded by Ayomide based on CBN Information Sharing Systems Project 18-feb-2019 */
--  procedure prc_CSTM_FXN_USERDEF_FIELDS as
--
--v_message           varchar2(4000);
--v_rows_processed    number;
--v_date              date := trunc(sysdate);
--v_seq               number;
--v_rows_count        integer;
--v_sql               varchar2(10000);
--
--
--begin
--
--  select process_seq.nextval into v_seq from dual;
--
--  insert into fcubs_process_log(process_sequence, process_type, process_name, reference_date, status, message, row_count, start_date, end_date, duration)
--   values (v_seq, 'CSTM FUNCTION USERDEF FIELDS','CSTM_FUNCTION_USERDEF_FIELDS', v_date, 'STARTED', null, 0, sysdate, null, null);
--
--  commit;
--
-- execute immediate 'truncate table SRC_CSTM_FXN_USERDEF_FIELDS';
--
--  insert into stglive.SRC_CSTM_FXN_USERDEF_FIELDS
--  select *
--    from FCUBSLIVE.CSTM_FUNCTION_USERDEF_FIELDS@loc_fcubslive;
--
--      v_rows_processed := sql%rowcount;
--
--  update fcubs_process_log
--     set status     = 'COMPLETED',
--         message    = 'SUCCESS',
--         row_count  = v_rows_processed,
--         end_date   = sysdate,
--         duration   = (sysdate - start_date)  * 24 * 3600
--   where process_sequence = v_seq;
--
--  commit;
--
--  exception when others then
--  v_message := substr(sqlerrm,1,200);
--
--  update fcubs_process_log
--    set status     = 'FAILED',
--        message    = v_message,
--        row_count  = 0,
--        end_date   = sysdate,
--        duration   = (sysdate - start_date)  * 24 * 3600
--    where process_sequence = v_seq;
--  commit;
--
--  end;
--
-- /* INcluded by Ayomide based on CBN Information Sharing Systems Project 18-feb-2019 */
--  procedure prc_SVTM_CIF_SIG_MASTER as
--
--v_message           varchar2(4000);
--v_rows_processed    number;
--v_date              date := trunc(sysdate);
--v_seq               number;
--v_rows_count        integer;
--v_sql               varchar2(10000);
--
--
--begin
--
--  select process_seq.nextval into v_seq from dual;
--
--  insert into fcubs_process_log(process_sequence, process_type, process_name, reference_date, status, message, row_count, start_date, end_date, duration)
--   values (v_seq, 'SVTM CIF SIG MASTER','SVTM_CIF_SIG_MASTER', v_date, 'STARTED', null, 0, sysdate, null, null);
--
--  commit;
--
-- execute immediate 'truncate table SRC_SVTM_CIF_SIG_MASTER';
--
--  insert into stglive.SRC_SVTM_CIF_SIG_MASTER
--  select *
--    from FCUBSLIVE.SVTM_CIF_SIG_MASTER@loc_fcubslive;
--
--      v_rows_processed := sql%rowcount;
--
--  update fcubs_process_log
--     set status     = 'COMPLETED',
--         message    = 'SUCCESS',
--         row_count  = v_rows_processed,
--         end_date   = sysdate,
--         duration   = (sysdate - start_date)  * 24 * 3600
--   where process_sequence = v_seq;
--
--  commit;
--
--  exception when others then
--  v_message := substr(sqlerrm,1,200);
--
--  update fcubs_process_log
--    set status     = 'FAILED',
--        message    = v_message,
--        row_count  = 0,
--        end_date   = sysdate,
--        duration   = (sysdate - start_date)  * 24 * 3600
--    where process_sequence = v_seq;
--  commit;
--
--  end;

PROCEDURE prc_GETM_OD_POOL_COLL_CUSTOM
   AS
      v_message          VARCHAR2 (4000);
      v_rows_processed   NUMBER;
      v_date             DATE := TRUNC (SYSDATE);
      v_seq              NUMBER;
      v_rows_count       INTEGER;
      v_sql              VARCHAR2 (10000);
   BEGIN
      SELECT process_seq.NEXTVAL INTO v_seq FROM DUAL;

      INSERT INTO fcubs_process_log (process_sequence,
                                     process_type,
                                     process_name,
                                     reference_date,
                                     status,
                                     MESSAGE,
                                     row_count,
                                     start_date,
                                     end_date,
                                     duration)
           VALUES (v_seq,
                   'GETM_OD_POOL_COLL_CUSTOM',
                   'GETM_OD_POOL_COLL_CUSTOM',
                   v_date,
                   'STARTED',
                   NULL,
                   0,
                   SYSDATE,
                   NULL,
                   NULL);

      COMMIT;

      EXECUTE IMMEDIATE 'truncate table src_GETM_OD_POOL_COLL_CUSTOM';

      INSERT INTO stglive.src_GETM_OD_POOL_COLL_CUSTOM (
                     ID,
       LIAB_ID,
       POOL_ID,
       ORDER_NO,
       TYPE,
       BRANCH_CODE,
       COLLATERAL_ID,
       COLLATERAL_CURRENCY,
       COLLATERAL_AMOUNT,
       LINKED_AMOUNT,
       LINKED_AMOUNT_POOL_CCY,
       UTILIZATION,
       LINKED_PERCENT_NUMBER,
       AVAILABLE_INTEREST_RATE,
       INTEREST_SPREAD,
       RATE_OF_INTEREST,
       EXPIRY_DATE,
       START_DATE,
       EFF_START_DATE,
       EFF_END_DATE,
       SEQ_NO)
         SELECT ID,
       LIAB_ID,
       POOL_ID,
       ORDER_NO,
       TYPE,
       BRANCH_CODE,
       COLLATERAL_ID,
       COLLATERAL_CURRENCY,
       COLLATERAL_AMOUNT,
       LINKED_AMOUNT,
       LINKED_AMOUNT_POOL_CCY,
       UTILIZATION,
       LINKED_PERCENT_NUMBER,
       AVAILABLE_INTEREST_RATE,
       INTEREST_SPREAD,
       RATE_OF_INTEREST,
       EXPIRY_DATE,
       START_DATE,
       EFF_START_DATE,
       EFF_END_DATE,
       SEQ_NO
           FROM GETM_OD_POOL_COLL_CUSTOM@loc_fcubslive;

      v_rows_processed := SQL%ROWCOUNT;

      UPDATE fcubs_process_log
         SET status = 'COMPLETED',
             MESSAGE = 'SUCCESS',
             row_count = v_rows_processed,
             end_date = SYSDATE,
             duration = (SYSDATE - start_date) * 24 * 3600
       WHERE process_sequence = v_seq;

      COMMIT;
   EXCEPTION
      WHEN OTHERS
      THEN
         v_message := SUBSTR (SQLERRM, 1, 200);

         UPDATE fcubs_process_log
            SET status = 'FAILED',
                MESSAGE = v_message,
                row_count = 0,
                end_date = SYSDATE,
                duration = (SYSDATE - start_date) * 24 * 3600
          WHERE process_sequence = v_seq;

         COMMIT;
   END;


END;
/
